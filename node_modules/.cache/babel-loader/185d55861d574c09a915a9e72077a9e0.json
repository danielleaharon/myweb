{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/\\u05E2\\u05D1\\u05D5\\u05D3\\u05D5\\u05EA \\u05DC\\u05D4\\u05D2\\u05E9\\u05D4/myweb/src/components/snakes/components/Sidebar.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\nimport * as Action from './redux/actions';\nimport * as Helper from './global/utils/Helper';\n\nlet findPlayerByIndex = (state, index) => {\n  if (!Number.isInteger(index)) {\n    return {\n      name: 'Undefined'\n    };\n  }\n\n  let players = state.player.get('all').toArray();\n  return players[index];\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    dice: state.game.get('config').get('dice'),\n    winner: state.game.get('config').get('winner'),\n    perfect_throws: state.game.get('config').get('perfect_throws'),\n    current_player: findPlayerByIndex(state, state.game.get('config').get('current')),\n    winning_player: findPlayerByIndex(state, state.game.get('config').get('winner'))\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  playerUpdatePosition: data => dispatch(Action.playerUpdatePosition(data, true)),\n  gameRollDice: () => dispatch(Action.gameRollDice()),\n  gameUpdatePerfectThrows: () => dispatch(Action.gameUpdatePerfectThrows())\n});\n\nlet Sidebar = props => {\n  if (props.perfect_throws === null) {\n    setTimeout(() => {\n      props.gameUpdatePerfectThrows();\n    }, 100);\n  }\n\n  const movePlayer = () => {\n    if (!props.dice) {\n      return false;\n    }\n\n    let data = {\n      id: props.current_player.id,\n      moves: props.dice,\n      tile: props.current_player.tile,\n      index: props.current_player.index\n    };\n    props.playerUpdatePosition(data);\n  };\n\n  let player_dashboard = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"player-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Current Player\"), React.createElement(\"p\", {\n    className: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, props.current_player.name), React.createElement(\"div\", {\n    className: \"moves-to-win\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"You are \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"\\\"\", props.perfect_throws || 'calculating', \"\\\"\"), \" moves away from a perfect win.\")), React.createElement(\"div\", {\n    className: \"dice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, props.dice ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, props.dice) : React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"\\u2323\"))), React.createElement(\"div\", {\n    className: \"m-t-20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, props.dice ? React.createElement(\"button\", {\n    className: \"full green\",\n    onClick: movePlayer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Move\") : React.createElement(\"button\", {\n    className: \"full blue\",\n    onClick: props.gameRollDice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Roll the Dice\")));\n  let winner_dashboard = React.createElement(\"div\", {\n    className: \"winner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"game-over\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Game Over\"), React.createElement(\"p\", {\n    className: \"m-t-20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, props.winning_player.name, \" Won!\"), React.createElement(\"div\", {\n    className: \"m-t-20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/stats\",\n    className: \"button full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"View Stats\"), React.createElement(\"a\", {\n    className: \"button full m-t-10\",\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Reset Game\")));\n  return React.createElement(\"aside\", {\n    id: \"main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Control Panel\"), props.winner !== null ? winner_dashboard : player_dashboard);\n};\n\nconst ConnectSidebar = connect(mapStateToProps, mapDispatchToProps)(Sidebar);\nexport default ConnectSidebar;","map":{"version":3,"sources":["/Users/user/Desktop/עבודות להגשה/myweb/src/components/snakes/components/Sidebar.js"],"names":["React","connect","Link","Action","Helper","findPlayerByIndex","state","index","Number","isInteger","name","players","player","get","toArray","mapStateToProps","ownProps","dice","game","winner","perfect_throws","current_player","winning_player","mapDispatchToProps","dispatch","playerUpdatePosition","data","gameRollDice","gameUpdatePerfectThrows","Sidebar","props","setTimeout","movePlayer","id","moves","tile","player_dashboard","winner_dashboard","ConnectSidebar"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router';\nimport * as Action from './redux/actions';\nimport * as Helper from './global/utils/Helper'; \n\n\nlet findPlayerByIndex = (state, index) => {\n\tif( ! Number.isInteger( index ) ) {\n\t\treturn { name: 'Undefined' };\n\t}\n\n\tlet players = state.player.get('all').toArray();\n\treturn players[index];\n}\n\nconst mapStateToProps = ( state, ownProps ) => {\n\treturn {\n\t\tdice: state.game.get('config').get('dice'),\n\t\twinner: state.game.get('config').get('winner'),\n\t\tperfect_throws: state.game.get('config').get('perfect_throws'),\n\t\tcurrent_player: findPlayerByIndex( state, state.game.get('config').get('current') ),\n\t\twinning_player: findPlayerByIndex( state, state.game.get('config').get('winner') ),\n\t}\n}\n\nconst mapDispatchToProps = dispatch => ({\n    playerUpdatePosition: (data) => dispatch( Action.playerUpdatePosition(data, true) ),\n    gameRollDice: () => dispatch( Action.gameRollDice() ),\n    gameUpdatePerfectThrows: () => dispatch( Action.gameUpdatePerfectThrows() ),\n});\n\n\n\n\n\nlet Sidebar = ( props ) => {\n\n\tif( props.perfect_throws === null ) {\n\t\tsetTimeout( () => {\n\t\t\tprops.gameUpdatePerfectThrows();\n\t\t}, 100 );\n\t}\n\n\n\tconst movePlayer = () => {\n\t\tif( ! props.dice ) {\n\t\t\treturn false;\n\t\t}\n\t\tlet data = {\n\t\t\tid: props.current_player.id,\n\t\t\tmoves: props.dice,\n\t\t\ttile: props.current_player.tile,\n\t\t\tindex: props.current_player.index,\n\t\t};\n\t\tprops.playerUpdatePosition( data );\n\t}\n\n\n\n\tlet player_dashboard = (\n\t\t<div>\n\t\t\t<div className=\"player-info\">\n\t\t\t\t<p>Current Player</p>\n\t\t\t\t<p className=\"name\">{ props.current_player.name }</p>\n\t\t\t\t<div className=\"moves-to-win\">\n\t\t\t\t\tYou are <strong>\"{ props.perfect_throws || 'calculating' }\"</strong> moves away from a perfect win.\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className=\"dice\">\n\t\t\t\t<div className=\"number\">\n\t\t\t\t\t{ props.dice ?\n\t\t\t\t\t\t<span>{ props.dice }</span> : <span>&#8995;</span>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className=\"m-t-20\">\n\t\t\t\t{ props.dice ?\n\t\t\t\t\t<button className=\"full green\" onClick={ movePlayer }>Move</button>\n\t\t\t\t\t:\n\t\t\t\t\t<button className=\"full blue\" onClick={ props.gameRollDice }>Roll the Dice</button>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t);\n\n\n\tlet winner_dashboard = (\n\t\t<div className=\"winner\">\n\t\t\t<p className=\"game-over\">Game Over</p>\n\t\t\t<p className=\"m-t-20\">{ props.winning_player.name } Won!</p>\n\t\t\t<div className=\"m-t-20\">\n\t\t\t\t<Link to=\"/stats\" className=\"button full\">View Stats</Link>\n\t\t\t\t<a className=\"button full m-t-10\" href=\"/\">Reset Game</a>\n\t\t\t</div>\n\t\t</div>\n\t);\n\n\n\treturn (\n\t\t<aside id=\"main\">\n\t\t\t<h2>Control Panel</h2>\n\t\t\t{ props.winner !== null ?\n\t\t\t\twinner_dashboard\n\t\t\t\t:\n\t\t\t\tplayer_dashboard\n\t\t\t}\n\t\t</aside>\n\t)\n\n\n}\n\n\n\n\nconst ConnectSidebar = connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(Sidebar)\n\n\nexport default ConnectSidebar;\n\n\n\n"]},"metadata":{},"sourceType":"module"}