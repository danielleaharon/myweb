{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/\\u05E2\\u05D1\\u05D5\\u05D3\\u05D5\\u05EA \\u05DC\\u05D4\\u05D2\\u05E9\\u05D4/myweb/src/components/snakes/components/Canvas.Grid.js\";\nimport React from 'react';\nimport { Layer, Rect, Group, Text } from 'react-konva';\nimport { styles } from '../styles';\nimport { GRID_WIDTH, GRID_HEIGHT } from '../config/variables';\nexport default class CanvasGrid extends React.Component {\n  render() {\n    const {\n      layout,\n      box: {\n        width: boxWidth,\n        height: boxHeight\n      },\n      width,\n      height\n    } = this.props.grid;\n    return React.createElement(Layer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, Object.keys(layout).map(box => {\n      const isEven = box % 2 === 0;\n      return React.createElement(Group, {\n        key: `box_${box}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(Rect, {\n        x: 0,\n        y: 0,\n        width: width,\n        height: height,\n        stroke: styles.darkBlue,\n        strokeWidth: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }), React.createElement(Rect, {\n        x: layout[box].x - boxWidth / 2,\n        y: layout[box].y - boxHeight / 2,\n        width: boxWidth,\n        height: boxHeight,\n        fill: isEven ? styles.darkBlue : styles.lightBlue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), React.createElement(Text, {\n        x: layout[box].x - boxWidth / 2,\n        y: layout[box].y - boxHeight / 2,\n        fill: isEven ? styles.lightBlue : styles.darkBlue,\n        text: box,\n        padding: 4,\n        fontSize: 16,\n        fontFamily: 'arial',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/user/Desktop/עבודות להגשה/myweb/src/components/snakes/components/Canvas.Grid.js"],"names":["React","Layer","Rect","Group","Text","styles","GRID_WIDTH","GRID_HEIGHT","CanvasGrid","Component","render","layout","box","width","boxWidth","height","boxHeight","props","grid","Object","keys","map","isEven","darkBlue","x","y","lightBlue"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,IAA7B,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,qBAAxC;AAEA,eAAe,MAAMC,UAAN,SAAyBR,KAAK,CAACS,SAA/B,CAAyC;AAEtDC,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,GAAG,EAAE;AAAEC,QAAAA,KAAK,EAAEC,QAAT;AAAmBC,QAAAA,MAAM,EAAEC;AAA3B,OAAf;AAAuDH,MAAAA,KAAvD;AAA8DE,MAAAA;AAA9D,QAAyE,KAAKE,KAAL,CAAWC,IAA1F;AAEA,WACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIC,MAAM,CAACC,IAAP,CAAYT,MAAZ,EAAoBU,GAApB,CAAyBT,GAAD,IAAS;AAC/B,YAAMU,MAAM,GAAGV,GAAG,GAAG,CAAN,KAAY,CAA3B;AACA,aACE,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAK,OAAMA,GAAI,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,CAAC,EAAE,CAAT;AAAY,QAAA,CAAC,EAAE,CAAf;AAAkB,QAAA,KAAK,EAAEC,KAAzB;AAAgC,QAAA,MAAM,EAAEE,MAAxC;AAAgD,QAAA,MAAM,EAAEV,MAAM,CAACkB,QAA/D;AAAyE,QAAA,WAAW,EAAE,CAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,IAAD;AACE,QAAA,CAAC,EAAIZ,MAAM,CAACC,GAAD,CAAN,CAAYY,CAAZ,GAAiBV,QAAQ,GAAG,CADnC;AACuC,QAAA,CAAC,EAAIH,MAAM,CAACC,GAAD,CAAN,CAAYa,CAAZ,GAAiBT,SAAS,GAAG,CADzE;AAEE,QAAA,KAAK,EAAIF,QAFX;AAEqB,QAAA,MAAM,EAAIE,SAF/B;AAGE,QAAA,IAAI,EAAIM,MAAM,GAAGjB,MAAM,CAACkB,QAAV,GAAqBlB,MAAM,CAACqB,SAH5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAOE,oBAAC,IAAD;AACE,QAAA,CAAC,EAAIf,MAAM,CAACC,GAAD,CAAN,CAAYY,CAAZ,GAAiBV,QAAQ,GAAG,CADnC;AACuC,QAAA,CAAC,EAAIH,MAAM,CAACC,GAAD,CAAN,CAAYa,CAAZ,GAAiBT,SAAS,GAAG,CADzE;AAEE,QAAA,IAAI,EAAIM,MAAM,GAAGjB,MAAM,CAACqB,SAAV,GAAsBrB,MAAM,CAACkB,QAF7C;AAGE,QAAA,IAAI,EAAIX,GAHV;AAGe,QAAA,OAAO,EAAI,CAH1B;AAIE,QAAA,QAAQ,EAAI,EAJd;AAIkB,QAAA,UAAU,EAAI,OAJhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF;AAeD,KAjBD,CAFJ,CADF;AAwBD;;AA7BqD","sourcesContent":["import React from 'react';\nimport { Layer, Rect, Group, Text } from 'react-konva';\nimport { styles } from '../styles';\nimport { GRID_WIDTH, GRID_HEIGHT } from '../config/variables';\n\nexport default class CanvasGrid extends React.Component {\n\n  render () {\n    const { layout, box: { width: boxWidth, height: boxHeight }, width, height } = this.props.grid;\n\n    return (\n      <Layer>\n        {\n          Object.keys(layout).map((box) => {\n            const isEven = box % 2 === 0;\n            return (\n              <Group key = {`box_${box}`}>\n                <Rect x={0} y={0} width={width} height={height} stroke={styles.darkBlue} strokeWidth={4} />\n                <Rect\n                  x = {layout[box].x - (boxWidth / 2)} y = {layout[box].y - (boxHeight / 2)}\n                  width = {boxWidth} height = {boxHeight}\n                  fill = {isEven ? styles.darkBlue : styles.lightBlue }\n                />\n                <Text\n                  x = {layout[box].x - (boxWidth / 2)} y = {layout[box].y - (boxHeight / 2)}\n                  fill = {isEven ? styles.lightBlue : styles.darkBlue }\n                  text = {box} padding = {4}\n                  fontSize = {16} fontFamily = {'arial'} />\n              </Group>\n            )\n          })\n        }\n      </Layer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}