{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/\\u05E2\\u05D1\\u05D5\\u05D3\\u05D5\\u05EA \\u05DC\\u05D4\\u05D2\\u05E9\\u05D4/myweb/src/components/tetris/tetris.js\";\nimport React from 'react';\nimport Tetris from 'react-tetris';\nimport './tetris.css';\nexport default function TetrisGame(props) {\n  React.useEffect(() => {\n    if (props.active === 1) document.getElementById('newgame').click();\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Tetris, {\n    keyboardControls: {\n      // Default values shown here. These will be used if no\n      // `keyboardControls` prop is provided.\n      down: 'MOVE_DOWN',\n      left: 'MOVE_LEFT',\n      right: 'MOVE_RIGHT',\n      space: 'HARD_DROP',\n      z: 'FLIP_COUNTERCLOCKWISE',\n      x: 'FLIP_CLOCKWISE',\n      up: 'FLIP_CLOCKWISE',\n      p: 'TOGGLE_PAUSE',\n      c: 'HOLD',\n      shift: 'HOLD'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, ({\n    HeldPiece,\n    Gameboard,\n    PieceQueue,\n    points,\n    linesCleared,\n    state,\n    controller\n  }) => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Gameboard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), state === 'LOST' && React.createElement(\"div\", {\n    className: \"game-over\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Game \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), \" Over\"), React.createElement(\"button\", {\n    id: \"newgame\",\n    onClick: controller.restart,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"New game\")))));\n}\n;","map":{"version":3,"sources":["/Users/user/Desktop/עבודות להגשה/myweb/src/components/tetris/tetris.js"],"names":["React","Tetris","TetrisGame","props","useEffect","active","document","getElementById","click","down","left","right","space","z","x","up","p","c","shift","HeldPiece","Gameboard","PieceQueue","points","linesCleared","state","controller","restart"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAQ,cAAR;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACtCH,EAAAA,KAAK,CAACI,SAAN,CAAgB,MAAI;AAChB,QAAGD,KAAK,CAACE,MAAN,KAAe,CAAlB,EACAC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC;AACH,GAHD;AAIA,SACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,gBAAgB,EAAE;AAChB;AACA;AACAC,MAAAA,IAAI,EAAE,WAHU;AAIhBC,MAAAA,IAAI,EAAE,WAJU;AAKhBC,MAAAA,KAAK,EAAE,YALS;AAMhBC,MAAAA,KAAK,EAAE,WANS;AAOhBC,MAAAA,CAAC,EAAE,uBAPa;AAQhBC,MAAAA,CAAC,EAAE,gBARa;AAShBC,MAAAA,EAAE,EAAE,gBATY;AAUhBC,MAAAA,CAAC,EAAE,cAVa;AAWhBC,MAAAA,CAAC,EAAE,MAXa;AAYhBC,MAAAA,KAAK,EAAE;AAZS,KADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAgBG,CAAC;AACAC,IAAAA,SADA;AAEAC,IAAAA,SAFA;AAGAC,IAAAA,UAHA;AAIAC,IAAAA,MAJA;AAKAC,IAAAA,YALA;AAMAC,IAAAA,KANA;AAOAC,IAAAA;AAPA,GAAD,KASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGD,KAAK,KAAK,MAAV,IACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR,UADF,EAEE;AAAQ,IAAA,EAAE,EAAC,SAAX;AAAqB,IAAA,OAAO,EAAEC,UAAU,CAACC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAHJ,CAzBJ,CADF,CADE;AAuCF;AAAA","sourcesContent":["import React from 'react';\nimport Tetris from 'react-tetris';\nimport  './tetris.css';\n\nexport default function TetrisGame(props) {\n    React.useEffect(()=>{\n        if(props.active===1)\n        document.getElementById('newgame').click();\n    })\n    return(\n  <div>\n    <Tetris\n      keyboardControls={{\n        // Default values shown here. These will be used if no\n        // `keyboardControls` prop is provided.\n        down: 'MOVE_DOWN',\n        left: 'MOVE_LEFT',\n        right: 'MOVE_RIGHT',\n        space: 'HARD_DROP',\n        z: 'FLIP_COUNTERCLOCKWISE',\n        x: 'FLIP_CLOCKWISE',\n        up: 'FLIP_CLOCKWISE',\n        p: 'TOGGLE_PAUSE',\n        c: 'HOLD',\n        shift: 'HOLD'\n      }}\n    >\n      {({\n        HeldPiece,\n        Gameboard,\n        PieceQueue,\n        points,\n        linesCleared,\n        state,\n        controller\n      }) => (\n        <div>\n          <Gameboard />\n          {state === 'LOST' && (\n            <div className='game-over'>\n              <p>Game <br></br> Over</p>\n              <button id=\"newgame\" onClick={controller.restart}>New game</button>\n            </div>\n          )}\n        </div>\n      )}\n    </Tetris>\n  </div>\n)};"]},"metadata":{},"sourceType":"module"}