{"ast":null,"code":"/* global document */\nvar callbacks = [];\nvar isPressed = false;\ndocument.addEventListener('keydown', function (e) {\n  if (e.shiftKey && !isPressed) {\n    isPressed = e.shiftKey;\n    callCallbacks();\n  }\n\n  return true;\n});\ndocument.addEventListener('keyup', function (e) {\n  if (!e.shiftKey && isPressed) {\n    isPressed = e.shiftKey;\n  }\n\n  return true;\n});\n\nfunction callCallbacks() {\n  callbacks.forEach(function (callback) {\n    callback();\n  });\n}\n\nexport default {\n  bind: function (callback) {\n    callbacks.push(callback);\n  },\n  unbind: function (callback) {\n    var index = callbacks.indexOf(callback);\n\n    if (index !== -1) {\n      callbacks.splice(index, 1);\n    }\n  }\n};","map":{"version":3,"sources":["/Users/user/Desktop/עבודות להגשה/myweb/node_modules/react-tetris/lib/modules/detect-shift.js"],"names":["callbacks","isPressed","document","addEventListener","e","shiftKey","callCallbacks","forEach","callback","bind","push","unbind","index","indexOf","splice"],"mappings":"AAAA;AACA,IAAIA,SAAS,GAAG,EAAhB;AACA,IAAIC,SAAS,GAAG,KAAhB;AACAC,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqC,UAAUC,CAAV,EAAa;AAC9C,MAAIA,CAAC,CAACC,QAAF,IAAc,CAACJ,SAAnB,EAA8B;AAC1BA,IAAAA,SAAS,GAAGG,CAAC,CAACC,QAAd;AACAC,IAAAA,aAAa;AAChB;;AACD,SAAO,IAAP;AACH,CAND;AAOAJ,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,UAAUC,CAAV,EAAa;AAC5C,MAAI,CAACA,CAAC,CAACC,QAAH,IAAeJ,SAAnB,EAA8B;AAC1BA,IAAAA,SAAS,GAAGG,CAAC,CAACC,QAAd;AACH;;AACD,SAAO,IAAP;AACH,CALD;;AAMA,SAASC,aAAT,GAAyB;AACrBN,EAAAA,SAAS,CAACO,OAAV,CAAkB,UAAUC,QAAV,EAAoB;AAClCA,IAAAA,QAAQ;AACX,GAFD;AAGH;;AACD,eAAe;AACXC,EAAAA,IAAI,EAAE,UAAUD,QAAV,EAAoB;AACtBR,IAAAA,SAAS,CAACU,IAAV,CAAeF,QAAf;AACH,GAHU;AAIXG,EAAAA,MAAM,EAAE,UAAUH,QAAV,EAAoB;AACxB,QAAII,KAAK,GAAGZ,SAAS,CAACa,OAAV,CAAkBL,QAAlB,CAAZ;;AACA,QAAII,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdZ,MAAAA,SAAS,CAACc,MAAV,CAAiBF,KAAjB,EAAwB,CAAxB;AACH;AACJ;AATU,CAAf","sourcesContent":["/* global document */\nvar callbacks = [];\nvar isPressed = false;\ndocument.addEventListener('keydown', function (e) {\n    if (e.shiftKey && !isPressed) {\n        isPressed = e.shiftKey;\n        callCallbacks();\n    }\n    return true;\n});\ndocument.addEventListener('keyup', function (e) {\n    if (!e.shiftKey && isPressed) {\n        isPressed = e.shiftKey;\n    }\n    return true;\n});\nfunction callCallbacks() {\n    callbacks.forEach(function (callback) {\n        callback();\n    });\n}\nexport default {\n    bind: function (callback) {\n        callbacks.push(callback);\n    },\n    unbind: function (callback) {\n        var index = callbacks.indexOf(callback);\n        if (index !== -1) {\n            callbacks.splice(index, 1);\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"module"}