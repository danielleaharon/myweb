{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nexport default class Transition {\n  constructor(timeline) {\n    _defineProperty(this, \"_inProgress\", void 0);\n\n    _defineProperty(this, \"_handle\", void 0);\n\n    _defineProperty(this, \"_timeline\", void 0);\n\n    _defineProperty(this, \"time\", void 0);\n\n    _defineProperty(this, \"settings\", void 0);\n\n    this._inProgress = false;\n    this._handle = null;\n    this._timeline = timeline;\n    this.time = 0;\n    this.settings = {\n      duration: 0\n    };\n  }\n\n  get inProgress() {\n    return this._inProgress;\n  }\n\n  start(settings) {\n    var _this$settings$onStar, _this$settings;\n\n    this.cancel();\n    this.settings = settings;\n    this._inProgress = true;\n    (_this$settings$onStar = (_this$settings = this.settings).onStart) === null || _this$settings$onStar === void 0 ? void 0 : _this$settings$onStar.call(_this$settings, this);\n  }\n\n  end() {\n    if (this._inProgress) {\n      var _this$settings$onEnd, _this$settings2;\n\n      this._timeline.removeChannel(this._handle);\n\n      this._handle = null;\n      this._inProgress = false;\n      (_this$settings$onEnd = (_this$settings2 = this.settings).onEnd) === null || _this$settings$onEnd === void 0 ? void 0 : _this$settings$onEnd.call(_this$settings2, this);\n    }\n  }\n\n  cancel() {\n    if (this._inProgress) {\n      var _this$settings$onInte, _this$settings3;\n\n      (_this$settings$onInte = (_this$settings3 = this.settings).onInterrupt) === null || _this$settings$onInte === void 0 ? void 0 : _this$settings$onInte.call(_this$settings3, this);\n\n      this._timeline.removeChannel(this._handle);\n\n      this._handle = null;\n      this._inProgress = false;\n    }\n  }\n\n  update() {\n    var _this$settings$onUpda, _this$settings4;\n\n    if (!this._inProgress) {\n      return false;\n    }\n\n    if (this._handle === null) {\n      const {\n        _timeline: timeline,\n        settings\n      } = this;\n      this._handle = timeline.addChannel({\n        delay: timeline.getTime(),\n        duration: settings.duration\n      });\n    }\n\n    this.time = this._timeline.getTime(this._handle);\n\n    this._onUpdate();\n\n    (_this$settings$onUpda = (_this$settings4 = this.settings).onUpdate) === null || _this$settings$onUpda === void 0 ? void 0 : _this$settings$onUpda.call(_this$settings4, this);\n\n    if (this._timeline.isFinished(this._handle)) {\n      this.end();\n    }\n\n    return true;\n  }\n\n  _onUpdate() {}\n\n}","map":{"version":3,"sources":["../../../src/transitions/transition.ts"],"names":["constructor","duration","inProgress","start","end","cancel","update","_timeline","settings","delay","timeline","_onUpdate"],"mappings":"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","sourcesContent":["import type {Timeline} from '@luma.gl/core';\n\nexport type TransitionSettings = {\n  duration: number;\n  onStart?: (transition: Transition) => void;\n  onUpdate?: (transition: Transition) => void;\n  onInterrupt?: (transition: Transition) => void;\n  onEnd?: (transition: Transition) => void;\n};\n\nexport default class Transition {\n  private _inProgress: boolean;\n  private _handle: number | null;\n  private _timeline: Timeline;\n\n  time: number;\n  settings: TransitionSettings;\n\n  /**\n   * @params timeline {Timeline}\n   */\n  constructor(timeline: Timeline) {\n    this._inProgress = false;\n    this._handle = null;\n    this._timeline = timeline;\n    this.time = 0;\n\n    // Defaults\n    this.settings = {duration: 0};\n  }\n\n  /* Public API */\n  get inProgress(): boolean {\n    return this._inProgress;\n  }\n\n  /**\n   * (re)start this transition.\n   * @params props {object} - optional overriding props. see constructor\n   */\n  start(settings: TransitionSettings) {\n    this.cancel();\n    this.settings = settings;\n    this._inProgress = true;\n    this.settings.onStart?.(this);\n  }\n\n  /**\n   * end this transition if it is in progress.\n   */\n  end() {\n    if (this._inProgress) {\n      this._timeline.removeChannel(this._handle);\n      this._handle = null;\n      this._inProgress = false;\n      this.settings.onEnd?.(this);\n    }\n  }\n\n  /**\n   * cancel this transition if it is in progress.\n   */\n  cancel() {\n    if (this._inProgress) {\n      this.settings.onInterrupt?.(this);\n      this._timeline.removeChannel(this._handle);\n      this._handle = null;\n      this._inProgress = false;\n    }\n  }\n\n  /**\n   * update this transition. Returns `true` if updated.\n   */\n  update() {\n    if (!this._inProgress) {\n      return false;\n    }\n\n    // It is important to initialize the handle during `update` instead of `start`.\n    // The CPU time that the `start` frame takes should not be counted towards the duration.\n    // On the other hand, `update` always happens during a render cycle. The clock starts when the\n    // transition is rendered for the first time.\n    if (this._handle === null) {\n      const {_timeline: timeline, settings} = this;\n      this._handle = timeline.addChannel({\n        delay: timeline.getTime(),\n        duration: settings.duration\n      });\n    }\n\n    this.time = this._timeline.getTime(this._handle);\n    // Call subclass method\n    this._onUpdate();\n    // Call user callback\n    this.settings.onUpdate?.(this);\n\n    // This only works if `settings.duration` is set\n    // Spring transition must call `end` manually\n    if (this._timeline.isFinished(this._handle)) {\n      this.end();\n    }\n    return true;\n  }\n\n  /* Private API */\n\n  protected _onUpdate() {\n    // for subclass override\n  }\n}\n"]},"metadata":{},"sourceType":"module"}