{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { COMPONENT_SYMBOL, ASYNC_ORIGINAL_SYMBOL, ASYNC_RESOLVED_SYMBOL, ASYNC_DEFAULTS_SYMBOL } from './constants';\nimport { createProps } from './create-props';\nlet counter = 0;\nexport default class Component {\n  constructor(...propObjects) {\n    _defineProperty(this, \"id\", void 0);\n\n    _defineProperty(this, \"props\", void 0);\n\n    _defineProperty(this, \"count\", void 0);\n\n    this.props = createProps(this, propObjects);\n    this.id = this.props.id;\n    this.count = counter++;\n  }\n\n  clone(newProps) {\n    const {\n      props\n    } = this;\n    const asyncProps = {};\n\n    for (const key in props[ASYNC_DEFAULTS_SYMBOL]) {\n      if (key in props[ASYNC_RESOLVED_SYMBOL]) {\n        asyncProps[key] = props[ASYNC_RESOLVED_SYMBOL][key];\n      } else if (key in props[ASYNC_ORIGINAL_SYMBOL]) {\n        asyncProps[key] = props[ASYNC_ORIGINAL_SYMBOL][key];\n      }\n    }\n\n    return new this.constructor({ ...props,\n      ...asyncProps,\n      ...newProps\n    });\n  }\n\n}\n\n_defineProperty(Component, \"componentName\", 'Component');\n\n_defineProperty(Component, \"defaultProps\", {});","map":{"version":3,"sources":["../../../src/lifecycle/component.ts"],"names":["counter","Component","constructor","createProps","clone","props","asyncProps","key","newProps"],"mappings":";AAAA,SAAA,gBAAA,EAAA,qBAAA,EAAA,qBAAA,EAAA,qBAAA,QAAA,aAAA;AAMA,SAAA,WAAA,QAAA,gBAAA;AAEA,IAAIA,OAAO,GAAX,CAAA;AAUA,eAAe,MAAA,SAAA,CAA6B;AAQ1CE,EAAAA,WAAW,CAAC,GAAD,WAAA,EAAoC;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,IAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,EAAA,KAAA,CAAA,CAAA;;AAG7C,SAAA,KAAA,GAAaC,WAAW,CAAA,IAAA,EAAxB,WAAwB,CAAxB;AAGA,SAAA,EAAA,GAAU,KAAA,KAAA,CAAV,EAAA;AACA,SAAA,KAAA,GAAaH,OAAb,EAAA;AACD;;AAGDI,EAAAA,KAAK,CAAA,QAAA,EAA4B;AAC/B,UAAM;AAACC,MAAAA;AAAD,QAAN,IAAA;AAGA,UAAMC,UAA2B,GAAjC,EAAA;;AAGA,SAAK,MAAL,GAAA,IAAkBD,KAAK,CAAvB,qBAAuB,CAAvB,EAAgD;AAC9C,UAAIE,GAAG,IAAIF,KAAK,CAAhB,qBAAgB,CAAhB,EAAyC;AACvCC,QAAAA,UAAU,CAAVA,GAAU,CAAVA,GAAkBD,KAAK,CAALA,qBAAK,CAALA,CAAlBC,GAAkBD,CAAlBC;AADF,OAAA,MAEO,IAAIC,GAAG,IAAIF,KAAK,CAAhB,qBAAgB,CAAhB,EAAyC;AAC9CC,QAAAA,UAAU,CAAVA,GAAU,CAAVA,GAAkBD,KAAK,CAALA,qBAAK,CAALA,CAAlBC,GAAkBD,CAAlBC;AACD;AACF;;AAID,WAAO,IAAI,KAAJ,WAAA,CAAqB,EAAC,GAAD,KAAA;AAAW,SAAX,UAAA;AAA0B,SAAGE;AAA7B,KAArB,CAAP;AACD;;AArCyC;;gBAAvBP,S,mBACY,W;;gBADZA,S,kBAEiB,E","sourcesContent":["import {\n  COMPONENT_SYMBOL,\n  ASYNC_ORIGINAL_SYMBOL,\n  ASYNC_RESOLVED_SYMBOL,\n  ASYNC_DEFAULTS_SYMBOL\n} from './constants';\nimport {createProps} from './create-props';\n\nlet counter = 0;\n\nexport type StatefulComponentProps<PropsT> = PropsT & {\n  id: string;\n  [COMPONENT_SYMBOL]: Component<PropsT>;\n  [ASYNC_DEFAULTS_SYMBOL]: Partial<PropsT>;\n  [ASYNC_ORIGINAL_SYMBOL]: Partial<PropsT>;\n  [ASYNC_RESOLVED_SYMBOL]: Partial<PropsT>;\n};\n\nexport default class Component<PropsT = {}> {\n  static componentName: string = 'Component';\n  static defaultProps: Readonly<{}> = {};\n\n  id: string;\n  props: StatefulComponentProps<PropsT>;\n  count: number;\n\n  constructor(...propObjects: Partial<PropsT>[]) {\n    // Merge supplied props with default props and freeze them.\n    /* eslint-disable prefer-spread */\n    this.props = createProps<PropsT>(this, propObjects);\n    /* eslint-enable prefer-spread */\n\n    this.id = this.props.id; // The layer's id, used for matching with layers from last render cycle\n    this.count = counter++; // Keep track of how many layer instances you are generating\n  }\n\n  // clone this layer with modified props\n  clone(newProps: Partial<PropsT>) {\n    const {props} = this;\n\n    // Async props cannot be copied with Object.assign, copy them separately\n    const asyncProps: Partial<PropsT> = {};\n\n    // See async props definition in create-props.js\n    for (const key in props[ASYNC_DEFAULTS_SYMBOL]) {\n      if (key in props[ASYNC_RESOLVED_SYMBOL]) {\n        asyncProps[key] = props[ASYNC_RESOLVED_SYMBOL][key];\n      } else if (key in props[ASYNC_ORIGINAL_SYMBOL]) {\n        asyncProps[key] = props[ASYNC_ORIGINAL_SYMBOL][key];\n      }\n    }\n\n    // Some custom layer implementation may not support multiple arguments in the constructor\n    // @ts-ignore\n    return new this.constructor({...props, ...asyncProps, ...newProps});\n  }\n}\n"]},"metadata":{},"sourceType":"module"}