{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/\\u05E2\\u05D1\\u05D5\\u05D3\\u05D5\\u05EA \\u05DC\\u05D4\\u05D2\\u05E9\\u05D4/myweb/src/components/snakes/ui/init/Mode.js\";\nimport React from 'react';\nimport { Link } from 'react-router';\nimport { connect } from 'react-redux';\nimport * as Action from '../redux/actions';\nimport * as Helper from '../../global/utils/Helper';\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    players: state.player.get('all')\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  gameSetMode: data => dispatch(Action.gameSetMode(data)),\n  playerCreateEmpty: () => dispatch(Action.playerCreateEmpty())\n});\n\nlet Mode = props => {\n  const gameSetModeAndAddPlayer = mode => {\n    props.gameSetMode(mode);\n    props.playerCreateEmpty();\n  };\n\n  return React.createElement(\"div\", {\n    className: \"screen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Select game mode\"), React.createElement(\"div\", {\n    className: \"options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    to: \"/init/difficulty\",\n    onClick: () => {\n      gameSetModeAndAddPlayer(1);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Single Player\"), React.createElement(\"a\", {\n    to: \"/init/difficulty\",\n    onClick: () => {\n      gameSetModeAndAddPlayer(2);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Multi Player\")));\n};\n\nconst ConnectMode = connect(mapStateToProps, mapDispatchToProps)(Mode);\nexport default ConnectMode;","map":{"version":3,"sources":["/Users/user/Desktop/עבודות להגשה/myweb/src/components/snakes/ui/init/Mode.js"],"names":["React","Link","connect","Action","Helper","mapStateToProps","state","ownProps","players","player","get","mapDispatchToProps","dispatch","gameSetMode","data","playerCreateEmpty","Mode","props","gameSetModeAndAddPlayer","mode","ConnectMode"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,kBAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,2BAAxB;;AAIA,MAAMC,eAAe,GAAG,CAAEC,KAAF,EAASC,QAAT,KAAuB;AAC9C,SAAO;AACNC,IAAAA,OAAO,EAAEF,KAAK,CAACG,MAAN,CAAaC,GAAb,CAAiB,KAAjB;AADH,GAAP;AAGA,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpCC,EAAAA,WAAW,EAAGC,IAAD,IAAUF,QAAQ,CAAET,MAAM,CAACU,WAAP,CAAmBC,IAAnB,CAAF,CADK;AAEpCC,EAAAA,iBAAiB,EAAE,MAAMH,QAAQ,CAAET,MAAM,CAACY,iBAAP,EAAF;AAFG,CAAL,CAAnC;;AAMA,IAAIC,IAAI,GAAKC,KAAF,IAAa;AAEvB,QAAMC,uBAAuB,GAAKC,IAAF,IAAY;AAC3CF,IAAAA,KAAK,CAACJ,WAAN,CAAkBM,IAAlB;AACAF,IAAAA,KAAK,CAACF,iBAAN;AACA,GAHD;;AAMG,SACF;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,EAGC;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAG,IAAA,EAAE,EAAC,kBAAN;AAAyB,IAAA,OAAO,EAAG,MAAM;AAAEG,MAAAA,uBAAuB,CAAC,CAAD,CAAvB;AAA4B,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,EAEC;AAAG,IAAA,EAAE,EAAC,kBAAN;AAAyB,IAAA,OAAO,EAAG,MAAM;AAAEA,MAAAA,uBAAuB,CAAC,CAAD,CAAvB;AAA4B,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFD,CAHD,CADE;AAcH,CAtBD;;AA0BA,MAAME,WAAW,GAAGlB,OAAO,CAC1BG,eAD0B,EAE1BM,kBAF0B,CAAP,CAGlBK,IAHkB,CAApB;AAMA,eAAeI,WAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router';\nimport { connect } from 'react-redux';\nimport * as Action from '../redux/actions';\nimport * as Helper from '../../global/utils/Helper'; \n\n\n\nconst mapStateToProps = ( state, ownProps ) => {\n\treturn {\n\t\tplayers: state.player.get('all'),\n\t}\n}\n\nconst mapDispatchToProps = dispatch => ({\n    gameSetMode: (data) => dispatch( Action.gameSetMode(data) ),\n    playerCreateEmpty: () => dispatch( Action.playerCreateEmpty() ),\n});\n\n\nlet Mode = ( props ) => {\n\n\tconst gameSetModeAndAddPlayer = ( mode ) => {\n\t\tprops.gameSetMode(mode);\n\t\tprops.playerCreateEmpty();\n\t}\n\n\n    return (\n\t\t<div className=\"screen\">\n\t\t\t<h2>Select game mode</h2>\n\n\t\t\t<div className=\"options\">\n\t\t\t\t<a to=\"/init/difficulty\" onClick={ () => { gameSetModeAndAddPlayer(1) } }>Single Player</a>\n\t\t\t\t<a to=\"/init/difficulty\" onClick={ () => { gameSetModeAndAddPlayer(2) } }>Multi Player</a>\n\t\t\t</div>\n\n\n\t\t</div>\n    )\n\n\n}\n\n\n\nconst ConnectMode = connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(Mode)\n\n\nexport default ConnectMode;\n\n\n"]},"metadata":{},"sourceType":"module"}