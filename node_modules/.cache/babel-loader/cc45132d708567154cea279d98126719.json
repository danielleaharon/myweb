{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { pieces } from '../models/Piece';\nexport function create(minimumLength) {\n  return fill({\n    minimumLength: minimumLength,\n    queue: [],\n    bucket: []\n  });\n}\n\nfunction fill(pieceQueue) {\n  var local = [];\n  var bucket = pieceQueue.bucket;\n\n  while (local.length + pieceQueue.queue.length < pieceQueue.minimumLength) {\n    var _a = pullFromBucket(bucket),\n        piece = _a[0],\n        updatedBucket = _a[1];\n\n    local.push(piece);\n    bucket = updatedBucket;\n  }\n\n  return __assign(__assign({}, pieceQueue), {\n    queue: pieceQueue.queue.concat(local)\n  });\n}\n\nexport function getNext(pieceQueue) {\n  if (!pieceQueue.queue[0]) {\n    throw new Error('Unexpected empty queue');\n  }\n\n  var next = pieceQueue.queue[0];\n  var queue = pieceQueue.queue.slice(1);\n  return {\n    piece: next,\n    queue: fill(__assign(__assign({}, pieceQueue), {\n      queue: queue\n    }))\n  };\n}\n\nfunction pullFromBucket(bucket) {\n  var local = bucket.slice(0);\n\n  if (local.length === 0) {\n    // fill the bucket\n    pieces.forEach(function (piece) {\n      // 4 is just the number of each type of piece. it's arbitrary, not magic, okay.\n      for (var i = 0; i < 4; i++) {\n        local.push(piece);\n      }\n    });\n  }\n\n  var randomPiece = local.splice(randomNumber(local.length), 1)[0];\n\n  if (!randomPiece) {\n    console.error('bucket:', JSON.stringify(local));\n    throw new Error(\"Unexpected: failed to pull from bucket\");\n  }\n\n  return [randomPiece, local];\n}\n\nfunction randomNumber(under) {\n  return Math.floor(Math.random() * under);\n}","map":{"version":3,"sources":["/Users/user/Desktop/עבודות להגשה/myweb/node_modules/react-tetris/lib/modules/piece-queue.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","pieces","create","minimumLength","fill","queue","bucket","pieceQueue","local","_a","pullFromBucket","piece","updatedBucket","push","concat","getNext","Error","next","slice","forEach","randomPiece","splice","randomNumber","console","error","JSON","stringify","under","Math","floor","random"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { pieces } from '../models/Piece';\nexport function create(minimumLength) {\n    return fill({\n        minimumLength: minimumLength,\n        queue: [],\n        bucket: []\n    });\n}\nfunction fill(pieceQueue) {\n    var local = [];\n    var bucket = pieceQueue.bucket;\n    while (local.length + pieceQueue.queue.length < pieceQueue.minimumLength) {\n        var _a = pullFromBucket(bucket), piece = _a[0], updatedBucket = _a[1];\n        local.push(piece);\n        bucket = updatedBucket;\n    }\n    return __assign(__assign({}, pieceQueue), { queue: pieceQueue.queue.concat(local) });\n}\nexport function getNext(pieceQueue) {\n    if (!pieceQueue.queue[0]) {\n        throw new Error('Unexpected empty queue');\n    }\n    var next = pieceQueue.queue[0];\n    var queue = pieceQueue.queue.slice(1);\n    return {\n        piece: next,\n        queue: fill(__assign(__assign({}, pieceQueue), { queue: queue }))\n    };\n}\nfunction pullFromBucket(bucket) {\n    var local = bucket.slice(0);\n    if (local.length === 0) {\n        // fill the bucket\n        pieces.forEach(function (piece) {\n            // 4 is just the number of each type of piece. it's arbitrary, not magic, okay.\n            for (var i = 0; i < 4; i++) {\n                local.push(piece);\n            }\n        });\n    }\n    var randomPiece = local.splice(randomNumber(local.length), 1)[0];\n    if (!randomPiece) {\n        console.error('bucket:', JSON.stringify(local));\n        throw new Error(\"Unexpected: failed to pull from bucket\");\n    }\n    return [randomPiece, local];\n}\nfunction randomNumber(under) {\n    return Math.floor(Math.random() * under);\n}\n"]},"metadata":{},"sourceType":"module"}