{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/\\u05E2\\u05D1\\u05D5\\u05D3\\u05D5\\u05EA \\u05DC\\u05D4\\u05D2\\u05E9\\u05D4/myweb/src/components/hero/draw.js\";\nimport React from 'react';\nimport { useEffect, useRef, useState } from \"react\";\nimport \"./hero.scss\";\n\nfunction Draw(props) {\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lineWidth, setLineWidth] = useState(25);\n  const [lineColor, setLineColor] = useState(props.lineColor);\n  const [lineOpacity, setLineOpacity] = useState(1);\n  const [letter, setLetter] = useState(props.letter); // Initialization when the component \n  // mounts for the first time \n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.lineCap = \"round\";\n    ctx.lineJoin = \"round\";\n    ctx.globalAlpha = lineOpacity;\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n    ctxRef.current = ctx;\n  }, [lineColor, lineOpacity, lineWidth]); // Function for starting the drawing \n\n  const startDrawing = e => {\n    props.callback && props.callback();\n    ctxRef.current.beginPath();\n    ctxRef.current.moveTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n    setIsDrawing(true);\n  }; // Function for ending the drawing \n\n\n  const endDrawing = () => {\n    ctxRef.current.closePath();\n    setIsDrawing(false);\n  };\n\n  const draw = e => {\n    if (!isDrawing) {\n      return;\n    }\n\n    ctxRef.current.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n    ctxRef.current.stroke();\n  };\n\n  return (// <div className=\"App-draw\"> \n    React.createElement(\"div\", {\n      className: \"App-draw draw-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      onMouseDown: startDrawing,\n      onMouseUp: endDrawing,\n      onMouseMove: draw,\n      onMouseOver: startDrawing,\n      onTouchStart: startDrawing,\n      ref: canvasRef,\n      width: `110px`,\n      height: `110px`,\n      style: {\n        '--clip-id': \"url(#svgTextPath\" + letter + ')'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"svg\", {\n      width: \"59.1\",\n      height: \"84.1\",\n      viewBox: \"0 0 59.1 84.1\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"g\", {\n      id: \"svgGroup\",\n      \"stroke-linecap\": \"round\",\n      \"fill-rule\": \"evenodd\",\n      \"font-size\": \"9pt\",\n      stroke: \"#000\",\n      \"stroke-width\": \"0mm\",\n      fill: \"#000\",\n      style: \"stroke:#000;stroke-width:0mm;fill:#000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      d: \"M 7.935 0.583 A 158.506 158.506 0 0 0 0 1.5 A 504.943 504.943 0 0 1 0.052 2.76 Q 0.23 7.21 0.354 12.222 A 871.738 871.738 0 0 1 0.55 22.9 Q 0.7 34.9 0.7 48 L 0.7 56.9 Q 0.7 61.2 0.65 65.45 Q 0.6 69.7 0.55 74.05 A 805.849 805.849 0 0 1 0.547 74.323 A 876.806 876.806 0 0 1 0.4 83 Q 6.6 83.7 11.75 83.9 A 576.233 576.233 0 0 0 12.131 83.915 Q 16.986 84.1 19.2 84.1 A 67.662 67.662 0 0 0 20.464 84.089 Q 29.869 83.913 36.9 81.1 A 39.038 39.038 0 0 0 39.732 79.837 A 32.401 32.401 0 0 0 49.35 72.7 Q 54.3 67.3 56.7 59.7 Q 59.1 52.1 59.1 42.8 A 69.127 69.127 0 0 0 58.972 38.56 A 58.89 58.89 0 0 0 56.6 25.05 Q 54.1 16.8 49 11 A 35.014 35.014 0 0 0 47.934 9.871 A 29.323 29.323 0 0 0 36 2.4 A 47.074 47.074 0 0 0 29.756 0.846 A 56.506 56.506 0 0 0 19.8 0 A 89.888 89.888 0 0 0 17.983 0.02 Q 16.401 0.052 14.589 0.137 A 184.564 184.564 0 0 0 10.9 0.35 A 136.479 136.479 0 0 0 7.935 0.583 Z M 19.4 16.6 A 17.593 17.593 0 0 0 18.322 16.632 A 13.921 13.921 0 0 0 17.55 16.7 Q 16.7 16.8 15.9 16.9 Q 15.8 21.6 15.8 26.25 L 15.8 35.6 Q 15.8 37.9 15.85 40.5 A 5092.288 5092.288 0 0 1 15.947 45.679 A 5151.06 5151.06 0 0 1 15.95 45.85 Q 16 48.6 16.1 51.35 Q 16.2 54.1 16.2 56.5 Q 17.1 56.7 18 56.75 Q 18.773 56.793 19.399 56.799 A 20.803 20.803 0 0 0 19.6 56.8 Q 23.3 56.8 26.45 55.2 Q 29.6 53.6 31.95 50.85 A 19.633 19.633 0 0 0 35.168 45.533 A 22.825 22.825 0 0 0 35.6 44.4 A 23.41 23.41 0 0 0 36.889 37.284 A 26.696 26.696 0 0 0 36.9 36.5 A 25.726 25.726 0 0 0 36.631 32.871 A 32.965 32.965 0 0 0 36.05 29.85 Q 35.2 26.3 33.15 23.4 A 16.512 16.512 0 0 0 28.814 19.216 A 19.583 19.583 0 0 0 27.75 18.55 A 13.629 13.629 0 0 0 23.857 17.058 Q 21.822 16.6 19.4 16.6 Z\",\n      \"vector-effect\": \"non-scaling-stroke\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }))))\n  );\n}\n\nexport default Draw;","map":{"version":3,"sources":["/Users/user/Desktop/עבודות להגשה/myweb/src/components/hero/draw.js"],"names":["React","useEffect","useRef","useState","Draw","props","canvasRef","ctxRef","isDrawing","setIsDrawing","lineWidth","setLineWidth","lineColor","setLineColor","lineOpacity","setLineOpacity","letter","setLetter","canvas","current","ctx","getContext","lineCap","lineJoin","globalAlpha","strokeStyle","startDrawing","e","callback","beginPath","moveTo","nativeEvent","offsetX","offsetY","endDrawing","closePath","draw","lineTo","stroke"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useEffect, useRef, useState } from \"react\"; \n\n\nimport \"./hero.scss\"; \n\n  \nfunction Draw(props) { \n\n  const canvasRef = useRef(null); \n\n  const ctxRef = useRef(null); \n\n  const [isDrawing, setIsDrawing] = useState(false); \n\n  const [lineWidth, setLineWidth] = useState(25); \n\n  const [lineColor, setLineColor] = useState(props.lineColor); \n\n  const [lineOpacity, setLineOpacity] = useState(1); \n  const [letter, setLetter] = useState(props.letter); \n\n  \n\n  // Initialization when the component \n\n  // mounts for the first time \n\n  useEffect(() => { \n\n    const canvas = canvasRef.current; \n\n    const ctx = canvas.getContext(\"2d\"); \n\n    ctx.lineCap = \"round\"; \n\n    ctx.lineJoin = \"round\"; \n\n    ctx.globalAlpha = lineOpacity; \n\n    ctx.strokeStyle = lineColor; \n\n    ctx.lineWidth = lineWidth; \n\n    ctxRef.current = ctx; \n\n  }, [lineColor, lineOpacity, lineWidth]); \n\n  \n\n  // Function for starting the drawing \n\n  const startDrawing = (e) => { \n\n    \n    props.callback&& props.callback()\n    \n\n    ctxRef.current.beginPath(); \n\n    ctxRef.current.moveTo( \n\n      e.nativeEvent.offsetX,  \n\n      e.nativeEvent.offsetY \n\n    ); \n\n    setIsDrawing(true); \n\n  }; \n\n  \n\n  // Function for ending the drawing \n\n  const endDrawing = () => { \n\n    ctxRef.current.closePath(); \n\n    setIsDrawing(false); \n\n  }; \n\n  \n\n  const draw = (e) => { \n\n    if (!isDrawing) { \n\n      return; \n\n    } \n\n    ctxRef.current.lineTo( \n\n      e.nativeEvent.offsetX,  \n\n      e.nativeEvent.offsetY \n\n    ); \n\n      \n\n    ctxRef.current.stroke(); \n\n  }; \n\n  \n\n  return ( \n\n    // <div className=\"App-draw\"> \n\n      <div className=\"App-draw draw-area\"> \n\n\n        <canvas \n\n          onMouseDown={startDrawing} \n\n          onMouseUp={endDrawing} \n\n          onMouseMove={draw} \n          onMouseOver={startDrawing}\n          onTouchStart={startDrawing}\n\n          ref={canvasRef} \n\n          width={`110px`} \n\n          height={`110px`} \n          style={{'--clip-id':\"url(#svgTextPath\"+letter+')'}}\n\n        >\n      </canvas> \n      {/* <svg height=\"0\" width=\"0\">\n    <defs>\n        <clipPath id={\"svgTextPath\"+letter}>\n            <text  x=\"3\" y=\"107\" lengthAdjust=\"spacing\" fontFamily={props.font} fontSize=\"100px\" fontWeight=\"400\"> {letter} </text>\n        </clipPath>\n    </defs>\n</svg> */}\n<svg width=\"59.1\" height=\"84.1\" viewBox=\"0 0 59.1 84.1\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g id=\"svgGroup\" stroke-linecap=\"round\" fill-rule=\"evenodd\" font-size=\"9pt\" stroke=\"#000\" stroke-width=\"0mm\" fill=\"#000\" style=\"stroke:#000;stroke-width:0mm;fill:#000\">\n        <path d=\"M 7.935 0.583 A 158.506 158.506 0 0 0 0 1.5 A 504.943 504.943 0 0 1 0.052 2.76 Q 0.23 7.21 0.354 12.222 A 871.738 871.738 0 0 1 0.55 22.9 Q 0.7 34.9 0.7 48 L 0.7 56.9 Q 0.7 61.2 0.65 65.45 Q 0.6 69.7 0.55 74.05 A 805.849 805.849 0 0 1 0.547 74.323 A 876.806 876.806 0 0 1 0.4 83 Q 6.6 83.7 11.75 83.9 A 576.233 576.233 0 0 0 12.131 83.915 Q 16.986 84.1 19.2 84.1 A 67.662 67.662 0 0 0 20.464 84.089 Q 29.869 83.913 36.9 81.1 A 39.038 39.038 0 0 0 39.732 79.837 A 32.401 32.401 0 0 0 49.35 72.7 Q 54.3 67.3 56.7 59.7 Q 59.1 52.1 59.1 42.8 A 69.127 69.127 0 0 0 58.972 38.56 A 58.89 58.89 0 0 0 56.6 25.05 Q 54.1 16.8 49 11 A 35.014 35.014 0 0 0 47.934 9.871 A 29.323 29.323 0 0 0 36 2.4 A 47.074 47.074 0 0 0 29.756 0.846 A 56.506 56.506 0 0 0 19.8 0 A 89.888 89.888 0 0 0 17.983 0.02 Q 16.401 0.052 14.589 0.137 A 184.564 184.564 0 0 0 10.9 0.35 A 136.479 136.479 0 0 0 7.935 0.583 Z M 19.4 16.6 A 17.593 17.593 0 0 0 18.322 16.632 A 13.921 13.921 0 0 0 17.55 16.7 Q 16.7 16.8 15.9 16.9 Q 15.8 21.6 15.8 26.25 L 15.8 35.6 Q 15.8 37.9 15.85 40.5 A 5092.288 5092.288 0 0 1 15.947 45.679 A 5151.06 5151.06 0 0 1 15.95 45.85 Q 16 48.6 16.1 51.35 Q 16.2 54.1 16.2 56.5 Q 17.1 56.7 18 56.75 Q 18.773 56.793 19.399 56.799 A 20.803 20.803 0 0 0 19.6 56.8 Q 23.3 56.8 26.45 55.2 Q 29.6 53.6 31.95 50.85 A 19.633 19.633 0 0 0 35.168 45.533 A 22.825 22.825 0 0 0 35.6 44.4 A 23.41 23.41 0 0 0 36.889 37.284 A 26.696 26.696 0 0 0 36.9 36.5 A 25.726 25.726 0 0 0 36.631 32.871 A 32.965 32.965 0 0 0 36.05 29.85 Q 35.2 26.3 33.15 23.4 A 16.512 16.512 0 0 0 28.814 19.216 A 19.583 19.583 0 0 0 27.75 18.55 A 13.629 13.629 0 0 0 23.857 17.058 Q 21.822 16.6 19.4 16.6 Z\" vector-effect=\"non-scaling-stroke\"/></g></svg>\n{/* <svg width=\"0\" height=\"0\">\n  <defs>\n    <clipPath id={\"svgTextPath\"+letter}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M0 5C0 4.65482 0.279822 4.375 0.625 4.375H5C8 4 9.11049 0.375 10 0.375C11 0.375 12 4 15 4.375H195.375C195.72 4.375 196 4.65482 196 5V5C196 5.34518 195.72 5.625 195.375 5.625H15C12 5.5 10 1.8 10 1.8C10 1.8 8 5.5 5 5.625H0.625C0.279822 5.625 0 5.34518 0 5V5Z\"\n        fill=\"black\"\n      />\n    </clipPath>\n  </defs>\n</svg> */}\n\n\n    </div> \n    \n\n  ); \n} \n\n  \n\nexport default Draw;"]},"metadata":{},"sourceType":"module"}