{"ast":null,"code":"const canvas = document.getElementById('board');\nconst ctx = canvas.getContext('2d');\nconst canvasNext = document.getElementById('next');\nconst ctxNext = canvasNext.getContext('2d');\nlet accountValues = {\n  score: 0,\n  level: 0,\n  lines: 0\n};\n\nfunction updateAccount(key, value) {\n  let element = document.getElementById(key);\n\n  if (element) {\n    element.textContent = value;\n  }\n}\n\nlet account = new Proxy(accountValues, {\n  set: (target, key, value) => {\n    target[key] = value;\n    updateAccount(key, value);\n    return true;\n  }\n});\nlet requestId;\nmoves = {\n  [KEY.LEFT]: p => ({ ...p,\n    x: p.x - 1\n  }),\n  [KEY.RIGHT]: p => ({ ...p,\n    x: p.x + 1\n  }),\n  [KEY.DOWN]: p => ({ ...p,\n    y: p.y + 1\n  }),\n  [KEY.SPACE]: p => ({ ...p,\n    y: p.y + 1\n  }),\n  [KEY.UP]: p => board.rotate(p)\n};\nlet board = new Board(ctx, ctxNext);\naddEventListener();\ninitNext();\n\nfunction initNext() {\n  // Calculate size of canvas from constants.\n  ctxNext.canvas.width = 4 * BLOCK_SIZE;\n  ctxNext.canvas.height = 4 * BLOCK_SIZE;\n  ctxNext.scale(BLOCK_SIZE, BLOCK_SIZE);\n}\n\nfunction addEventListener() {\n  document.addEventListener('keydown', event => {\n    if (event.keyCode === KEY.P) {\n      pause();\n    }\n\n    if (event.keyCode === KEY.ESC) {\n      gameOver();\n    } else if (moves[event.keyCode]) {\n      event.preventDefault(); // Get new state\n\n      let p = moves[event.keyCode](board.piece);\n\n      if (event.keyCode === KEY.SPACE) {\n        // Hard drop\n        while (board.valid(p)) {\n          account.score += POINTS.HARD_DROP;\n          board.piece.move(p);\n          p = moves[KEY.DOWN](board.piece);\n        }\n      } else if (board.valid(p)) {\n        board.piece.move(p);\n\n        if (event.keyCode === KEY.DOWN) {\n          account.score += POINTS.SOFT_DROP;\n        }\n      }\n    }\n  });\n}\n\nfunction resetGame() {\n  account.score = 0;\n  account.lines = 0;\n  account.level = 0;\n  board.reset();\n  time = {\n    start: 0,\n    elapsed: 0,\n    level: LEVEL[account.level]\n  };\n}\n\nfunction play() {\n  resetGame();\n  time.start = performance.now(); // If we have an old game running a game then cancel the old\n\n  if (requestId) {\n    cancelAnimationFrame(requestId);\n  }\n\n  animate();\n}\n\nfunction animate(now = 0) {\n  time.elapsed = now - time.start;\n\n  if (time.elapsed > time.level) {\n    time.start = now;\n\n    if (!board.drop()) {\n      gameOver();\n      return;\n    }\n  } // Clear board before drawing new state.\n\n\n  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  board.draw();\n  requestId = requestAnimationFrame(animate);\n}\n\nfunction gameOver() {\n  cancelAnimationFrame(requestId);\n  ctx.fillStyle = 'black';\n  ctx.fillRect(1, 3, 8, 1.2);\n  ctx.font = '1px Arial';\n  ctx.fillStyle = 'red';\n  ctx.fillText('GAME OVER', 1.8, 4);\n}\n\nfunction pause() {\n  if (!requestId) {\n    animate();\n    return;\n  }\n\n  cancelAnimationFrame(requestId);\n  requestId = null;\n  ctx.fillStyle = 'black';\n  ctx.fillRect(1, 3, 8, 1.2);\n  ctx.font = '1px Arial';\n  ctx.fillStyle = 'yellow';\n  ctx.fillText('PAUSED', 3, 4);\n}","map":{"version":3,"sources":["/Users/user/Desktop/עבודות להגשה/myweb/src/components/tetris/main.js"],"names":["canvas","document","getElementById","ctx","getContext","canvasNext","ctxNext","accountValues","score","level","lines","updateAccount","key","value","element","textContent","account","Proxy","set","target","requestId","moves","KEY","LEFT","p","x","RIGHT","DOWN","y","SPACE","UP","board","rotate","Board","addEventListener","initNext","width","BLOCK_SIZE","height","scale","event","keyCode","P","pause","ESC","gameOver","preventDefault","piece","valid","POINTS","HARD_DROP","move","SOFT_DROP","resetGame","reset","time","start","elapsed","LEVEL","play","performance","now","cancelAnimationFrame","animate","drop","clearRect","draw","requestAnimationFrame","fillStyle","fillRect","font","fillText"],"mappings":"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","sourcesContent":["const canvas = document.getElementById('board');\nconst ctx = canvas.getContext('2d');\nconst canvasNext = document.getElementById('next');\nconst ctxNext = canvasNext.getContext('2d');\n\nlet accountValues = {\n  score: 0,\n  level: 0,\n  lines: 0\n}\n\nfunction updateAccount(key, value) {\n  let element = document.getElementById(key);\n  if (element) {\n    element.textContent = value;\n  }\n}\n\nlet account = new Proxy(accountValues, {\n  set: (target, key, value) => {\n    target[key] = value;\n    updateAccount(key, value);\n    return true;\n  }\n});\n\nlet requestId;\n\nmoves = {\n  [KEY.LEFT]: p => ({ ...p, x: p.x - 1 }),\n  [KEY.RIGHT]: p => ({ ...p, x: p.x + 1 }),\n  [KEY.DOWN]: p => ({ ...p, y: p.y + 1 }),\n  [KEY.SPACE]: p => ({ ...p, y: p.y + 1 }),\n  [KEY.UP]: p => board.rotate(p)\n};\n\nlet board = new Board(ctx, ctxNext);\naddEventListener();\ninitNext();\n\nfunction initNext() {\n  // Calculate size of canvas from constants.\n  ctxNext.canvas.width = 4 * BLOCK_SIZE;\n  ctxNext.canvas.height = 4 * BLOCK_SIZE;\n  ctxNext.scale(BLOCK_SIZE, BLOCK_SIZE);\n}\n\nfunction addEventListener() {\n  document.addEventListener('keydown', event => {\n    if (event.keyCode === KEY.P) {\n      pause();\n    }\n    if (event.keyCode === KEY.ESC) {\n      gameOver();\n    } else if (moves[event.keyCode]) {\n      event.preventDefault();\n      // Get new state\n      let p = moves[event.keyCode](board.piece);\n      if (event.keyCode === KEY.SPACE) {\n        // Hard drop\n        while (board.valid(p)) {\n          account.score += POINTS.HARD_DROP;\n          board.piece.move(p);\n          p = moves[KEY.DOWN](board.piece);\n        }       \n      } else if (board.valid(p)) {\n        board.piece.move(p);\n        if (event.keyCode === KEY.DOWN) {\n          account.score += POINTS.SOFT_DROP;         \n        }\n      }\n    }\n  });\n}\n\nfunction resetGame() {\n  account.score = 0;\n  account.lines = 0;\n  account.level = 0;\n  board.reset();\n  time = { start: 0, elapsed: 0, level: LEVEL[account.level] };\n}\n\nfunction play() {\n  resetGame();\n  time.start = performance.now();\n  // If we have an old game running a game then cancel the old\n  if (requestId) {\n    cancelAnimationFrame(requestId);\n  }\n\n  animate();\n}\n\nfunction animate(now = 0) {\n  time.elapsed = now - time.start;\n  if (time.elapsed > time.level) {\n    time.start = now;\n    if (!board.drop()) {\n      gameOver();\n      return;\n    }\n  }\n\n  // Clear board before drawing new state.\n  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n  board.draw();\n  requestId = requestAnimationFrame(animate);\n}\n\nfunction gameOver() {\n  cancelAnimationFrame(requestId);\n  ctx.fillStyle = 'black';\n  ctx.fillRect(1, 3, 8, 1.2);\n  ctx.font = '1px Arial';\n  ctx.fillStyle = 'red';\n  ctx.fillText('GAME OVER', 1.8, 4);\n}\n\nfunction pause() {\n  if (!requestId) {\n    animate();\n    return;\n  }\n\n  cancelAnimationFrame(requestId);\n  requestId = null;\n  \n  ctx.fillStyle = 'black';\n  ctx.fillRect(1, 3, 8, 1.2);\n  ctx.font = '1px Arial';\n  ctx.fillStyle = 'yellow';\n  ctx.fillText('PAUSED', 3, 4);\n}"]},"metadata":{},"sourceType":"module"}