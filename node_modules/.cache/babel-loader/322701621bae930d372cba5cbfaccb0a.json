{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/\\u05E2\\u05D1\\u05D5\\u05D3\\u05D5\\u05EA \\u05DC\\u05D4\\u05D2\\u05E9\\u05D4/myweb/src/components/snakes/components/form/Player.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as Action from '.../../redux/actions';\nimport _ from 'lodash';\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    game: state.game.get('config'),\n    players: state.player.get('all')\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  playerDelete: data => dispatch(Action.playerDelete(data)),\n  playerUpdateName: data => dispatch(Action.playerUpdateName(data))\n});\n\nlet PlayerInput = props => {\n  const player = props.data;\n\n  let onChange = (event, id) => {\n    props.playerUpdateName({\n      id: id,\n      name: event.target.value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"player-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"Player Name\",\n    onChange: event => {\n      onChange(event, player.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), props.delete && React.createElement(\"a\", {\n    onClick: () => {\n      props.playerDelete(player.id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Delete\"));\n};\n\nconst ConnectPlayerInput = connect(mapStateToProps, mapDispatchToProps)(PlayerInput);\nexport default ConnectPlayerInput;","map":{"version":3,"sources":["/Users/user/Desktop/עבודות להגשה/myweb/src/components/snakes/components/form/Player.js"],"names":["React","connect","Action","_","mapStateToProps","state","ownProps","game","get","players","player","mapDispatchToProps","dispatch","playerDelete","data","playerUpdateName","PlayerInput","props","onChange","event","id","name","target","value","delete","ConnectPlayerInput"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,sBAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;;AAGA,MAAMC,eAAe,GAAG,CAAEC,KAAF,EAASC,QAAT,KAAuB;AAC9C,SAAO;AACNC,IAAAA,IAAI,EAAEF,KAAK,CAACE,IAAN,CAAWC,GAAX,CAAe,QAAf,CADA;AAENC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,MAAN,CAAaF,GAAb,CAAiB,KAAjB;AAFH,GAAP;AAIA,CALD;;AAOA,MAAMG,kBAAkB,GAAGC,QAAQ,KAAK;AACpCC,EAAAA,YAAY,EAAGC,IAAD,IAAUF,QAAQ,CAAEV,MAAM,CAACW,YAAP,CAAoBC,IAApB,CAAF,CADI;AAEpCC,EAAAA,gBAAgB,EAAGD,IAAD,IAAUF,QAAQ,CAAEV,MAAM,CAACa,gBAAP,CAAwBD,IAAxB,CAAF;AAFA,CAAL,CAAnC;;AAOA,IAAIE,WAAW,GAAKC,KAAF,IAAa;AAE9B,QAAMP,MAAM,GAAGO,KAAK,CAACH,IAArB;;AAEA,MAAII,QAAQ,GAAG,CAAEC,KAAF,EAASC,EAAT,KAAiB;AAC/BH,IAAAA,KAAK,CAACF,gBAAN,CAAuB;AAAEK,MAAAA,EAAE,EAAEA,EAAN;AAAUC,MAAAA,IAAI,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA7B,KAAvB;AACA,GAFD;;AAIG,SACF;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAO,IAAA,WAAW,EAAC,aAAnB;AAAiC,IAAA,QAAQ,EAAIJ,KAAD,IAAW;AAAED,MAAAA,QAAQ,CAACC,KAAD,EAAQT,MAAM,CAACU,EAAf,CAAR;AAA4B,KAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEGH,KAAK,CAACO,MAAN,IACD;AAAG,IAAA,OAAO,EAAG,MAAM;AAAEP,MAAAA,KAAK,CAACJ,YAAN,CAAmBH,MAAM,CAACU,EAA1B;AAA+B,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CADE;AASH,CAjBD;;AAoBA,MAAMK,kBAAkB,GAAGxB,OAAO,CACjCG,eADiC,EAEjCO,kBAFiC,CAAP,CAGzBK,WAHyB,CAA3B;AAMA,eAAeS,kBAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport * as Action from '.../../redux/actions';\nimport _ from 'lodash';\n\n\nconst mapStateToProps = ( state, ownProps ) => {\n\treturn {\n\t\tgame: state.game.get('config'),\n\t\tplayers: state.player.get('all'),\n\t}\n}\n\nconst mapDispatchToProps = dispatch => ({\n    playerDelete: (data) => dispatch( Action.playerDelete(data) ),\n    playerUpdateName: (data) => dispatch( Action.playerUpdateName(data) ),\n});\n\n\n\nlet PlayerInput = ( props ) => {\n\n\tconst player = props.data;\n\n\tlet onChange = ( event, id ) => {\n\t\tprops.playerUpdateName({ id: id, name: event.target.value });\n\t}\n\n    return (\n\t\t<div className=\"player-input\">\n\t\t\t<input placeholder=\"Player Name\" onChange={ (event) => { onChange(event, player.id) } } />\n\t\t\t{ props.delete &&\n\t\t\t\t<a onClick={ () => { props.playerDelete(player.id) } }>Delete</a>\n\t\t\t}\n\t\t</div>\n    )\n\n}\n\n\nconst ConnectPlayerInput = connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)(PlayerInput)\n\n\nexport default ConnectPlayerInput;\n\n"]},"metadata":{},"sourceType":"module"}