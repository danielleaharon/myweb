{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/\\u05E2\\u05D1\\u05D5\\u05D3\\u05D5\\u05EA \\u05DC\\u05D4\\u05D2\\u05E9\\u05D4/myweb/src/components/hero/draw.js\";\nimport React from 'react';\nimport { useEffect, useRef, useState } from \"react\";\nimport \"./hero.scss\";\n\nfunction Draw(props) {\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const lineWidth = 25;\n  const lineColor = props.lineColor;\n  const lineOpacity = 1;\n  const letter = useState(props.letter); // Initialization when the component \n  // mounts for the first time \n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.lineCap = \"round\";\n    ctx.lineJoin = \"round\";\n    ctx.globalAlpha = lineOpacity;\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n    ctxRef.current = ctx;\n  }, [lineColor, lineOpacity, lineWidth]); // Function for starting the drawing \n\n  const startDrawing = e => {\n    props.callback && props.callback();\n    ctxRef.current.beginPath();\n    ctxRef.current.moveTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n    setIsDrawing(true);\n  }; // Function for ending the drawing \n\n\n  const endDrawing = () => {\n    ctxRef.current.closePath();\n    setIsDrawing(false);\n  };\n\n  const draw = e => {\n    if (!isDrawing) {\n      return;\n    }\n\n    ctxRef.current.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n    ctxRef.current.stroke();\n  };\n\n  return (// <div className=\"App-draw\"> \n    React.createElement(\"div\", {\n      className: \"App-draw draw-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      onMouseDown: startDrawing,\n      onMouseUp: endDrawing,\n      onMouseMove: draw,\n      onMouseOver: startDrawing,\n      onTouchStart: startDrawing,\n      ref: canvasRef,\n      width: `110px`,\n      height: `110px`,\n      style: {\n        '--clip-id': \"url(#svgTextPath\" + letter + ')',\n        '--clip-idmob': \"url(#svgTextPathmob\" + letter + ')'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"svg\", {\n      height: \"0\",\n      width: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"defs\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"clipPath\", {\n      id: \"svgTextPath\" + letter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"text\", {\n      x: \"9\",\n      y: \"100\",\n      fontFamily: props.font,\n      fontWeight: \"400\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \" \", letter, \" \")))), React.createElement(\"svg\", {\n      height: \"0\",\n      width: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"defs\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"clipPath\", {\n      id: \"svgTextPathmob\" + letter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"text\", {\n      x: \"2\",\n      y: \"44\",\n      lengthAdjust: \"spacing\",\n      fontFamily: props.font,\n      fontWeight: \"400\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \" \", letter, \" \")))))\n  );\n}\n\nexport default Draw;","map":{"version":3,"sources":["/Users/user/Desktop/עבודות להגשה/myweb/src/components/hero/draw.js"],"names":["React","useEffect","useRef","useState","Draw","props","canvasRef","ctxRef","isDrawing","setIsDrawing","lineWidth","lineColor","lineOpacity","letter","canvas","current","ctx","getContext","lineCap","lineJoin","globalAlpha","strokeStyle","startDrawing","e","callback","beginPath","moveTo","nativeEvent","offsetX","offsetY","endDrawing","closePath","draw","lineTo","stroke","font"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AAGA,OAAO,aAAP;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAEnB,QAAMC,SAAS,GAAGJ,MAAM,CAAC,IAAD,CAAxB;AAEA,QAAMK,MAAM,GAAGL,MAAM,CAAC,IAAD,CAArB;AAEA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMO,SAAS,GAAG,EAAlB;AAEA,QAAMC,SAAS,GAAGN,KAAK,CAACM,SAAxB;AAEA,QAAMC,WAAW,GAAG,CAApB;AACA,QAAMC,MAAM,GAAGV,QAAQ,CAACE,KAAK,CAACQ,MAAP,CAAvB,CAbmB,CAiBnB;AAEA;;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMa,MAAM,GAAGR,SAAS,CAACS,OAAzB;AAEA,UAAMC,GAAG,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;AAEAD,IAAAA,GAAG,CAACE,OAAJ,GAAc,OAAd;AAEAF,IAAAA,GAAG,CAACG,QAAJ,GAAe,OAAf;AAEAH,IAAAA,GAAG,CAACI,WAAJ,GAAkBR,WAAlB;AAEAI,IAAAA,GAAG,CAACK,WAAJ,GAAkBV,SAAlB;AAEAK,IAAAA,GAAG,CAACN,SAAJ,GAAgBA,SAAhB;AAEAH,IAAAA,MAAM,CAACQ,OAAP,GAAiBC,GAAjB;AAED,GAlBQ,EAkBN,CAACL,SAAD,EAAYC,WAAZ,EAAyBF,SAAzB,CAlBM,CAAT,CArBmB,CA2CnB;;AAEA,QAAMY,YAAY,GAAIC,CAAD,IAAO;AAG1BlB,IAAAA,KAAK,CAACmB,QAAN,IAAiBnB,KAAK,CAACmB,QAAN,EAAjB;AAGAjB,IAAAA,MAAM,CAACQ,OAAP,CAAeU,SAAf;AAEAlB,IAAAA,MAAM,CAACQ,OAAP,CAAeW,MAAf,CAEEH,CAAC,CAACI,WAAF,CAAcC,OAFhB,EAIEL,CAAC,CAACI,WAAF,CAAcE,OAJhB;AAQApB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAED,GAlBD,CA7CmB,CAmEnB;;;AAEA,QAAMqB,UAAU,GAAG,MAAM;AAEvBvB,IAAAA,MAAM,CAACQ,OAAP,CAAegB,SAAf;AAEAtB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAED,GAND;;AAUA,QAAMuB,IAAI,GAAIT,CAAD,IAAO;AAElB,QAAI,CAACf,SAAL,EAAgB;AAEd;AAED;;AAEDD,IAAAA,MAAM,CAACQ,OAAP,CAAekB,MAAf,CAEEV,CAAC,CAACI,WAAF,CAAcC,OAFhB,EAIEL,CAAC,CAACI,WAAF,CAAcE,OAJhB;AAUAtB,IAAAA,MAAM,CAACQ,OAAP,CAAemB,MAAf;AAED,GApBD;;AAwBA,SAEE;AAEE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE;AAEE,MAAA,WAAW,EAAEZ,YAFf;AAIE,MAAA,SAAS,EAAEQ,UAJb;AAME,MAAA,WAAW,EAAEE,IANf;AAOE,MAAA,WAAW,EAAEV,YAPf;AAQE,MAAA,YAAY,EAAEA,YARhB;AAUE,MAAA,GAAG,EAAEhB,SAVP;AAYE,MAAA,KAAK,EAAG,OAZV;AAcE,MAAA,MAAM,EAAG,OAdX;AAeE,MAAA,KAAK,EAAE;AAAC,qBAAY,qBAAmBO,MAAnB,GAA0B,GAAvC;AAA2C,wBAAe,wBAAsBA,MAAtB,GAA6B;AAAvF,OAfT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAsBA;AAAK,MAAA,MAAM,EAAC,GAAZ;AAAgB,MAAA,KAAK,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAU,MAAA,EAAE,EAAE,gBAAcA,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,CAAC,EAAC,GAAT;AAAa,MAAA,CAAC,EAAC,KAAf;AAAqB,MAAA,UAAU,EAAER,KAAK,CAAC8B,IAAvC;AAA8C,MAAA,UAAU,EAAC,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAiEtB,MAAjE,MADJ,CADJ,CADE,CAtBA,EA+BN;AAAK,MAAA,MAAM,EAAC,GAAZ;AAAgB,MAAA,KAAK,EAAC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAU,MAAA,EAAE,EAAE,mBAAiBA,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,CAAC,EAAC,GAAT;AAAa,MAAA,CAAC,EAAC,IAAf;AAAoB,MAAA,YAAY,EAAC,SAAjC;AAA2C,MAAA,UAAU,EAAER,KAAK,CAAC8B,IAA7D;AAAoE,MAAA,UAAU,EAAC,KAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAuFtB,MAAvF,MADJ,CADJ,CADJ,CA/BM;AAJJ;AA8DD;;AAID,eAAeT,IAAf","sourcesContent":["import React from 'react';\nimport { useEffect, useRef, useState } from \"react\"; \n\n\nimport \"./hero.scss\"; \n\n  \nfunction Draw(props) { \n\n  const canvasRef = useRef(null); \n\n  const ctxRef = useRef(null); \n\n  const [isDrawing, setIsDrawing] = useState(false); \n\n  const lineWidth = 25; \n\n  const lineColor = props.lineColor; \n\n  const lineOpacity = 1; \n  const letter = useState(props.letter); \n\n  \n\n  // Initialization when the component \n\n  // mounts for the first time \n\n  useEffect(() => { \n\n    const canvas = canvasRef.current; \n\n    const ctx = canvas.getContext(\"2d\"); \n\n    ctx.lineCap = \"round\"; \n\n    ctx.lineJoin = \"round\"; \n\n    ctx.globalAlpha = lineOpacity; \n\n    ctx.strokeStyle = lineColor; \n\n    ctx.lineWidth = lineWidth; \n\n    ctxRef.current = ctx; \n\n  }, [lineColor, lineOpacity, lineWidth]); \n\n  \n\n  // Function for starting the drawing \n\n  const startDrawing = (e) => { \n\n    \n    props.callback&& props.callback()\n    \n\n    ctxRef.current.beginPath(); \n\n    ctxRef.current.moveTo( \n\n      e.nativeEvent.offsetX,  \n\n      e.nativeEvent.offsetY \n\n    ); \n\n    setIsDrawing(true); \n\n  }; \n\n  \n\n  // Function for ending the drawing \n\n  const endDrawing = () => { \n\n    ctxRef.current.closePath(); \n\n    setIsDrawing(false); \n\n  }; \n\n  \n\n  const draw = (e) => { \n\n    if (!isDrawing) { \n\n      return; \n\n    } \n\n    ctxRef.current.lineTo( \n\n      e.nativeEvent.offsetX,  \n\n      e.nativeEvent.offsetY \n\n    ); \n\n      \n\n    ctxRef.current.stroke(); \n\n  }; \n\n  \n\n  return ( \n\n    // <div className=\"App-draw\"> \n\n      <div className=\"App-draw draw-area\"> \n\n\n        <canvas \n\n          onMouseDown={startDrawing} \n\n          onMouseUp={endDrawing} \n\n          onMouseMove={draw} \n          onMouseOver={startDrawing}\n          onTouchStart={startDrawing}\n\n          ref={canvasRef} \n\n          width={`110px`} \n\n          height={`110px`} \n          style={{'--clip-id':\"url(#svgTextPath\"+letter+')','--clip-idmob':\"url(#svgTextPathmob\"+letter+')'}}\n\n        >\n      </canvas> \n      <svg height=\"0\" width=\"0\" >\n    <defs>\n        <clipPath id={\"svgTextPath\"+letter}>\n            <text  x=\"9\" y=\"100\" fontFamily={props.font}  fontWeight=\"400\"> {letter} </text>\n        </clipPath>\n\n    </defs>\n</svg>\n\n<svg height=\"0\" width=\"0\" >\n    <defs>\n        <clipPath id={\"svgTextPathmob\"+letter}>\n            <text  x=\"2\" y=\"44\" lengthAdjust=\"spacing\" fontFamily={props.font}  fontWeight=\"400\"> {letter} </text>\n        </clipPath>\n\n    </defs>\n</svg>\n\n{/* <svg width=\"0\" height=\"0\">\n  <defs>\n    <clipPath id={\"svgTextPath\"+letter}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M0 5C0 4.65482 0.279822 4.375 0.625 4.375H5C8 4 9.11049 0.375 10 0.375C11 0.375 12 4 15 4.375H195.375C195.72 4.375 196 4.65482 196 5V5C196 5.34518 195.72 5.625 195.375 5.625H15C12 5.5 10 1.8 10 1.8C10 1.8 8 5.5 5 5.625H0.625C0.279822 5.625 0 5.34518 0 5V5Z\"\n        fill=\"black\"\n      />\n    </clipPath>\n  </defs>\n</svg> */}\n\n\n    </div> \n    \n\n  ); \n} \n\n  \n\nexport default Draw;"]},"metadata":{},"sourceType":"module"}