{"ast":null,"code":"function isJSON(text) {\n  const firstChar = text[0];\n  const lastChar = text[text.length - 1];\n  return firstChar === '{' && lastChar === '}' || firstChar === '[' && lastChar === ']';\n}\n\nexport default {\n  id: 'JSON',\n  name: 'JSON',\n  module: '',\n  version: '',\n  options: {},\n  extensions: ['json', 'geojson'],\n  mimeTypes: ['application/json', 'application/geo+json'],\n  testText: isJSON,\n  parseTextSync: JSON.parse\n};","map":{"version":3,"sources":["../../../src/utils/json-loader.ts"],"names":["firstChar","text","lastChar","id","name","module","version","options","extensions","mimeTypes","testText","parseTextSync","JSON","parse"],"mappings":"AAEA,SAAA,MAAA,CAAA,IAAA,EAAuC;AACrC,QAAMA,SAAS,GAAGC,IAAI,CAAtB,CAAsB,CAAtB;AACA,QAAMC,QAAQ,GAAGD,IAAI,CAACA,IAAI,CAAJA,MAAAA,GAAtB,CAAqB,CAArB;AACA,SAAQD,SAAS,KAATA,GAAAA,IAAqBE,QAAQ,KAA9B,GAACF,IAA2CA,SAAS,KAATA,GAAAA,IAAqBE,QAAQ,KAAhF,GAAA;AACD;;AAGD,eAAe;AACbC,EAAAA,EAAE,EADW,MAAA;AAEbC,EAAAA,IAAI,EAFS,MAAA;AAGbC,EAAAA,MAAM,EAHO,EAAA;AAIbC,EAAAA,OAAO,EAJM,EAAA;AAKbC,EAAAA,OAAO,EALM,EAAA;AAMbC,EAAAA,UAAU,EAAE,CAAA,MAAA,EANC,SAMD,CANC;AAObC,EAAAA,SAAS,EAAE,CAAA,kBAAA,EAPE,sBAOF,CAPE;AAQbC,EAAAA,QAAQ,EARK,MAAA;AASbC,EAAAA,aAAa,EAAEC,IAAI,CAACC;AATP,CAAf","sourcesContent":["import type {Loader} from '@loaders.gl/loader-utils';\n\nfunction isJSON(text: string): boolean {\n  const firstChar = text[0];\n  const lastChar = text[text.length - 1];\n  return (firstChar === '{' && lastChar === '}') || (firstChar === '[' && lastChar === ']');\n}\n\n// A light weight version instead of @loaders.gl/json (stream processing etc.)\nexport default {\n  id: 'JSON',\n  name: 'JSON',\n  module: '',\n  version: '',\n  options: {},\n  extensions: ['json', 'geojson'],\n  mimeTypes: ['application/json', 'application/geo+json'],\n  testText: isJSON,\n  parseTextSync: JSON.parse\n} as Loader;\n"]},"metadata":{},"sourceType":"module"}