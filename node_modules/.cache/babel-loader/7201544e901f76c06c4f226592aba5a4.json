{"ast":null,"code":"import { getCompositeGLType } from '../webgl-utils/attribute-utils';\nexport function getDebugTableForProgramConfiguration(config) {\n  const table = {};\n  const header = \"Accessors for \".concat(config.id);\n\n  for (const attributeInfo of config.attributeInfos) {\n    if (attributeInfo) {\n      const glslDeclaration = getGLSLDeclaration(attributeInfo);\n      table[\"in \".concat(glslDeclaration)] = {\n        [header]: JSON.stringify(attributeInfo.accessor)\n      };\n    }\n  }\n\n  for (const varyingInfo of config.varyingInfos) {\n    if (varyingInfo) {\n      const glslDeclaration = getGLSLDeclaration(varyingInfo);\n      table[\"out \".concat(glslDeclaration)] = {\n        [header]: JSON.stringify(varyingInfo.accessor)\n      };\n    }\n  }\n\n  return table;\n}\n\nfunction getGLSLDeclaration(attributeInfo) {\n  const {\n    type,\n    size\n  } = attributeInfo.accessor;\n  const typeAndName = getCompositeGLType(type, size);\n\n  if (typeAndName) {\n    return \"\".concat(typeAndName.name, \" \").concat(attributeInfo.name);\n  }\n\n  return attributeInfo.name;\n}","map":{"version":3,"sources":["../../../src/debug/debug-program-configuration.js"],"names":["table","header","config","glslDeclaration","getGLSLDeclaration","JSON","attributeInfo","varyingInfo","size","typeAndName","getCompositeGLType"],"mappings":"AAAA,SAAA,kBAAA,QAAA,gCAAA;AAEA,OAAO,SAAA,oCAAA,CAAA,MAAA,EAAsD;AAC3D,QAAMA,KAAK,GAAX,EAAA;AAEA,QAAMC,MAAM,GAAA,iBAAA,MAAA,CAAoBC,MAAM,CAAtC,EAAY,CAAZ;;AAEA,OAAK,MAAL,aAAA,IAA4BA,MAAM,CAAlC,cAAA,EAAmD;AACjD,QAAA,aAAA,EAAmB;AACjB,YAAMC,eAAe,GAAGC,kBAAkB,CAA1C,aAA0C,CAA1C;AACAJ,MAAAA,KAAK,CAAA,MAAA,MAAA,CAALA,eAAK,CAAA,CAALA,GAAiC;AAAC,SAAA,MAAA,GAAUK,IAAI,CAAJA,SAAAA,CAAeC,aAAa,CAA5BD,QAAAA;AAAX,OAAjCL;AACD;AACF;;AAED,OAAK,MAAL,WAAA,IAA0BE,MAAM,CAAhC,YAAA,EAA+C;AAC7C,QAAA,WAAA,EAAiB;AACf,YAAMC,eAAe,GAAGC,kBAAkB,CAA1C,WAA0C,CAA1C;AACAJ,MAAAA,KAAK,CAAA,OAAA,MAAA,CAALA,eAAK,CAAA,CAALA,GAAkC;AAAC,SAAA,MAAA,GAAUK,IAAI,CAAJA,SAAAA,CAAeE,WAAW,CAA1BF,QAAAA;AAAX,OAAlCL;AACD;AACF;;AAED,SAAA,KAAA;AACD;;AAED,SAAA,kBAAA,CAAA,aAAA,EAA2C;AACzC,QAAM;AAAA,IAAA,IAAA;AAAOQ,IAAAA;AAAP,MAAeF,aAAa,CAAlC,QAAA;AACA,QAAMG,WAAW,GAAGC,kBAAkB,CAAA,IAAA,EAAtC,IAAsC,CAAtC;;AACA,MAAA,WAAA,EAAiB;AACf,WAAA,GAAA,MAAA,CAAUD,WAAW,CAArB,IAAA,EAAA,GAAA,EAAA,MAAA,CAA8BH,aAAa,CAA3C,IAAA,CAAA;AACD;;AACD,SAAOA,aAAa,CAApB,IAAA;AACD","sourcesContent":["import {getCompositeGLType} from '../webgl-utils/attribute-utils';\n\nexport function getDebugTableForProgramConfiguration(config) {\n  const table = {};\n\n  const header = `Accessors for ${config.id}`;\n\n  for (const attributeInfo of config.attributeInfos) {\n    if (attributeInfo) {\n      const glslDeclaration = getGLSLDeclaration(attributeInfo);\n      table[`in ${glslDeclaration}`] = {[header]: JSON.stringify(attributeInfo.accessor)};\n    }\n  }\n\n  for (const varyingInfo of config.varyingInfos) {\n    if (varyingInfo) {\n      const glslDeclaration = getGLSLDeclaration(varyingInfo);\n      table[`out ${glslDeclaration}`] = {[header]: JSON.stringify(varyingInfo.accessor)};\n    }\n  }\n\n  return table;\n}\n\nfunction getGLSLDeclaration(attributeInfo) {\n  const {type, size} = attributeInfo.accessor;\n  const typeAndName = getCompositeGLType(type, size);\n  if (typeAndName) {\n    return `${typeAndName.name} ${attributeInfo.name}`;\n  }\n  return attributeInfo.name;\n}\n"]},"metadata":{},"sourceType":"module"}