{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/\\u05E2\\u05D1\\u05D5\\u05D3\\u05D5\\u05EA \\u05DC\\u05D4\\u05D2\\u05E9\\u05D4/myweb/src/components/pages/individualIntervalsExample.js\";\nimport React, { Component } from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\n\nfunction NoTransitionExample() {\n  function dragstart_handler(ev) {\n    console.log(`dragStart: dropEffect = ${ev.dataTransfer.dropEffect} ; effectAllowed = ${ev.dataTransfer.effectAllowed}`); // Add this element's id to the drag payload so the drop handler will\n    // know which element to add to its tree\n\n    ev.dataTransfer.setData(\"text\", ev.target.id);\n    ev.dataTransfer.effectAllowed = \"move\";\n  }\n\n  function drop_handler(ev) {\n    console.log(`drop: dropEffect = ${ev.dataTransfer.dropEffect} ; effectAllowed = ${ev.dataTransfer.effectAllowed}`);\n    ev.preventDefault(); // Get the id of the target and add the moved element to the target's DOM\n\n    const data = ev.dataTransfer.getData(\"text\");\n    ev.target.appendChild(document.getElementById(data));\n  }\n\n  function dragover_handler(ev) {\n    console.log(`dragOver: dropEffect = ${ev.dataTransfer.dropEffect} ; effectAllowed = ${ev.dataTransfer.effectAllowed}`);\n    ev.preventDefault(); // Set the dropEffect to move\n\n    ev.dataTransfer.dropEffect = \"move\";\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    id: \"source\",\n    ondragstart: \"dragstart_handler(event);\",\n    draggable: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Select this element, drag it to the Drop Zone and then release the selection to move the element.\")), React.createElement(\"div\", {\n    id: \"target\",\n    ondrop: \"drop_handler(event);\",\n    ondragover: \"dragover_handler(event);\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Drop Zone\"));\n}\n\nexport default NoTransitionExample;","map":{"version":3,"sources":["/Users/user/Desktop/עבודות להגשה/myweb/src/components/pages/individualIntervalsExample.js"],"names":["React","Component","Carousel","NoTransitionExample","dragstart_handler","ev","console","log","dataTransfer","dropEffect","effectAllowed","setData","target","id","drop_handler","preventDefault","data","getData","appendChild","document","getElementById","dragover_handler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,0BAArB;;AACA,SAASC,mBAAT,GAA+B;AAE9B,WAASC,iBAAT,CAA2BC,EAA3B,EAA+B;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAa,2BAA0BF,EAAE,CAACG,YAAH,CAAgBC,UAAW,sBAAqBJ,EAAE,CAACG,YAAH,CAAgBE,aAAc,EAArH,EAD8B,CAG9B;AACA;;AACAL,IAAAA,EAAE,CAACG,YAAH,CAAgBG,OAAhB,CAAwB,MAAxB,EAAgCN,EAAE,CAACO,MAAH,CAAUC,EAA1C;AACAR,IAAAA,EAAE,CAACG,YAAH,CAAgBE,aAAhB,GAAgC,MAAhC;AACE;;AAED,WAASI,YAAT,CAAsBT,EAAtB,EAA0B;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAa,sBAAqBF,EAAE,CAACG,YAAH,CAAgBC,UAAW,sBAAqBJ,EAAE,CAACG,YAAH,CAAgBE,aAAc,EAAhH;AACAL,IAAAA,EAAE,CAACU,cAAH,GAF2B,CAI3B;;AACA,UAAMC,IAAI,GAAGX,EAAE,CAACG,YAAH,CAAgBS,OAAhB,CAAwB,MAAxB,CAAb;AACAZ,IAAAA,EAAE,CAACO,MAAH,CAAUM,WAAV,CAAsBC,QAAQ,CAACC,cAAT,CAAwBJ,IAAxB,CAAtB;AACE;;AAED,WAASK,gBAAT,CAA0BhB,EAA1B,EAA8B;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAa,0BAAyBF,EAAE,CAACG,YAAH,CAAgBC,UAAW,sBAAqBJ,EAAE,CAACG,YAAH,CAAgBE,aAAc,EAApH;AACAL,IAAAA,EAAE,CAACU,cAAH,GAF+B,CAG/B;;AACAV,IAAAA,EAAE,CAACG,YAAH,CAAgBC,UAAhB,GAA6B,MAA7B;AACE;;AACH,SACC,0CAEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,EAAE,EAAC,QAAN;AAAe,IAAA,WAAW,EAAC,2BAA3B;AAAuD,IAAA,SAAS,EAAC,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yGADF,CAFE,EAQF;AACE,IAAA,EAAE,EAAC,QADL;AAEE,IAAA,MAAM,EAAC,sBAFT;AAGE,IAAA,UAAU,EAAC,0BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARE,CADD;AAiBA;;AAGC,eAAeN,mBAAf","sourcesContent":["import React, { Component } from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nfunction NoTransitionExample() {\n\n\tfunction dragstart_handler(ev) {\n\t\tconsole.log(`dragStart: dropEffect = ${ev.dataTransfer.dropEffect} ; effectAllowed = ${ev.dataTransfer.effectAllowed}`);\n\t  \n\t\t// Add this element's id to the drag payload so the drop handler will\n\t\t// know which element to add to its tree\n\t\tev.dataTransfer.setData(\"text\", ev.target.id);\n\t\tev.dataTransfer.effectAllowed = \"move\";\n\t  }\n\t  \n\t  function drop_handler(ev) {\n\t\tconsole.log(`drop: dropEffect = ${ev.dataTransfer.dropEffect} ; effectAllowed = ${ev.dataTransfer.effectAllowed}`);\n\t\tev.preventDefault();\n\t  \n\t\t// Get the id of the target and add the moved element to the target's DOM\n\t\tconst data = ev.dataTransfer.getData(\"text\");\n\t\tev.target.appendChild(document.getElementById(data));\n\t  }\n\t  \n\t  function dragover_handler(ev) {\n\t\tconsole.log(`dragOver: dropEffect = ${ev.dataTransfer.dropEffect} ; effectAllowed = ${ev.dataTransfer.effectAllowed}`);\n\t\tev.preventDefault();\n\t\t// Set the dropEffect to move\n\t\tev.dataTransfer.dropEffect = \"move\"\n\t  }\n\treturn (\n\t\t<>\n\t\t\n<div>\n  <p id=\"source\" ondragstart=\"dragstart_handler(event);\" draggable=\"true\">\n    Select this element, drag it to the Drop Zone and then release the selection\n    to move the element.\n  </p>\n</div>\n<div\n  id=\"target\"\n  ondrop=\"drop_handler(event);\"\n  ondragover=\"dragover_handler(event);\">\n  Drop Zone\n</div>\n</>\n\t)\n}\n  \n  \n  export default NoTransitionExample;"]},"metadata":{},"sourceType":"module"}