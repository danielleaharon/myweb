{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/\\u05E2\\u05D1\\u05D5\\u05D3\\u05D5\\u05EA \\u05DC\\u05D4\\u05D2\\u05E9\\u05D4/myweb/src/components/TetrisBgAnimation/tetrisBgAnimation.js\";\nimport React, { Component } from 'react'; //import 'materialize-css/dist/css/materialize.min.css';\n\nimport './tetrisBgAnimation.css';\nimport { TETROMINOS } from '../tetris/tetrominos';\nimport CellPreview from '../tetris/components/CellPreview';\nexport default function TetrisBgAnimation(props) {\n  const randomTetromino = () => {\n    const tetrominos = 'IJLOSTZ';\n    const randTetromino = tetrominos[Math.floor(Math.random() * tetrominos.length)];\n    return randTetromino;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"tetrisBgAnimation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, ['L', 'O', 'S', 'T', 'Z', 'I', 'J'].map((item, index) => {\n    return React.createElement(CellPreview, {\n      size: '80px',\n      key: index,\n      type: item,\n      text: TETROMINOS[item].text,\n      shape: TETROMINOS[item].shape,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n  })), React.createElement(\"div\", {\n    className: \"row2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, ['L', 'O', 'S', 'T', 'Z', 'I', 'J'].map((item, index) => {\n    return React.createElement(CellPreview, {\n      size: '80px',\n      key: index,\n      type: item,\n      text: TETROMINOS[item].text,\n      shape: TETROMINOS[item].shape,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  })));\n}","map":{"version":3,"sources":["/Users/user/Desktop/עבודות להגשה/myweb/src/components/TetrisBgAnimation/tetrisBgAnimation.js"],"names":["React","Component","TETROMINOS","CellPreview","TetrisBgAnimation","props","randomTetromino","tetrominos","randTetromino","Math","floor","random","length","map","item","index","text","shape"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AAGA,OAAO,yBAAP;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,OAAOC,WAAP,MAAwB,kCAAxB;AAGA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAC/C,QAAMC,eAAe,GAAG,MAAM;AAC9B,UAAMC,UAAU,GAAG,SAAnB;AACA,UAAMC,aAAa,GACnBD,UAAU,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,UAAU,CAACK,MAAtC,CAAD,CADV;AAEA,WAAOJ,aAAP;AACA,GALA;;AAOD,SACC;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACY,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,EAA8BK,GAA9B,CAAkC,CAACC,IAAD,EAAMC,KAAN,KAAc;AAC/C,WAAQ,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAE,MAAnB;AAA2B,MAAA,GAAG,EAAEA,KAAhC;AAAuC,MAAA,IAAI,EAAED,IAA7C;AAAmD,MAAA,IAAI,EAAEZ,UAAU,CAACY,IAAD,CAAV,CAAiBE,IAA1E;AAAgF,MAAA,KAAK,EAAEd,UAAU,CAACY,IAAD,CAAV,CAAiBG,KAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACe,GAFhB,CADZ,CADH,EAMG;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACY,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,EAA8BJ,GAA9B,CAAkC,CAACC,IAAD,EAAMC,KAAN,KAAc;AAC/C,WAAQ,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAE,MAAnB;AAA2B,MAAA,GAAG,EAAEA,KAAhC;AAAuC,MAAA,IAAI,EAAED,IAA7C;AAAmD,MAAA,IAAI,EAAEZ,UAAU,CAACY,IAAD,CAAV,CAAiBE,IAA1E;AAAgF,MAAA,KAAK,EAAEd,UAAU,CAACY,IAAD,CAAV,CAAiBG,KAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACe,GAFhB,CADZ,CANH,CADD;AAeA","sourcesContent":["import React, { Component } from 'react';\n//import 'materialize-css/dist/css/materialize.min.css';\n\n\nimport './tetrisBgAnimation.css';\nimport { TETROMINOS } from '../tetris/tetrominos';\n\nimport CellPreview from '../tetris/components/CellPreview';\n\n\nexport default function TetrisBgAnimation(props) {\n\t const randomTetromino = () => {\n\t\tconst tetrominos = 'IJLOSTZ';\n\t\tconst randTetromino =\n\t\ttetrominos[Math.floor(Math.random() * tetrominos.length)];\n\t\treturn randTetromino;\n\t};\n\n\treturn (\n\t\t<div  className='tetrisBgAnimation'  >\n\t\t   <div className='row1'>\n                {['L','O','S','T','Z','I','J'].map((item,index)=>{\n                  return  <CellPreview size={'80px'} key={index} type={item} text={TETROMINOS[item].text} shape={TETROMINOS[item].shape} />\n                                }                )}\n              </div>\n\t\t\t  <div className='row2'>\n                {['L','O','S','T','Z','I','J'].map((item,index)=>{\n                  return  <CellPreview size={'80px'} key={index} type={item} text={TETROMINOS[item].text} shape={TETROMINOS[item].shape} />\n                                }                )}\n              </div>\n\t\t</div>\n\t);\n\n}\n"]},"metadata":{},"sourceType":"module"}