{"ast":null,"code":"import React from 'react';\nimport key from 'keymaster';\nimport DetectShift from '../modules/detect-shift';\nexport var useKeyboardControls = function (keyboardMap, dispatch) {\n  React.useEffect(function () {\n    var keyboardDispatch = Object.entries(keyboardMap).reduce(function (output, _a) {\n      var key = _a[0],\n          action = _a[1];\n\n      output[key] = function () {\n        return dispatch(action);\n      };\n\n      return output;\n    }, {});\n    addKeyboardEvents(keyboardDispatch);\n    return function () {\n      return removeKeyboardEvents(keyboardDispatch);\n    };\n  }, [keyboardMap, dispatch]);\n};\n\nfunction addKeyboardEvents(keyboardMap) {\n  Object.keys(keyboardMap).forEach(function (k) {\n    var fn = keyboardMap[k];\n\n    if (k === 'shift' && fn) {\n      DetectShift.bind(fn);\n    } else if (fn) {\n      key(k, fn);\n    }\n  });\n}\n\nfunction removeKeyboardEvents(keyboardMap) {\n  Object.keys(keyboardMap).forEach(function (k) {\n    if (k === 'shift') {\n      var fn = keyboardMap[k];\n      fn && DetectShift.unbind(fn);\n    } else {\n      key.unbind(k);\n    }\n  });\n}","map":{"version":3,"sources":["/Users/user/Desktop/עבודות להגשה/myweb/node_modules/react-tetris/lib/hooks/useKeyboardControls.js"],"names":["React","key","DetectShift","useKeyboardControls","keyboardMap","dispatch","useEffect","keyboardDispatch","Object","entries","reduce","output","_a","action","addKeyboardEvents","removeKeyboardEvents","keys","forEach","k","fn","bind","unbind"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAO,IAAIC,mBAAmB,GAAG,UAAUC,WAAV,EAAuBC,QAAvB,EAAiC;AAC9DL,EAAAA,KAAK,CAACM,SAAN,CAAgB,YAAY;AACxB,QAAIC,gBAAgB,GAAGC,MAAM,CAACC,OAAP,CAAeL,WAAf,EAA4BM,MAA5B,CAAmC,UAAUC,MAAV,EAAkBC,EAAlB,EAAsB;AAC5E,UAAIX,GAAG,GAAGW,EAAE,CAAC,CAAD,CAAZ;AAAA,UAAiBC,MAAM,GAAGD,EAAE,CAAC,CAAD,CAA5B;;AACAD,MAAAA,MAAM,CAACV,GAAD,CAAN,GAAc,YAAY;AAAE,eAAOI,QAAQ,CAACQ,MAAD,CAAf;AAA0B,OAAtD;;AACA,aAAOF,MAAP;AACH,KAJsB,EAIpB,EAJoB,CAAvB;AAKAG,IAAAA,iBAAiB,CAACP,gBAAD,CAAjB;AACA,WAAO,YAAY;AAAE,aAAOQ,oBAAoB,CAACR,gBAAD,CAA3B;AAAgD,KAArE;AACH,GARD,EAQG,CAACH,WAAD,EAAcC,QAAd,CARH;AASH,CAVM;;AAWP,SAASS,iBAAT,CAA2BV,WAA3B,EAAwC;AACpCI,EAAAA,MAAM,CAACQ,IAAP,CAAYZ,WAAZ,EAAyBa,OAAzB,CAAiC,UAAUC,CAAV,EAAa;AAC1C,QAAIC,EAAE,GAAGf,WAAW,CAACc,CAAD,CAApB;;AACA,QAAIA,CAAC,KAAK,OAAN,IAAiBC,EAArB,EAAyB;AACrBjB,MAAAA,WAAW,CAACkB,IAAZ,CAAiBD,EAAjB;AACH,KAFD,MAGK,IAAIA,EAAJ,EAAQ;AACTlB,MAAAA,GAAG,CAACiB,CAAD,EAAIC,EAAJ,CAAH;AACH;AACJ,GARD;AASH;;AACD,SAASJ,oBAAT,CAA8BX,WAA9B,EAA2C;AACvCI,EAAAA,MAAM,CAACQ,IAAP,CAAYZ,WAAZ,EAAyBa,OAAzB,CAAiC,UAAUC,CAAV,EAAa;AAC1C,QAAIA,CAAC,KAAK,OAAV,EAAmB;AACf,UAAIC,EAAE,GAAGf,WAAW,CAACc,CAAD,CAApB;AACAC,MAAAA,EAAE,IAAIjB,WAAW,CAACmB,MAAZ,CAAmBF,EAAnB,CAAN;AACH,KAHD,MAIK;AACDlB,MAAAA,GAAG,CAACoB,MAAJ,CAAWH,CAAX;AACH;AACJ,GARD;AASH","sourcesContent":["import React from 'react';\nimport key from 'keymaster';\nimport DetectShift from '../modules/detect-shift';\nexport var useKeyboardControls = function (keyboardMap, dispatch) {\n    React.useEffect(function () {\n        var keyboardDispatch = Object.entries(keyboardMap).reduce(function (output, _a) {\n            var key = _a[0], action = _a[1];\n            output[key] = function () { return dispatch(action); };\n            return output;\n        }, {});\n        addKeyboardEvents(keyboardDispatch);\n        return function () { return removeKeyboardEvents(keyboardDispatch); };\n    }, [keyboardMap, dispatch]);\n};\nfunction addKeyboardEvents(keyboardMap) {\n    Object.keys(keyboardMap).forEach(function (k) {\n        var fn = keyboardMap[k];\n        if (k === 'shift' && fn) {\n            DetectShift.bind(fn);\n        }\n        else if (fn) {\n            key(k, fn);\n        }\n    });\n}\nfunction removeKeyboardEvents(keyboardMap) {\n    Object.keys(keyboardMap).forEach(function (k) {\n        if (k === 'shift') {\n            var fn = keyboardMap[k];\n            fn && DetectShift.unbind(fn);\n        }\n        else {\n            key.unbind(k);\n        }\n    });\n}\n"]},"metadata":{},"sourceType":"module"}