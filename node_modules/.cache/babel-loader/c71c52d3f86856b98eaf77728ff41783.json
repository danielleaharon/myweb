{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/\\u05E2\\u05D1\\u05D5\\u05D3\\u05D5\\u05EA \\u05DC\\u05D4\\u05D2\\u05E9\\u05D4/myweb/src/components/snakes/components/Results.js\";\nimport React from 'react';\nimport SortableResultItem from './results/SortableResultItem';\nimport { styles } from '../styles';\nexport default class Results extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      draggingIndex: null,\n      data: this.props.players\n    };\n  }\n\n  updateState(obj) {\n    this.setState(obj);\n  }\n\n  render() {\n    return React.createElement(\"section\", {\n      className: \"results-section\",\n      style: styles.results,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: styles.heading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Results\"), React.createElement(\"div\", {\n      style: styles.inlineBlock,\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, this.state.data.map((playerStat, i) => {\n      const {\n        id,\n        pos,\n        color,\n        path,\n        diceLog,\n        snakeBites,\n        ladderHikes\n      } = playerStat;\n      return React.createElement(SortableResultItem, {\n        key: i,\n        updateState: this.updateState.bind(this),\n        items: this.state.data,\n        draggingIndex: this.state.draggingIndex,\n        sortId: i,\n        outline: \"list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: styles.resultCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Player \", id, \" \"), pos === 100 ? '( winner )' : '', React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), diceLog.length, \" Dice thrown, \\xA0\", diceLog.filter(dice => dice === 6).length, \" Six(s) rolled, \\xA0\", snakeBites, \" Snake bites, \\xA0\", ladderHikes, \" Ladder hikes\"));\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      style: styles.restartCta,\n      onClick: () => {\n        this.props.startNewGame();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Start new game\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/user/Desktop/עבודות להגשה/myweb/src/components/snakes/components/Results.js"],"names":["React","SortableResultItem","styles","Results","Component","constructor","props","state","draggingIndex","data","players","updateState","obj","setState","render","results","heading","inlineBlock","map","playerStat","i","id","pos","color","path","diceLog","snakeBites","ladderHikes","bind","resultCard","length","filter","dice","restartCta","startNewGame"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,SAASC,MAAT,QAAuB,WAAvB;AAEA,eAAe,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AAEnDC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,IADJ;AAEXC,MAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWI;AAFN,KAAb;AAID;;AAEDC,EAAAA,WAAW,CAAEC,GAAF,EAAO;AAChB,SAAKC,QAAL,CAAcD,GAAd;AACD;;AAEDE,EAAAA,MAAM,GAAI;AACR,WACE;AAAS,MAAA,SAAS,EAAC,iBAAnB;AAAqC,MAAA,KAAK,EAAEZ,MAAM,CAACa,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,KAAK,EAAEb,MAAM,CAACc,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAK,MAAA,KAAK,EAAEd,MAAM,CAACe,WAAnB;AAAgC,MAAA,SAAS,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,KAAKV,KAAL,CAAWE,IAAX,CAAgBS,GAAhB,CAAoB,CAACC,UAAD,EAAaC,CAAb,KAAmB;AACrC,YAAM;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,GAAN;AAAWC,QAAAA,KAAX;AAAkBC,QAAAA,IAAlB;AAAwBC,QAAAA,OAAxB;AAAiCC,QAAAA,UAAjC;AAA6CC,QAAAA;AAA7C,UAA6DR,UAAnE;AACA,aACE,oBAAC,kBAAD;AACE,QAAA,GAAG,EAAEC,CADP;AAEE,QAAA,WAAW,EAAE,KAAKT,WAAL,CAAiBiB,IAAjB,CAAsB,IAAtB,CAFf;AAGE,QAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWE,IAHpB;AAIE,QAAA,aAAa,EAAE,KAAKF,KAAL,CAAWC,aAJ5B;AAKE,QAAA,MAAM,EAAEY,CALV;AAME,QAAA,OAAO,EAAC,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE;AAAK,QAAA,KAAK,EAAElB,MAAM,CAAC2B,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBR,EAAhB,MADF,EACgCC,GAAG,KAAG,GAAN,GAAY,YAAZ,GAA2B,EAD3D,EAC8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD9D,EAEGG,OAAO,CAACK,MAFX,wBAGIL,OAAO,CAACM,MAAR,CAAgBC,IAAD,IAAUA,IAAI,KAAK,CAAlC,CAAD,CAAuCF,MAH1C,0BAIGJ,UAJH,wBAKGC,WALH,kBAPF,CADF;AAiBD,KAnBD,CAFF,CAFF,EA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,KAAK,EAAEzB,MAAM,CAAC+B,UAAtB;AAAkC,MAAA,OAAO,EAAE,MAAK;AAAC,aAAK3B,KAAL,CAAW4B,YAAX;AAA0B,OAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CA1BF,CADF;AAkCD;;AAjDkD","sourcesContent":["import React from 'react';\nimport SortableResultItem from './results/SortableResultItem';\nimport { styles } from '../styles';\n\nexport default class Results extends React.Component {\n\n  constructor (props) {\n    super(props);\n    this.state = {\n      draggingIndex: null,\n      data: this.props.players\n    }\n  }\n\n  updateState (obj) {\n    this.setState(obj);\n  }\n\n  render () {\n    return (\n      <section className=\"results-section\" style={styles.results}>\n        <h1 style={styles.heading}>Results</h1>\n        <div style={styles.inlineBlock} className=\"list\">\n        {\n          this.state.data.map((playerStat, i) => {\n            const { id, pos, color, path, diceLog, snakeBites, ladderHikes } = playerStat;\n            return (\n              <SortableResultItem\n                key={i}\n                updateState={this.updateState.bind(this)}\n                items={this.state.data}\n                draggingIndex={this.state.draggingIndex}\n                sortId={i}\n                outline=\"list\">\n                <div style={styles.resultCard}>\n                  <strong>Player {id} </strong>{pos===100 ? '( winner )' : ''}<br />\n                  {diceLog.length} Dice thrown, &nbsp;\n                  {(diceLog.filter((dice) => dice === 6)).length} Six(s) rolled, &nbsp;\n                  {snakeBites} Snake bites, &nbsp;\n                  {ladderHikes} Ladder hikes\n                </div>\n              </SortableResultItem>\n            )\n          })\n        }\n        </div>\n        <div>\n          <button style={styles.restartCta} onClick={() =>{this.props.startNewGame()}}>\n            Start new game\n          </button>\n        </div>\n      </section>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}