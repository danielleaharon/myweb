{"ast":null,"code":"import { BOX_WIDTH, BOX_HEIGHT, GRID_WIDTH, GRID_HEIGHT } from './variables';\nlet colorIndex = 0;\nexport function getRandomColor() {\n  const colorPalette = ['#007ae1', '#ff2d55', '#4cd964', '#ff9500'];\n  return colorPalette[colorIndex++ % 4];\n}\n;\nexport function getLayout(width, height) {\n  const gridWidth = width;\n  const gridHeight = height;\n  const boxWidth = width / 10;\n  const boxHeight = height / 10;\n  let layout = {};\n  const oddRows = [1, 3, 5, 7, 9],\n        evenRows = [0, 2, 4, 6, 8];\n\n  for (let col = 1; col <= 10; col++) {\n    //even rows\n    evenRows.map(row => {\n      layout[col + 10 * row] = {\n        x: (col - 1) * boxWidth + boxWidth / 2,\n        y: gridHeight - (row * boxHeight + boxHeight / 2),\n        id: col + 10 * row\n      };\n    }); //odd rows\n\n    oddRows.map(row => {\n      layout[col + 10 * row] = {\n        x: gridWidth - ((col - 1) * boxWidth + boxWidth / 2),\n        y: gridHeight - (row * boxHeight + boxHeight / 2),\n        id: col + 10 * row\n      };\n    });\n  }\n\n  return layout;\n}\nexport function getPlayerCoordinates(pos, grid, boxPosition) {\n  const {\n    layout,\n    box: {\n      width,\n      height\n    }\n  } = grid;\n  const x = layout[pos].x;\n  const y = layout[pos].y;\n\n  switch (boxPosition) {\n    case 0:\n      //top left\n      return {\n        x: x - width / 4,\n        y: y - height / 4\n      };\n\n    case 1:\n      //top right\n      return {\n        x: x + width / 4,\n        y: y - height / 4\n      };\n\n    case 2:\n      //bottom left\n      return {\n        x: x - width / 4,\n        y: y + height / 4\n      };\n\n    case 3:\n      //bottom right\n      return {\n        x: x + width / 4,\n        y: y + height / 4\n      };\n\n    default:\n      return {\n        x: x,\n        y: y\n      };\n  }\n}\nexport function delay(callback) {\n  return setTimeout(callback, 300);\n}\nexport function getSnakes() {\n  return [{\n    id: 1,\n    startPos: 17,\n    endPos: 7\n  }, {\n    id: 2,\n    startPos: 52,\n    endPos: 29\n  }, {\n    id: 3,\n    startPos: 57,\n    endPos: 38\n  }, {\n    id: 4,\n    startPos: 88,\n    endPos: 18\n  }, {\n    id: 5,\n    startPos: 93,\n    endPos: 70\n  }, {\n    id: 6,\n    startPos: 97,\n    endPos: 79\n  }];\n}\nexport function getLadders() {\n  return [{\n    id: 1,\n    startPos: 3,\n    endPos: 21\n  }, {\n    id: 2,\n    startPos: 8,\n    endPos: 30\n  }, {\n    id: 3,\n    startPos: 28,\n    endPos: 84\n  }, {\n    id: 4,\n    startPos: 58,\n    endPos: 77\n  }, {\n    id: 5,\n    startPos: 80,\n    endPos: 99\n  }, {\n    id: 6,\n    startPos: 90,\n    endPos: 91\n  }];\n}","map":{"version":3,"sources":["/Users/user/Desktop/עבודות להגשה/myweb/src/components/snakes/config/utils.js"],"names":["BOX_WIDTH","BOX_HEIGHT","GRID_WIDTH","GRID_HEIGHT","colorIndex","getRandomColor","colorPalette","getLayout","width","height","gridWidth","gridHeight","boxWidth","boxHeight","layout","oddRows","evenRows","col","map","row","x","y","id","getPlayerCoordinates","pos","grid","boxPosition","box","delay","callback","setTimeout","getSnakes","startPos","endPos","getLadders"],"mappings":"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","sourcesContent":["import {\n  BOX_WIDTH,\n  BOX_HEIGHT,\n  GRID_WIDTH,\n  GRID_HEIGHT\n} from './variables';\n\nlet colorIndex = 0;\nexport function getRandomColor () {\n  const colorPalette = ['#007ae1', '#ff2d55', '#4cd964', '#ff9500'];\n  return colorPalette[(colorIndex++) % 4];\n};\n\nexport function getLayout (width, height) {\n\n  const gridWidth = width;\n  const gridHeight = height;\n  const boxWidth = width / 10;\n  const boxHeight = height / 10;\n\n  let layout = {};\n  const oddRows = [1, 3, 5, 7, 9],\n        evenRows = [0, 2, 4, 6, 8];\n\n  for (let col = 1;  col <= 10 ; col++) {\n    //even rows\n    evenRows.map((row) => {\n      layout[col + 10 * row] = {\n        x: (col-1) * boxWidth + boxWidth / 2,\n        y: gridHeight - (row * boxHeight + boxHeight / 2),\n        id: col + 10 * row\n      }\n    });\n\n    //odd rows\n    oddRows.map((row) => {\n      layout[col + 10 * row] = {\n        x: gridWidth - ((col - 1)  * boxWidth + boxWidth / 2),\n        y: gridHeight - (row * boxHeight + boxHeight / 2),\n        id: col + 10 * row\n      }\n    });\n  }\n  return layout;\n}\n\nexport function getPlayerCoordinates (pos, grid, boxPosition) {\n  const { layout, box: { width, height } } = grid;  \n  const x = layout[pos].x;\n  const y = layout[pos].y;\n\n  switch (boxPosition) {\n    case 0: //top left\n      return {\n        x: x - width / 4,\n        y: y - height / 4\n      };\n\n    case 1: //top right\n      return {\n        x: x + width / 4,\n        y: y - height / 4\n      };\n\n    case 2: //bottom left\n      return {\n        x: x - width / 4,\n        y: y + height / 4\n      };\n\n    case 3: //bottom right\n      return {\n        x: x + width / 4,\n        y: y + height / 4\n      };\n\n    default:\n      return {\n        x: x,\n        y: y\n      };\n  }\n}\n\nexport function delay (callback) {\n  return setTimeout(callback, 300);\n}\n\nexport function getSnakes () {\n  return (\n    [\n      {\n        id: 1,\n        startPos: 17,\n        endPos: 7\n      },\n      {\n        id: 2,\n        startPos: 52,\n        endPos: 29\n      },\n      {\n        id: 3,\n        startPos: 57,\n        endPos: 38\n      },\n      {\n        id: 4,\n        startPos: 88,\n        endPos: 18\n      },\n      {\n        id: 5,\n        startPos: 93,\n        endPos: 70\n      },\n      {\n        id: 6,\n        startPos: 97,\n        endPos: 79\n      }\n    ]\n  );\n}\n\nexport function getLadders () {\n  return (\n    [\n      {\n        id: 1,\n        startPos: 3,\n        endPos: 21\n      },\n      {\n        id: 2,\n        startPos: 8,\n        endPos: 30\n      },\n      {\n        id: 3,\n        startPos: 28,\n        endPos: 84\n      },\n      {\n        id: 4,\n        startPos: 58,\n        endPos: 77\n      },\n      {\n        id: 5,\n        startPos: 80,\n        endPos: 99\n      },\n      {\n        id: 6,\n        startPos: 90,\n        endPos: 91\n      }\n    ]\n  );\n}\n"]},"metadata":{},"sourceType":"module"}