{"ast":null,"code":"import _slicedToArray from\"/Users/user/Desktop/\\u05E2\\u05D1\\u05D5\\u05D3\\u05D5\\u05EA \\u05DC\\u05D4\\u05D2\\u05E9\\u05D4/myweb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{useEffect,useRef,useState}from\"react\";import\"./hero.scss\";function Draw(props){var canvasRef=useRef(null);var ctxRef=useRef(null);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isDrawing=_useState2[0],setIsDrawing=_useState2[1];var _useState3=useState(25),_useState4=_slicedToArray(_useState3,2),lineWidth=_useState4[0],setLineWidth=_useState4[1];var _useState5=useState(props.lineColor),_useState6=_slicedToArray(_useState5,2),lineColor=_useState6[0],setLineColor=_useState6[1];var _useState7=useState(1),_useState8=_slicedToArray(_useState7,2),lineOpacity=_useState8[0],setLineOpacity=_useState8[1];var _useState9=useState(props.letter),_useState10=_slicedToArray(_useState9,2),letter=_useState10[0],setLetter=_useState10[1];// Initialization when the component \n// mounts for the first time \nuseEffect(function(){var canvas=canvasRef.current;var ctx=canvas.getContext(\"2d\");ctx.lineCap=\"round\";ctx.lineJoin=\"round\";ctx.globalAlpha=lineOpacity;ctx.strokeStyle=lineColor;ctx.lineWidth=lineWidth;ctxRef.current=ctx;},[lineColor,lineOpacity,lineWidth]);// Function for starting the drawing \nvar startDrawing=function startDrawing(e){props.callback&&props.callback();ctxRef.current.beginPath();ctxRef.current.moveTo(e.nativeEvent.offsetX,e.nativeEvent.offsetY);setIsDrawing(true);};// Function for ending the drawing \nvar endDrawing=function endDrawing(){ctxRef.current.closePath();setIsDrawing(false);};var draw=function draw(e){if(!isDrawing){return;}ctxRef.current.lineTo(e.nativeEvent.offsetX,e.nativeEvent.offsetY);ctxRef.current.stroke();};return(// <div className=\"App-draw\"> \nReact.createElement(\"div\",{className:\"App-draw draw-area\"},React.createElement(\"canvas\",{onMouseDown:startDrawing,onMouseUp:endDrawing,onMouseMove:draw,onMouseOver:startDrawing,onTouchStart:startDrawing,ref:canvasRef,width:\"110pxx\",height:\"110px\",style:{'--clip-id':\"URL(#svgTextPath\"+letter+')'}}),React.createElement(\"svg\",{height:\"0\",width:\"0\"},React.createElement(\"defs\",null,React.createElement(\"clipPath\",{id:\"svgTextPath\"+letter},React.createElement(\"text\",{x:\"2\",y:\"107\",lengthAdjust:\"spacing\",fontFamily:props.font,fontSize:\"120px\",fontWeight:\"400\"},\" \",letter,\" \"))))));}export default Draw;","map":{"version":3,"sources":["/Users/user/Desktop/עבודות להגשה/myweb/src/components/hero/draw.js"],"names":["React","useEffect","useRef","useState","Draw","props","canvasRef","ctxRef","isDrawing","setIsDrawing","lineWidth","setLineWidth","lineColor","setLineColor","lineOpacity","setLineOpacity","letter","setLetter","canvas","current","ctx","getContext","lineCap","lineJoin","globalAlpha","strokeStyle","startDrawing","e","callback","beginPath","moveTo","nativeEvent","offsetX","offsetY","endDrawing","closePath","draw","lineTo","stroke","font"],"mappings":"gLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,MAApB,CAA4BC,QAA5B,KAA4C,OAA5C,CAGA,MAAO,aAAP,CAGA,QAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqB,CAEnB,GAAMC,CAAAA,SAAS,CAAGJ,MAAM,CAAC,IAAD,CAAxB,CAEA,GAAMK,CAAAA,MAAM,CAAGL,MAAM,CAAC,IAAD,CAArB,CAJmB,cAMeC,QAAQ,CAAC,KAAD,CANvB,wCAMZK,SANY,eAMDC,YANC,8BAQeN,QAAQ,CAAC,EAAD,CARvB,yCAQZO,SARY,eAQDC,YARC,8BAUeR,QAAQ,CAACE,KAAK,CAACO,SAAP,CAVvB,yCAUZA,SAVY,eAUDC,YAVC,8BAYmBV,QAAQ,CAAC,CAAD,CAZ3B,yCAYZW,WAZY,eAYCC,cAZD,8BAaSZ,QAAQ,CAACE,KAAK,CAACW,MAAP,CAbjB,0CAaZA,MAbY,gBAaJC,SAbI,gBAiBnB;AAEA;AAEAhB,SAAS,CAAC,UAAM,CAEd,GAAMiB,CAAAA,MAAM,CAAGZ,SAAS,CAACa,OAAzB,CAEA,GAAMC,CAAAA,GAAG,CAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ,CAEAD,GAAG,CAACE,OAAJ,CAAc,OAAd,CAEAF,GAAG,CAACG,QAAJ,CAAe,OAAf,CAEAH,GAAG,CAACI,WAAJ,CAAkBV,WAAlB,CAEAM,GAAG,CAACK,WAAJ,CAAkBb,SAAlB,CAEAQ,GAAG,CAACV,SAAJ,CAAgBA,SAAhB,CAEAH,MAAM,CAACY,OAAP,CAAiBC,GAAjB,CAED,CAlBQ,CAkBN,CAACR,SAAD,CAAYE,WAAZ,CAAyBJ,SAAzB,CAlBM,CAAT,CAsBA;AAEA,GAAMgB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAG1BtB,KAAK,CAACuB,QAAN,EAAiBvB,KAAK,CAACuB,QAAN,EAAjB,CAGArB,MAAM,CAACY,OAAP,CAAeU,SAAf,GAEAtB,MAAM,CAACY,OAAP,CAAeW,MAAf,CAEEH,CAAC,CAACI,WAAF,CAAcC,OAFhB,CAIEL,CAAC,CAACI,WAAF,CAAcE,OAJhB,EAQAxB,YAAY,CAAC,IAAD,CAAZ,CAED,CAlBD,CAsBA;AAEA,GAAMyB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAEvB3B,MAAM,CAACY,OAAP,CAAegB,SAAf,GAEA1B,YAAY,CAAC,KAAD,CAAZ,CAED,CAND,CAUA,GAAM2B,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACT,CAAD,CAAO,CAElB,GAAI,CAACnB,SAAL,CAAgB,CAEd,OAED,CAEDD,MAAM,CAACY,OAAP,CAAekB,MAAf,CAEEV,CAAC,CAACI,WAAF,CAAcC,OAFhB,CAIEL,CAAC,CAACI,WAAF,CAAcE,OAJhB,EAUA1B,MAAM,CAACY,OAAP,CAAemB,MAAf,GAED,CApBD,CAwBA,MAEE;AAEE,2BAAK,SAAS,CAAC,oBAAf,EAGE,8BAEE,WAAW,CAAEZ,YAFf,CAIE,SAAS,CAAEQ,UAJb,CAME,WAAW,CAAEE,IANf,CAOE,WAAW,CAAEV,YAPf,CAQE,YAAY,CAAEA,YARhB,CAUE,GAAG,CAAEpB,SAVP,CAYE,KAAK,SAZP,CAcE,MAAM,QAdR,CAeE,KAAK,CAAE,CAAC,YAAY,mBAAmBU,MAAnB,CAA0B,GAAvC,CAfT,EAHF,CAsBA,2BAAK,MAAM,CAAC,GAAZ,CAAgB,KAAK,CAAC,GAAtB,EACF,gCACI,gCAAU,EAAE,CAAE,cAAcA,MAA5B,EACI,4BAAM,CAAC,CAAC,GAAR,CAAY,CAAC,CAAC,KAAd,CAAoB,YAAY,CAAC,SAAjC,CAA2C,UAAU,CAAEX,KAAK,CAACkC,IAA7D,CAAmE,QAAQ,CAAC,OAA5E,CAAoF,UAAU,CAAC,KAA/F,MAAuGvB,MAAvG,KADJ,CADJ,CADE,CAtBA,CAJJ,EAqCD,CAID,cAAeZ,CAAAA,IAAf","sourcesContent":["import React from 'react';\nimport { useEffect, useRef, useState } from \"react\"; \n\n\nimport \"./hero.scss\"; \n\n  \nfunction Draw(props) { \n\n  const canvasRef = useRef(null); \n\n  const ctxRef = useRef(null); \n\n  const [isDrawing, setIsDrawing] = useState(false); \n\n  const [lineWidth, setLineWidth] = useState(25); \n\n  const [lineColor, setLineColor] = useState(props.lineColor); \n\n  const [lineOpacity, setLineOpacity] = useState(1); \n  const [letter, setLetter] = useState(props.letter); \n\n  \n\n  // Initialization when the component \n\n  // mounts for the first time \n\n  useEffect(() => { \n\n    const canvas = canvasRef.current; \n\n    const ctx = canvas.getContext(\"2d\"); \n\n    ctx.lineCap = \"round\"; \n\n    ctx.lineJoin = \"round\"; \n\n    ctx.globalAlpha = lineOpacity; \n\n    ctx.strokeStyle = lineColor; \n\n    ctx.lineWidth = lineWidth; \n\n    ctxRef.current = ctx; \n\n  }, [lineColor, lineOpacity, lineWidth]); \n\n  \n\n  // Function for starting the drawing \n\n  const startDrawing = (e) => { \n\n    \n    props.callback&& props.callback()\n    \n\n    ctxRef.current.beginPath(); \n\n    ctxRef.current.moveTo( \n\n      e.nativeEvent.offsetX,  \n\n      e.nativeEvent.offsetY \n\n    ); \n\n    setIsDrawing(true); \n\n  }; \n\n  \n\n  // Function for ending the drawing \n\n  const endDrawing = () => { \n\n    ctxRef.current.closePath(); \n\n    setIsDrawing(false); \n\n  }; \n\n  \n\n  const draw = (e) => { \n\n    if (!isDrawing) { \n\n      return; \n\n    } \n\n    ctxRef.current.lineTo( \n\n      e.nativeEvent.offsetX,  \n\n      e.nativeEvent.offsetY \n\n    ); \n\n      \n\n    ctxRef.current.stroke(); \n\n  }; \n\n  \n\n  return ( \n\n    // <div className=\"App-draw\"> \n\n      <div className=\"App-draw draw-area\"> \n\n\n        <canvas \n\n          onMouseDown={startDrawing} \n\n          onMouseUp={endDrawing} \n\n          onMouseMove={draw} \n          onMouseOver={startDrawing}\n          onTouchStart={startDrawing}\n\n          ref={canvasRef} \n\n          width={`110pxx`} \n\n          height={`110px`} \n          style={{'--clip-id':\"URL(#svgTextPath\"+letter+')'}}\n\n        >\n      </canvas> \n      <svg height=\"0\" width=\"0\">\n    <defs>\n        <clipPath id={\"svgTextPath\"+letter}>\n            <text x=\"2\" y=\"107\" lengthAdjust=\"spacing\" fontFamily={props.font} fontSize=\"120px\" fontWeight=\"400\"> {letter} </text>\n        </clipPath>\n    </defs>\n</svg>\n\n    </div> \n\n  ); \n} \n\n  \n\nexport default Draw;"]},"metadata":{},"sourceType":"module"}