{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/\\u05E2\\u05D1\\u05D5\\u05D3\\u05D5\\u05EA \\u05DC\\u05D4\\u05D2\\u05E9\\u05D4/myweb/src/components/tetris/components/Stage.js\";\nimport React from 'react';\nimport { StyledStage } from '../styles/StyledStage';\nimport { TETROMINOS } from '../tetrominos';\nimport Cell from './Cell';\nexport default function Stage({\n  stage,\n  newGame\n}) {\n  const StageMain = () => React.createElement(StyledStage, {\n    width: stage[0].length,\n    height: stage.length,\n    id: \"stage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, stage.map(row => row.map((cell, x) => {\n    return React.createElement(Cell, {\n      key: x,\n      type: cell[0],\n      text: cell[2],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    });\n  })));\n\n  const StageStartPositon = () => {\n    const newStage = stage;\n    console.log(Object.entries(TETROMINOS));\n    Object.entries(TETROMINOS).forEach((obj, y) => {\n      obj[1].shape.forEach((value, x) => {\n        console.log(value);\n\n        if (value !== 0) {\n          newStage[y][x] = [value, 'clear', obj[1].text[y][x]];\n        }\n      });\n    });\n    console.log(newStage);\n    return React.createElement(StyledStage, {\n      width: stage[0].length,\n      height: stage.length,\n      id: \"stage-start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, stage.map(row => row.map((cell, x) => {\n      return React.createElement(Cell, {\n        key: x,\n        type: cell[0],\n        text: cell[2],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n    })));\n  };\n\n  if (newGame) return StageStartPositon();else return StageMain();\n} // const Stage = ({ stage,newGame }) => ( { \n//     //  if(newGame){\n//   return  StageStartPositon(stage);\n// //   } else { StageMain(stage)\n//    }\n//   });\n// export default Stage;","map":{"version":3,"sources":["/Users/user/Desktop/עבודות להגשה/myweb/src/components/tetris/components/Stage.js"],"names":["React","StyledStage","TETROMINOS","Cell","Stage","stage","newGame","StageMain","length","map","row","cell","x","StageStartPositon","newStage","console","log","Object","entries","forEach","obj","y","shape","value","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,KAAF;AAAQC,EAAAA;AAAR,CAAf,EAAkC;AAC7C,QAAMC,SAAS,GAAG,MAEd,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEF,KAAK,CAAC,CAAD,CAAL,CAASG,MAA7B;AAAqC,IAAA,MAAM,EAAEH,KAAK,CAACG,MAAnD;AAA2D,IAAA,EAAE,EAAC,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIH,KAAK,CAACI,GAAN,CAAUC,GAAG,IAAIA,GAAG,CAACD,GAAJ,CAAQ,CAACE,IAAD,EAAOC,CAAP,KAAa;AACvC,WAAO,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,CAAX;AAAc,MAAA,IAAI,EAAED,IAAI,CAAC,CAAD,CAAxB;AAA6B,MAAA,IAAI,EAAEA,IAAI,CAAC,CAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAAsD,GADpC,CAAjB,CADJ,CAFJ;;AAOA,QAAME,iBAAiB,GAAG,MAAQ;AAE9B,UAAMC,QAAQ,GAACT,KAAf;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,OAAP,CAAehB,UAAf,CAAZ;AACAe,IAAAA,MAAM,CAACC,OAAP,CAAehB,UAAf,EAA2BiB,OAA3B,CAAmC,CAACC,GAAD,EAAOC,CAAP,KAAW;AAE1CD,MAAAA,GAAG,CAAC,CAAD,CAAH,CAAOE,KAAP,CAAaH,OAAb,CAAqB,CAACI,KAAD,EAAOX,CAAP,KAAW;AAC5BG,QAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;;AACA,YAAIA,KAAK,KAAK,CAAd,EAAiB;AACbT,UAAAA,QAAQ,CAACO,CAAD,CAAR,CAAaT,CAAb,IAAkB,CAChBW,KADgB,EAEhB,OAFgB,EAGhBH,GAAG,CAAC,CAAD,CAAH,CAAOI,IAAP,CAAYH,CAAZ,EAAeT,CAAf,CAHgB,CAAlB;AAKD;AACF,OATL;AAYH,KAdD;AAeDG,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,WAAQ,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAET,KAAK,CAAC,CAAD,CAAL,CAASG,MAA7B;AAAqC,MAAA,MAAM,EAAEH,KAAK,CAACG,MAAnD;AAA2D,MAAA,EAAE,EAAC,aAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACHH,KAAK,CAACI,GAAN,CAAUC,GAAG,IAAIA,GAAG,CAACD,GAAJ,CAAQ,CAACE,IAAD,EAAOC,CAAP,KAAa;AACvC,aAAO,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,CAAX;AAAc,QAAA,IAAI,EAAED,IAAI,CAAC,CAAD,CAAxB;AAA6B,QAAA,IAAI,EAAEA,IAAI,CAAC,CAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAAsD,KADpC,CAAjB,CADG,CAAR;AAIK,GAxBP;;AA0BE,MAAGL,OAAH,EACA,OAAOO,iBAAiB,EAAxB,CADA,KAEO,OAAON,SAAS,EAAhB;AAEZ,C,CACD;AAEA;AACA;AACA;AACA;AACA;AAIA","sourcesContent":["import React from 'react';\nimport { StyledStage } from '../styles/StyledStage';\nimport { TETROMINOS } from '../tetrominos';\n\nimport Cell from './Cell';\n\nexport default function Stage({ stage,newGame }) {\n    const StageMain = () => (\n  \n        <StyledStage width={stage[0].length} height={stage.length} id=\"stage\">\n           {stage.map(row => row.map((cell, x) => {\n           return <Cell key={x} type={cell[0]} text={cell[2]} />}))}\n         </StyledStage>\n     );\n    const StageStartPositon = (  ) => {\n\n        const newStage=stage;\n        console.log(Object.entries(TETROMINOS))\n        Object.entries(TETROMINOS).forEach((obj , y)=>{\n\n            obj[1].shape.forEach((value,x)=>{\n                console.log(value)\n                if (value !== 0) {\n                    newStage[y ][x] = [\n                      value,\n                      'clear',\n                      obj[1].text[y][x]\n                    ];\n                  }\n                });\n            \n           \n        })\n       console.log(newStage);\n      return  <StyledStage width={stage[0].length} height={stage.length} id=\"stage-start\">\n          {stage.map(row => row.map((cell, x) => {\n          return <Cell key={x} type={cell[0]} text={cell[2]} />}))}\n        </StyledStage>\n          }\n      ;\n      if(newGame)\n      return StageStartPositon()\n      else   return StageMain()\n\n}\n// const Stage = ({ stage,newGame }) => ( { \n \n//     //  if(newGame){\n//   return  StageStartPositon(stage);\n// //   } else { StageMain(stage)\n//    }\n//   });\n\n\n\n// export default Stage;"]},"metadata":{},"sourceType":"module"}