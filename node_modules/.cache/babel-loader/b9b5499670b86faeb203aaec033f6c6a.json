{"ast":null,"code":"import { Util } from './Util.js';\nimport { Konva } from './Global.js';\n\nfunction simplifyArray(arr) {\n  var retArr = [],\n      len = arr.length,\n      util = Util,\n      n,\n      val;\n\n  for (n = 0; n < len; n++) {\n    val = arr[n];\n\n    if (util._isNumber(val)) {\n      val = Math.round(val * 1000) / 1000;\n    } else if (!util._isString(val)) {\n      val = val + '';\n    }\n\n    retArr.push(val);\n  }\n\n  return retArr;\n}\n\nvar COMMA = ',',\n    OPEN_PAREN = '(',\n    CLOSE_PAREN = ')',\n    OPEN_PAREN_BRACKET = '([',\n    CLOSE_BRACKET_PAREN = '])',\n    SEMICOLON = ';',\n    DOUBLE_PAREN = '()',\n    EQUALS = '=',\n    CONTEXT_METHODS = ['arc', 'arcTo', 'beginPath', 'bezierCurveTo', 'clearRect', 'clip', 'closePath', 'createLinearGradient', 'createPattern', 'createRadialGradient', 'drawImage', 'ellipse', 'fill', 'fillText', 'getImageData', 'createImageData', 'lineTo', 'moveTo', 'putImageData', 'quadraticCurveTo', 'rect', 'restore', 'rotate', 'save', 'scale', 'setLineDash', 'setTransform', 'stroke', 'strokeText', 'transform', 'translate'];\nvar CONTEXT_PROPERTIES = ['fillStyle', 'strokeStyle', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'lineCap', 'lineDashOffset', 'lineJoin', 'lineWidth', 'miterLimit', 'font', 'textAlign', 'textBaseline', 'globalAlpha', 'globalCompositeOperation', 'imageSmoothingEnabled'];\nconst traceArrMax = 100;\nexport class Context {\n  constructor(canvas) {\n    this.canvas = canvas;\n\n    if (Konva.enableTrace) {\n      this.traceArr = [];\n\n      this._enableTrace();\n    }\n  }\n\n  fillShape(shape) {\n    if (shape.fillEnabled()) {\n      this._fill(shape);\n    }\n  }\n\n  _fill(shape) {}\n\n  strokeShape(shape) {\n    if (shape.hasStroke()) {\n      this._stroke(shape);\n    }\n  }\n\n  _stroke(shape) {}\n\n  fillStrokeShape(shape) {\n    if (shape.attrs.fillAfterStrokeEnabled) {\n      this.strokeShape(shape);\n      this.fillShape(shape);\n    } else {\n      this.fillShape(shape);\n      this.strokeShape(shape);\n    }\n  }\n\n  getTrace(relaxed, rounded) {\n    var traceArr = this.traceArr,\n        len = traceArr.length,\n        str = '',\n        n,\n        trace,\n        method,\n        args;\n\n    for (n = 0; n < len; n++) {\n      trace = traceArr[n];\n      method = trace.method;\n\n      if (method) {\n        args = trace.args;\n        str += method;\n\n        if (relaxed) {\n          str += DOUBLE_PAREN;\n        } else {\n          if (Util._isArray(args[0])) {\n            str += OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\n          } else {\n            if (rounded) {\n              args = args.map(a => typeof a === 'number' ? Math.floor(a) : a);\n            }\n\n            str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\n          }\n        }\n      } else {\n        str += trace.property;\n\n        if (!relaxed) {\n          str += EQUALS + trace.val;\n        }\n      }\n\n      str += SEMICOLON;\n    }\n\n    return str;\n  }\n\n  clearTrace() {\n    this.traceArr = [];\n  }\n\n  _trace(str) {\n    var traceArr = this.traceArr,\n        len;\n    traceArr.push(str);\n    len = traceArr.length;\n\n    if (len >= traceArrMax) {\n      traceArr.shift();\n    }\n  }\n\n  reset() {\n    var pixelRatio = this.getCanvas().getPixelRatio();\n    this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n  }\n\n  getCanvas() {\n    return this.canvas;\n  }\n\n  clear(bounds) {\n    var canvas = this.getCanvas();\n\n    if (bounds) {\n      this.clearRect(bounds.x || 0, bounds.y || 0, bounds.width || 0, bounds.height || 0);\n    } else {\n      this.clearRect(0, 0, canvas.getWidth() / canvas.pixelRatio, canvas.getHeight() / canvas.pixelRatio);\n    }\n  }\n\n  _applyLineCap(shape) {\n    var lineCap = shape.getLineCap();\n\n    if (lineCap) {\n      this.setAttr('lineCap', lineCap);\n    }\n  }\n\n  _applyOpacity(shape) {\n    var absOpacity = shape.getAbsoluteOpacity();\n\n    if (absOpacity !== 1) {\n      this.setAttr('globalAlpha', absOpacity);\n    }\n  }\n\n  _applyLineJoin(shape) {\n    var lineJoin = shape.attrs.lineJoin;\n\n    if (lineJoin) {\n      this.setAttr('lineJoin', lineJoin);\n    }\n  }\n\n  setAttr(attr, val) {\n    this._context[attr] = val;\n  }\n\n  arc(a0, a1, a2, a3, a4, a5) {\n    this._context.arc(a0, a1, a2, a3, a4, a5);\n  }\n\n  arcTo(a0, a1, a2, a3, a4) {\n    this._context.arcTo(a0, a1, a2, a3, a4);\n  }\n\n  beginPath() {\n    this._context.beginPath();\n  }\n\n  bezierCurveTo(a0, a1, a2, a3, a4, a5) {\n    this._context.bezierCurveTo(a0, a1, a2, a3, a4, a5);\n  }\n\n  clearRect(a0, a1, a2, a3) {\n    this._context.clearRect(a0, a1, a2, a3);\n  }\n\n  clip() {\n    this._context.clip();\n  }\n\n  closePath() {\n    this._context.closePath();\n  }\n\n  createImageData(a0, a1) {\n    var a = arguments;\n\n    if (a.length === 2) {\n      return this._context.createImageData(a0, a1);\n    } else if (a.length === 1) {\n      return this._context.createImageData(a0);\n    }\n  }\n\n  createLinearGradient(a0, a1, a2, a3) {\n    return this._context.createLinearGradient(a0, a1, a2, a3);\n  }\n\n  createPattern(a0, a1) {\n    return this._context.createPattern(a0, a1);\n  }\n\n  createRadialGradient(a0, a1, a2, a3, a4, a5) {\n    return this._context.createRadialGradient(a0, a1, a2, a3, a4, a5);\n  }\n\n  drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n    var a = arguments,\n        _context = this._context;\n\n    if (a.length === 3) {\n      _context.drawImage(a0, a1, a2);\n    } else if (a.length === 5) {\n      _context.drawImage(a0, a1, a2, a3, a4);\n    } else if (a.length === 9) {\n      _context.drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8);\n    }\n  }\n\n  ellipse(a0, a1, a2, a3, a4, a5, a6, a7) {\n    this._context.ellipse(a0, a1, a2, a3, a4, a5, a6, a7);\n  }\n\n  isPointInPath(x, y) {\n    return this._context.isPointInPath(x, y);\n  }\n\n  fill(path2d) {\n    if (path2d) {\n      this._context.fill(path2d);\n    } else {\n      this._context.fill();\n    }\n  }\n\n  fillRect(x, y, width, height) {\n    this._context.fillRect(x, y, width, height);\n  }\n\n  strokeRect(x, y, width, height) {\n    this._context.strokeRect(x, y, width, height);\n  }\n\n  fillText(text, x, y, maxWidth) {\n    if (maxWidth) {\n      this._context.fillText(text, x, y, maxWidth);\n    } else {\n      this._context.fillText(text, x, y);\n    }\n  }\n\n  measureText(text) {\n    return this._context.measureText(text);\n  }\n\n  getImageData(a0, a1, a2, a3) {\n    return this._context.getImageData(a0, a1, a2, a3);\n  }\n\n  lineTo(a0, a1) {\n    this._context.lineTo(a0, a1);\n  }\n\n  moveTo(a0, a1) {\n    this._context.moveTo(a0, a1);\n  }\n\n  rect(a0, a1, a2, a3) {\n    this._context.rect(a0, a1, a2, a3);\n  }\n\n  putImageData(a0, a1, a2) {\n    this._context.putImageData(a0, a1, a2);\n  }\n\n  quadraticCurveTo(a0, a1, a2, a3) {\n    this._context.quadraticCurveTo(a0, a1, a2, a3);\n  }\n\n  restore() {\n    this._context.restore();\n  }\n\n  rotate(a0) {\n    this._context.rotate(a0);\n  }\n\n  save() {\n    this._context.save();\n  }\n\n  scale(a0, a1) {\n    this._context.scale(a0, a1);\n  }\n\n  setLineDash(a0) {\n    if (this._context.setLineDash) {\n      this._context.setLineDash(a0);\n    } else if ('mozDash' in this._context) {\n      this._context['mozDash'] = a0;\n    } else if ('webkitLineDash' in this._context) {\n      this._context['webkitLineDash'] = a0;\n    }\n  }\n\n  getLineDash() {\n    return this._context.getLineDash();\n  }\n\n  setTransform(a0, a1, a2, a3, a4, a5) {\n    this._context.setTransform(a0, a1, a2, a3, a4, a5);\n  }\n\n  stroke(path2d) {\n    if (path2d) {\n      this._context.stroke(path2d);\n    } else {\n      this._context.stroke();\n    }\n  }\n\n  strokeText(a0, a1, a2, a3) {\n    this._context.strokeText(a0, a1, a2, a3);\n  }\n\n  transform(a0, a1, a2, a3, a4, a5) {\n    this._context.transform(a0, a1, a2, a3, a4, a5);\n  }\n\n  translate(a0, a1) {\n    this._context.translate(a0, a1);\n  }\n\n  _enableTrace() {\n    var that = this,\n        len = CONTEXT_METHODS.length,\n        origSetter = this.setAttr,\n        n,\n        args;\n\n    var func = function (methodName) {\n      var origMethod = that[methodName],\n          ret;\n\n      that[methodName] = function () {\n        args = simplifyArray(Array.prototype.slice.call(arguments, 0));\n        ret = origMethod.apply(that, arguments);\n\n        that._trace({\n          method: methodName,\n          args: args\n        });\n\n        return ret;\n      };\n    };\n\n    for (n = 0; n < len; n++) {\n      func(CONTEXT_METHODS[n]);\n    }\n\n    that.setAttr = function () {\n      origSetter.apply(that, arguments);\n      var prop = arguments[0];\n      var val = arguments[1];\n\n      if (prop === 'shadowOffsetX' || prop === 'shadowOffsetY' || prop === 'shadowBlur') {\n        val = val / this.canvas.getPixelRatio();\n      }\n\n      that._trace({\n        property: prop,\n        val: val\n      });\n    };\n  }\n\n  _applyGlobalCompositeOperation(node) {\n    const op = node.attrs.globalCompositeOperation;\n    var def = !op || op === 'source-over';\n\n    if (!def) {\n      this.setAttr('globalCompositeOperation', op);\n    }\n  }\n\n}\nCONTEXT_PROPERTIES.forEach(function (prop) {\n  Object.defineProperty(Context.prototype, prop, {\n    get() {\n      return this._context[prop];\n    },\n\n    set(val) {\n      this._context[prop] = val;\n    }\n\n  });\n});\nexport class SceneContext extends Context {\n  constructor(canvas) {\n    super(canvas);\n    this._context = canvas._canvas.getContext('2d');\n  }\n\n  _fillColor(shape) {\n    var fill = shape.fill();\n    this.setAttr('fillStyle', fill);\n\n    shape._fillFunc(this);\n  }\n\n  _fillPattern(shape) {\n    this.setAttr('fillStyle', shape._getFillPattern());\n\n    shape._fillFunc(this);\n  }\n\n  _fillLinearGradient(shape) {\n    var grd = shape._getLinearGradient();\n\n    if (grd) {\n      this.setAttr('fillStyle', grd);\n\n      shape._fillFunc(this);\n    }\n  }\n\n  _fillRadialGradient(shape) {\n    var grd = shape._getRadialGradient();\n\n    if (grd) {\n      this.setAttr('fillStyle', grd);\n\n      shape._fillFunc(this);\n    }\n  }\n\n  _fill(shape) {\n    var hasColor = shape.fill(),\n        fillPriority = shape.getFillPriority();\n\n    if (hasColor && fillPriority === 'color') {\n      this._fillColor(shape);\n\n      return;\n    }\n\n    var hasPattern = shape.getFillPatternImage();\n\n    if (hasPattern && fillPriority === 'pattern') {\n      this._fillPattern(shape);\n\n      return;\n    }\n\n    var hasLinearGradient = shape.getFillLinearGradientColorStops();\n\n    if (hasLinearGradient && fillPriority === 'linear-gradient') {\n      this._fillLinearGradient(shape);\n\n      return;\n    }\n\n    var hasRadialGradient = shape.getFillRadialGradientColorStops();\n\n    if (hasRadialGradient && fillPriority === 'radial-gradient') {\n      this._fillRadialGradient(shape);\n\n      return;\n    }\n\n    if (hasColor) {\n      this._fillColor(shape);\n    } else if (hasPattern) {\n      this._fillPattern(shape);\n    } else if (hasLinearGradient) {\n      this._fillLinearGradient(shape);\n    } else if (hasRadialGradient) {\n      this._fillRadialGradient(shape);\n    }\n  }\n\n  _strokeLinearGradient(shape) {\n    var start = shape.getStrokeLinearGradientStartPoint(),\n        end = shape.getStrokeLinearGradientEndPoint(),\n        colorStops = shape.getStrokeLinearGradientColorStops(),\n        grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n\n    if (colorStops) {\n      for (var n = 0; n < colorStops.length; n += 2) {\n        grd.addColorStop(colorStops[n], colorStops[n + 1]);\n      }\n\n      this.setAttr('strokeStyle', grd);\n    }\n  }\n\n  _stroke(shape) {\n    var dash = shape.dash(),\n        strokeScaleEnabled = shape.getStrokeScaleEnabled();\n\n    if (shape.hasStroke()) {\n      if (!strokeScaleEnabled) {\n        this.save();\n        var pixelRatio = this.getCanvas().getPixelRatio();\n        this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n      }\n\n      this._applyLineCap(shape);\n\n      if (dash && shape.dashEnabled()) {\n        this.setLineDash(dash);\n        this.setAttr('lineDashOffset', shape.dashOffset());\n      }\n\n      this.setAttr('lineWidth', shape.strokeWidth());\n\n      if (!shape.getShadowForStrokeEnabled()) {\n        this.setAttr('shadowColor', 'rgba(0,0,0,0)');\n      }\n\n      var hasLinearGradient = shape.getStrokeLinearGradientColorStops();\n\n      if (hasLinearGradient) {\n        this._strokeLinearGradient(shape);\n      } else {\n        this.setAttr('strokeStyle', shape.stroke());\n      }\n\n      shape._strokeFunc(this);\n\n      if (!strokeScaleEnabled) {\n        this.restore();\n      }\n    }\n  }\n\n  _applyShadow(shape) {\n    var _a, _b, _c;\n\n    var color = (_a = shape.getShadowRGBA()) !== null && _a !== void 0 ? _a : 'black',\n        blur = (_b = shape.getShadowBlur()) !== null && _b !== void 0 ? _b : 5,\n        offset = (_c = shape.getShadowOffset()) !== null && _c !== void 0 ? _c : {\n      x: 0,\n      y: 0\n    },\n        scale = shape.getAbsoluteScale(),\n        ratio = this.canvas.getPixelRatio(),\n        scaleX = scale.x * ratio,\n        scaleY = scale.y * ratio;\n    this.setAttr('shadowColor', color);\n    this.setAttr('shadowBlur', blur * Math.min(Math.abs(scaleX), Math.abs(scaleY)));\n    this.setAttr('shadowOffsetX', offset.x * scaleX);\n    this.setAttr('shadowOffsetY', offset.y * scaleY);\n  }\n\n}\nexport class HitContext extends Context {\n  constructor(canvas) {\n    super(canvas);\n    this._context = canvas._canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n  }\n\n  _fill(shape) {\n    this.save();\n    this.setAttr('fillStyle', shape.colorKey);\n\n    shape._fillFuncHit(this);\n\n    this.restore();\n  }\n\n  strokeShape(shape) {\n    if (shape.hasHitStroke()) {\n      this._stroke(shape);\n    }\n  }\n\n  _stroke(shape) {\n    if (shape.hasHitStroke()) {\n      var strokeScaleEnabled = shape.getStrokeScaleEnabled();\n\n      if (!strokeScaleEnabled) {\n        this.save();\n        var pixelRatio = this.getCanvas().getPixelRatio();\n        this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n      }\n\n      this._applyLineCap(shape);\n\n      var hitStrokeWidth = shape.hitStrokeWidth();\n      var strokeWidth = hitStrokeWidth === 'auto' ? shape.strokeWidth() : hitStrokeWidth;\n      this.setAttr('lineWidth', strokeWidth);\n      this.setAttr('strokeStyle', shape.colorKey);\n\n      shape._strokeFuncHit(this);\n\n      if (!strokeScaleEnabled) {\n        this.restore();\n      }\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/user/Desktop/עבודות להגשה/myweb/node_modules/konva/lib/Context.js"],"names":["Util","Konva","simplifyArray","arr","retArr","len","length","util","n","val","_isNumber","Math","round","_isString","push","COMMA","OPEN_PAREN","CLOSE_PAREN","OPEN_PAREN_BRACKET","CLOSE_BRACKET_PAREN","SEMICOLON","DOUBLE_PAREN","EQUALS","CONTEXT_METHODS","CONTEXT_PROPERTIES","traceArrMax","Context","constructor","canvas","enableTrace","traceArr","_enableTrace","fillShape","shape","fillEnabled","_fill","strokeShape","hasStroke","_stroke","fillStrokeShape","attrs","fillAfterStrokeEnabled","getTrace","relaxed","rounded","str","trace","method","args","_isArray","join","map","a","floor","property","clearTrace","_trace","shift","reset","pixelRatio","getCanvas","getPixelRatio","setTransform","clear","bounds","clearRect","x","y","width","height","getWidth","getHeight","_applyLineCap","lineCap","getLineCap","setAttr","_applyOpacity","absOpacity","getAbsoluteOpacity","_applyLineJoin","lineJoin","attr","_context","arc","a0","a1","a2","a3","a4","a5","arcTo","beginPath","bezierCurveTo","clip","closePath","createImageData","arguments","createLinearGradient","createPattern","createRadialGradient","drawImage","a6","a7","a8","ellipse","isPointInPath","fill","path2d","fillRect","strokeRect","fillText","text","maxWidth","measureText","getImageData","lineTo","moveTo","rect","putImageData","quadraticCurveTo","restore","rotate","save","scale","setLineDash","getLineDash","stroke","strokeText","transform","translate","that","origSetter","func","methodName","origMethod","ret","Array","prototype","slice","call","apply","prop","_applyGlobalCompositeOperation","node","op","globalCompositeOperation","def","forEach","Object","defineProperty","get","set","SceneContext","_canvas","getContext","_fillColor","_fillFunc","_fillPattern","_getFillPattern","_fillLinearGradient","grd","_getLinearGradient","_fillRadialGradient","_getRadialGradient","hasColor","fillPriority","getFillPriority","hasPattern","getFillPatternImage","hasLinearGradient","getFillLinearGradientColorStops","hasRadialGradient","getFillRadialGradientColorStops","_strokeLinearGradient","start","getStrokeLinearGradientStartPoint","end","getStrokeLinearGradientEndPoint","colorStops","getStrokeLinearGradientColorStops","addColorStop","dash","strokeScaleEnabled","getStrokeScaleEnabled","dashEnabled","dashOffset","strokeWidth","getShadowForStrokeEnabled","_strokeFunc","_applyShadow","_a","_b","_c","color","getShadowRGBA","blur","getShadowBlur","offset","getShadowOffset","getAbsoluteScale","ratio","scaleX","scaleY","min","abs","HitContext","willReadFrequently","colorKey","_fillFuncHit","hasHitStroke","hitStrokeWidth","_strokeFuncHit"],"mappings":"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","sourcesContent":["import { Util } from './Util.js';\nimport { Konva } from './Global.js';\nfunction simplifyArray(arr) {\n    var retArr = [], len = arr.length, util = Util, n, val;\n    for (n = 0; n < len; n++) {\n        val = arr[n];\n        if (util._isNumber(val)) {\n            val = Math.round(val * 1000) / 1000;\n        }\n        else if (!util._isString(val)) {\n            val = val + '';\n        }\n        retArr.push(val);\n    }\n    return retArr;\n}\nvar COMMA = ',', OPEN_PAREN = '(', CLOSE_PAREN = ')', OPEN_PAREN_BRACKET = '([', CLOSE_BRACKET_PAREN = '])', SEMICOLON = ';', DOUBLE_PAREN = '()', EQUALS = '=', CONTEXT_METHODS = [\n    'arc',\n    'arcTo',\n    'beginPath',\n    'bezierCurveTo',\n    'clearRect',\n    'clip',\n    'closePath',\n    'createLinearGradient',\n    'createPattern',\n    'createRadialGradient',\n    'drawImage',\n    'ellipse',\n    'fill',\n    'fillText',\n    'getImageData',\n    'createImageData',\n    'lineTo',\n    'moveTo',\n    'putImageData',\n    'quadraticCurveTo',\n    'rect',\n    'restore',\n    'rotate',\n    'save',\n    'scale',\n    'setLineDash',\n    'setTransform',\n    'stroke',\n    'strokeText',\n    'transform',\n    'translate',\n];\nvar CONTEXT_PROPERTIES = [\n    'fillStyle',\n    'strokeStyle',\n    'shadowColor',\n    'shadowBlur',\n    'shadowOffsetX',\n    'shadowOffsetY',\n    'lineCap',\n    'lineDashOffset',\n    'lineJoin',\n    'lineWidth',\n    'miterLimit',\n    'font',\n    'textAlign',\n    'textBaseline',\n    'globalAlpha',\n    'globalCompositeOperation',\n    'imageSmoothingEnabled',\n];\nconst traceArrMax = 100;\nexport class Context {\n    constructor(canvas) {\n        this.canvas = canvas;\n        if (Konva.enableTrace) {\n            this.traceArr = [];\n            this._enableTrace();\n        }\n    }\n    fillShape(shape) {\n        if (shape.fillEnabled()) {\n            this._fill(shape);\n        }\n    }\n    _fill(shape) {\n    }\n    strokeShape(shape) {\n        if (shape.hasStroke()) {\n            this._stroke(shape);\n        }\n    }\n    _stroke(shape) {\n    }\n    fillStrokeShape(shape) {\n        if (shape.attrs.fillAfterStrokeEnabled) {\n            this.strokeShape(shape);\n            this.fillShape(shape);\n        }\n        else {\n            this.fillShape(shape);\n            this.strokeShape(shape);\n        }\n    }\n    getTrace(relaxed, rounded) {\n        var traceArr = this.traceArr, len = traceArr.length, str = '', n, trace, method, args;\n        for (n = 0; n < len; n++) {\n            trace = traceArr[n];\n            method = trace.method;\n            if (method) {\n                args = trace.args;\n                str += method;\n                if (relaxed) {\n                    str += DOUBLE_PAREN;\n                }\n                else {\n                    if (Util._isArray(args[0])) {\n                        str += OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\n                    }\n                    else {\n                        if (rounded) {\n                            args = args.map((a) => typeof a === 'number' ? Math.floor(a) : a);\n                        }\n                        str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\n                    }\n                }\n            }\n            else {\n                str += trace.property;\n                if (!relaxed) {\n                    str += EQUALS + trace.val;\n                }\n            }\n            str += SEMICOLON;\n        }\n        return str;\n    }\n    clearTrace() {\n        this.traceArr = [];\n    }\n    _trace(str) {\n        var traceArr = this.traceArr, len;\n        traceArr.push(str);\n        len = traceArr.length;\n        if (len >= traceArrMax) {\n            traceArr.shift();\n        }\n    }\n    reset() {\n        var pixelRatio = this.getCanvas().getPixelRatio();\n        this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n    }\n    getCanvas() {\n        return this.canvas;\n    }\n    clear(bounds) {\n        var canvas = this.getCanvas();\n        if (bounds) {\n            this.clearRect(bounds.x || 0, bounds.y || 0, bounds.width || 0, bounds.height || 0);\n        }\n        else {\n            this.clearRect(0, 0, canvas.getWidth() / canvas.pixelRatio, canvas.getHeight() / canvas.pixelRatio);\n        }\n    }\n    _applyLineCap(shape) {\n        var lineCap = shape.getLineCap();\n        if (lineCap) {\n            this.setAttr('lineCap', lineCap);\n        }\n    }\n    _applyOpacity(shape) {\n        var absOpacity = shape.getAbsoluteOpacity();\n        if (absOpacity !== 1) {\n            this.setAttr('globalAlpha', absOpacity);\n        }\n    }\n    _applyLineJoin(shape) {\n        var lineJoin = shape.attrs.lineJoin;\n        if (lineJoin) {\n            this.setAttr('lineJoin', lineJoin);\n        }\n    }\n    setAttr(attr, val) {\n        this._context[attr] = val;\n    }\n    arc(a0, a1, a2, a3, a4, a5) {\n        this._context.arc(a0, a1, a2, a3, a4, a5);\n    }\n    arcTo(a0, a1, a2, a3, a4) {\n        this._context.arcTo(a0, a1, a2, a3, a4);\n    }\n    beginPath() {\n        this._context.beginPath();\n    }\n    bezierCurveTo(a0, a1, a2, a3, a4, a5) {\n        this._context.bezierCurveTo(a0, a1, a2, a3, a4, a5);\n    }\n    clearRect(a0, a1, a2, a3) {\n        this._context.clearRect(a0, a1, a2, a3);\n    }\n    clip() {\n        this._context.clip();\n    }\n    closePath() {\n        this._context.closePath();\n    }\n    createImageData(a0, a1) {\n        var a = arguments;\n        if (a.length === 2) {\n            return this._context.createImageData(a0, a1);\n        }\n        else if (a.length === 1) {\n            return this._context.createImageData(a0);\n        }\n    }\n    createLinearGradient(a0, a1, a2, a3) {\n        return this._context.createLinearGradient(a0, a1, a2, a3);\n    }\n    createPattern(a0, a1) {\n        return this._context.createPattern(a0, a1);\n    }\n    createRadialGradient(a0, a1, a2, a3, a4, a5) {\n        return this._context.createRadialGradient(a0, a1, a2, a3, a4, a5);\n    }\n    drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        var a = arguments, _context = this._context;\n        if (a.length === 3) {\n            _context.drawImage(a0, a1, a2);\n        }\n        else if (a.length === 5) {\n            _context.drawImage(a0, a1, a2, a3, a4);\n        }\n        else if (a.length === 9) {\n            _context.drawImage(a0, a1, a2, a3, a4, a5, a6, a7, a8);\n        }\n    }\n    ellipse(a0, a1, a2, a3, a4, a5, a6, a7) {\n        this._context.ellipse(a0, a1, a2, a3, a4, a5, a6, a7);\n    }\n    isPointInPath(x, y) {\n        return this._context.isPointInPath(x, y);\n    }\n    fill(path2d) {\n        if (path2d) {\n            this._context.fill(path2d);\n        }\n        else {\n            this._context.fill();\n        }\n    }\n    fillRect(x, y, width, height) {\n        this._context.fillRect(x, y, width, height);\n    }\n    strokeRect(x, y, width, height) {\n        this._context.strokeRect(x, y, width, height);\n    }\n    fillText(text, x, y, maxWidth) {\n        if (maxWidth) {\n            this._context.fillText(text, x, y, maxWidth);\n        }\n        else {\n            this._context.fillText(text, x, y);\n        }\n    }\n    measureText(text) {\n        return this._context.measureText(text);\n    }\n    getImageData(a0, a1, a2, a3) {\n        return this._context.getImageData(a0, a1, a2, a3);\n    }\n    lineTo(a0, a1) {\n        this._context.lineTo(a0, a1);\n    }\n    moveTo(a0, a1) {\n        this._context.moveTo(a0, a1);\n    }\n    rect(a0, a1, a2, a3) {\n        this._context.rect(a0, a1, a2, a3);\n    }\n    putImageData(a0, a1, a2) {\n        this._context.putImageData(a0, a1, a2);\n    }\n    quadraticCurveTo(a0, a1, a2, a3) {\n        this._context.quadraticCurveTo(a0, a1, a2, a3);\n    }\n    restore() {\n        this._context.restore();\n    }\n    rotate(a0) {\n        this._context.rotate(a0);\n    }\n    save() {\n        this._context.save();\n    }\n    scale(a0, a1) {\n        this._context.scale(a0, a1);\n    }\n    setLineDash(a0) {\n        if (this._context.setLineDash) {\n            this._context.setLineDash(a0);\n        }\n        else if ('mozDash' in this._context) {\n            this._context['mozDash'] = a0;\n        }\n        else if ('webkitLineDash' in this._context) {\n            this._context['webkitLineDash'] = a0;\n        }\n    }\n    getLineDash() {\n        return this._context.getLineDash();\n    }\n    setTransform(a0, a1, a2, a3, a4, a5) {\n        this._context.setTransform(a0, a1, a2, a3, a4, a5);\n    }\n    stroke(path2d) {\n        if (path2d) {\n            this._context.stroke(path2d);\n        }\n        else {\n            this._context.stroke();\n        }\n    }\n    strokeText(a0, a1, a2, a3) {\n        this._context.strokeText(a0, a1, a2, a3);\n    }\n    transform(a0, a1, a2, a3, a4, a5) {\n        this._context.transform(a0, a1, a2, a3, a4, a5);\n    }\n    translate(a0, a1) {\n        this._context.translate(a0, a1);\n    }\n    _enableTrace() {\n        var that = this, len = CONTEXT_METHODS.length, origSetter = this.setAttr, n, args;\n        var func = function (methodName) {\n            var origMethod = that[methodName], ret;\n            that[methodName] = function () {\n                args = simplifyArray(Array.prototype.slice.call(arguments, 0));\n                ret = origMethod.apply(that, arguments);\n                that._trace({\n                    method: methodName,\n                    args: args,\n                });\n                return ret;\n            };\n        };\n        for (n = 0; n < len; n++) {\n            func(CONTEXT_METHODS[n]);\n        }\n        that.setAttr = function () {\n            origSetter.apply(that, arguments);\n            var prop = arguments[0];\n            var val = arguments[1];\n            if (prop === 'shadowOffsetX' ||\n                prop === 'shadowOffsetY' ||\n                prop === 'shadowBlur') {\n                val = val / this.canvas.getPixelRatio();\n            }\n            that._trace({\n                property: prop,\n                val: val,\n            });\n        };\n    }\n    _applyGlobalCompositeOperation(node) {\n        const op = node.attrs.globalCompositeOperation;\n        var def = !op || op === 'source-over';\n        if (!def) {\n            this.setAttr('globalCompositeOperation', op);\n        }\n    }\n}\nCONTEXT_PROPERTIES.forEach(function (prop) {\n    Object.defineProperty(Context.prototype, prop, {\n        get() {\n            return this._context[prop];\n        },\n        set(val) {\n            this._context[prop] = val;\n        },\n    });\n});\nexport class SceneContext extends Context {\n    constructor(canvas) {\n        super(canvas);\n        this._context = canvas._canvas.getContext('2d');\n    }\n    _fillColor(shape) {\n        var fill = shape.fill();\n        this.setAttr('fillStyle', fill);\n        shape._fillFunc(this);\n    }\n    _fillPattern(shape) {\n        this.setAttr('fillStyle', shape._getFillPattern());\n        shape._fillFunc(this);\n    }\n    _fillLinearGradient(shape) {\n        var grd = shape._getLinearGradient();\n        if (grd) {\n            this.setAttr('fillStyle', grd);\n            shape._fillFunc(this);\n        }\n    }\n    _fillRadialGradient(shape) {\n        var grd = shape._getRadialGradient();\n        if (grd) {\n            this.setAttr('fillStyle', grd);\n            shape._fillFunc(this);\n        }\n    }\n    _fill(shape) {\n        var hasColor = shape.fill(), fillPriority = shape.getFillPriority();\n        if (hasColor && fillPriority === 'color') {\n            this._fillColor(shape);\n            return;\n        }\n        var hasPattern = shape.getFillPatternImage();\n        if (hasPattern && fillPriority === 'pattern') {\n            this._fillPattern(shape);\n            return;\n        }\n        var hasLinearGradient = shape.getFillLinearGradientColorStops();\n        if (hasLinearGradient && fillPriority === 'linear-gradient') {\n            this._fillLinearGradient(shape);\n            return;\n        }\n        var hasRadialGradient = shape.getFillRadialGradientColorStops();\n        if (hasRadialGradient && fillPriority === 'radial-gradient') {\n            this._fillRadialGradient(shape);\n            return;\n        }\n        if (hasColor) {\n            this._fillColor(shape);\n        }\n        else if (hasPattern) {\n            this._fillPattern(shape);\n        }\n        else if (hasLinearGradient) {\n            this._fillLinearGradient(shape);\n        }\n        else if (hasRadialGradient) {\n            this._fillRadialGradient(shape);\n        }\n    }\n    _strokeLinearGradient(shape) {\n        var start = shape.getStrokeLinearGradientStartPoint(), end = shape.getStrokeLinearGradientEndPoint(), colorStops = shape.getStrokeLinearGradientColorStops(), grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n        if (colorStops) {\n            for (var n = 0; n < colorStops.length; n += 2) {\n                grd.addColorStop(colorStops[n], colorStops[n + 1]);\n            }\n            this.setAttr('strokeStyle', grd);\n        }\n    }\n    _stroke(shape) {\n        var dash = shape.dash(), strokeScaleEnabled = shape.getStrokeScaleEnabled();\n        if (shape.hasStroke()) {\n            if (!strokeScaleEnabled) {\n                this.save();\n                var pixelRatio = this.getCanvas().getPixelRatio();\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            }\n            this._applyLineCap(shape);\n            if (dash && shape.dashEnabled()) {\n                this.setLineDash(dash);\n                this.setAttr('lineDashOffset', shape.dashOffset());\n            }\n            this.setAttr('lineWidth', shape.strokeWidth());\n            if (!shape.getShadowForStrokeEnabled()) {\n                this.setAttr('shadowColor', 'rgba(0,0,0,0)');\n            }\n            var hasLinearGradient = shape.getStrokeLinearGradientColorStops();\n            if (hasLinearGradient) {\n                this._strokeLinearGradient(shape);\n            }\n            else {\n                this.setAttr('strokeStyle', shape.stroke());\n            }\n            shape._strokeFunc(this);\n            if (!strokeScaleEnabled) {\n                this.restore();\n            }\n        }\n    }\n    _applyShadow(shape) {\n        var _a, _b, _c;\n        var color = (_a = shape.getShadowRGBA()) !== null && _a !== void 0 ? _a : 'black', blur = (_b = shape.getShadowBlur()) !== null && _b !== void 0 ? _b : 5, offset = (_c = shape.getShadowOffset()) !== null && _c !== void 0 ? _c : {\n            x: 0,\n            y: 0,\n        }, scale = shape.getAbsoluteScale(), ratio = this.canvas.getPixelRatio(), scaleX = scale.x * ratio, scaleY = scale.y * ratio;\n        this.setAttr('shadowColor', color);\n        this.setAttr('shadowBlur', blur * Math.min(Math.abs(scaleX), Math.abs(scaleY)));\n        this.setAttr('shadowOffsetX', offset.x * scaleX);\n        this.setAttr('shadowOffsetY', offset.y * scaleY);\n    }\n}\nexport class HitContext extends Context {\n    constructor(canvas) {\n        super(canvas);\n        this._context = canvas._canvas.getContext('2d', {\n            willReadFrequently: true,\n        });\n    }\n    _fill(shape) {\n        this.save();\n        this.setAttr('fillStyle', shape.colorKey);\n        shape._fillFuncHit(this);\n        this.restore();\n    }\n    strokeShape(shape) {\n        if (shape.hasHitStroke()) {\n            this._stroke(shape);\n        }\n    }\n    _stroke(shape) {\n        if (shape.hasHitStroke()) {\n            var strokeScaleEnabled = shape.getStrokeScaleEnabled();\n            if (!strokeScaleEnabled) {\n                this.save();\n                var pixelRatio = this.getCanvas().getPixelRatio();\n                this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            }\n            this._applyLineCap(shape);\n            var hitStrokeWidth = shape.hitStrokeWidth();\n            var strokeWidth = hitStrokeWidth === 'auto' ? shape.strokeWidth() : hitStrokeWidth;\n            this.setAttr('lineWidth', strokeWidth);\n            this.setAttr('strokeStyle', shape.colorKey);\n            shape._strokeFuncHit(this);\n            if (!strokeScaleEnabled) {\n                this.restore();\n            }\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}