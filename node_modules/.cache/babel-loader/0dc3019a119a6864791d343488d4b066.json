{"ast":null,"code":"import Constants from '../constants';\nexport var pieces = ['I', 'J', 'L', 'O', 'S', 'T', 'Z'];\nexport var isRotation = function (num) {\n  return num >= 0 && num < Constants.ROTATION_COUNT;\n};\nexport var getBlocks = function (piece) {\n  switch (piece) {\n    case 'I':\n      return [[[0, 1, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0]], [[0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0]], [[0, 0, 0, 0], [0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 0, 0]]];\n\n    case 'J':\n      return [[[0, 1, 0, 0], [0, 1, 0, 0], [1, 1, 0, 0], [0, 0, 0, 0]], [[1, 0, 0, 0], [1, 1, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 1, 1, 0], [0, 1, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [1, 1, 1, 0], [0, 0, 1, 0], [0, 0, 0, 0]]];\n\n    case 'L':\n      return [[[0, 1, 0, 0], [0, 1, 0, 0], [0, 1, 1, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [1, 1, 1, 0], [1, 0, 0, 0], [0, 0, 0, 0]], [[1, 1, 0, 0], [0, 1, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]], [[0, 0, 1, 0], [1, 1, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0]]];\n\n    case 'O':\n      return [[[1, 1, 0, 0], [1, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[1, 1, 0, 0], [1, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[1, 1, 0, 0], [1, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[1, 1, 0, 0], [1, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]];\n\n    case 'S':\n      return [[[0, 0, 0, 0], [0, 1, 1, 0], [1, 1, 0, 0], [0, 0, 0, 0]], [[1, 0, 0, 0], [1, 1, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]], [[0, 1, 1, 0], [1, 1, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 1, 0, 0], [0, 1, 1, 0], [0, 0, 1, 0], [0, 0, 0, 0]]];\n\n    case 'T':\n      return [[[0, 0, 0, 0], [1, 1, 1, 0], [0, 1, 0, 0], [0, 0, 0, 0]], [[0, 1, 0, 0], [1, 1, 0, 0], [0, 1, 0, 0], [0, 0, 0, 0]], [[0, 1, 0, 0], [1, 1, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 1, 0, 0], [0, 1, 1, 0], [0, 1, 0, 0], [0, 0, 0, 0]]];\n\n    case 'Z':\n      return [[[0, 0, 0, 0], [1, 1, 0, 0], [0, 1, 1, 0], [0, 0, 0, 0]], [[0, 1, 0, 0], [1, 1, 0, 0], [1, 0, 0, 0], [0, 0, 0, 0]], [[1, 1, 0, 0], [0, 1, 1, 0], [0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 1, 0], [0, 1, 1, 0], [0, 1, 0, 0], [0, 0, 0, 0]]];\n\n    default:\n      {\n        var exhaustiveCheck = piece;\n        throw new Error(\"Unhandled color case: \".concat(exhaustiveCheck));\n      }\n  }\n};\nexport var getClassName = function (piece) {\n  switch (piece) {\n    case 'I':\n      return 'piece-i';\n\n    case 'J':\n      return 'piece-j';\n\n    case 'L':\n      return 'piece-l';\n\n    case 'O':\n      return 'piece-o';\n\n    case 'S':\n      return 'piece-s';\n\n    case 'T':\n      return 'piece-t';\n\n    case 'Z':\n      return 'piece-z';\n\n    case 'ghost':\n      return 'piece-preview';\n\n    default:\n      {\n        var exhaustiveCheck = piece;\n        throw new Error(\"Unhandled piece case: \".concat(exhaustiveCheck));\n      }\n  }\n};","map":{"version":3,"sources":["/Users/user/Desktop/עבודות להגשה/myweb/node_modules/react-tetris/lib/models/Piece.js"],"names":["Constants","pieces","isRotation","num","ROTATION_COUNT","getBlocks","piece","exhaustiveCheck","Error","concat","getClassName"],"mappings":"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","sourcesContent":["import Constants from '../constants';\nexport var pieces = ['I', 'J', 'L', 'O', 'S', 'T', 'Z'];\nexport var isRotation = function (num) {\n    return num >= 0 && num < Constants.ROTATION_COUNT;\n};\nexport var getBlocks = function (piece) {\n    switch (piece) {\n        case 'I':\n            return [\n                [\n                    [0, 1, 0, 0],\n                    [0, 1, 0, 0],\n                    [0, 1, 0, 0],\n                    [0, 1, 0, 0]\n                ],\n                [\n                    [0, 0, 0, 0],\n                    [1, 1, 1, 1],\n                    [0, 0, 0, 0],\n                    [0, 0, 0, 0]\n                ],\n                [\n                    [0, 0, 1, 0],\n                    [0, 0, 1, 0],\n                    [0, 0, 1, 0],\n                    [0, 0, 1, 0]\n                ],\n                [\n                    [0, 0, 0, 0],\n                    [0, 0, 0, 0],\n                    [1, 1, 1, 1],\n                    [0, 0, 0, 0]\n                ]\n            ];\n        case 'J':\n            return [\n                [\n                    [0, 1, 0, 0],\n                    [0, 1, 0, 0],\n                    [1, 1, 0, 0],\n                    [0, 0, 0, 0]\n                ],\n                [\n                    [1, 0, 0, 0],\n                    [1, 1, 1, 0],\n                    [0, 0, 0, 0],\n                    [0, 0, 0, 0]\n                ],\n                [\n                    [0, 1, 1, 0],\n                    [0, 1, 0, 0],\n                    [0, 1, 0, 0],\n                    [0, 0, 0, 0]\n                ],\n                [\n                    [0, 0, 0, 0],\n                    [1, 1, 1, 0],\n                    [0, 0, 1, 0],\n                    [0, 0, 0, 0]\n                ]\n            ];\n        case 'L':\n            return [\n                [\n                    [0, 1, 0, 0],\n                    [0, 1, 0, 0],\n                    [0, 1, 1, 0],\n                    [0, 0, 0, 0]\n                ],\n                [\n                    [0, 0, 0, 0],\n                    [1, 1, 1, 0],\n                    [1, 0, 0, 0],\n                    [0, 0, 0, 0]\n                ],\n                [\n                    [1, 1, 0, 0],\n                    [0, 1, 0, 0],\n                    [0, 1, 0, 0],\n                    [0, 0, 0, 0]\n                ],\n                [\n                    [0, 0, 1, 0],\n                    [1, 1, 1, 0],\n                    [0, 0, 0, 0],\n                    [0, 0, 0, 0]\n                ]\n            ];\n        case 'O':\n            return [\n                [\n                    [1, 1, 0, 0],\n                    [1, 1, 0, 0],\n                    [0, 0, 0, 0],\n                    [0, 0, 0, 0]\n                ],\n                [\n                    [1, 1, 0, 0],\n                    [1, 1, 0, 0],\n                    [0, 0, 0, 0],\n                    [0, 0, 0, 0]\n                ],\n                [\n                    [1, 1, 0, 0],\n                    [1, 1, 0, 0],\n                    [0, 0, 0, 0],\n                    [0, 0, 0, 0]\n                ],\n                [\n                    [1, 1, 0, 0],\n                    [1, 1, 0, 0],\n                    [0, 0, 0, 0],\n                    [0, 0, 0, 0]\n                ]\n            ];\n        case 'S':\n            return [\n                [\n                    [0, 0, 0, 0],\n                    [0, 1, 1, 0],\n                    [1, 1, 0, 0],\n                    [0, 0, 0, 0]\n                ],\n                [\n                    [1, 0, 0, 0],\n                    [1, 1, 0, 0],\n                    [0, 1, 0, 0],\n                    [0, 0, 0, 0]\n                ],\n                [\n                    [0, 1, 1, 0],\n                    [1, 1, 0, 0],\n                    [0, 0, 0, 0],\n                    [0, 0, 0, 0]\n                ],\n                [\n                    [0, 1, 0, 0],\n                    [0, 1, 1, 0],\n                    [0, 0, 1, 0],\n                    [0, 0, 0, 0]\n                ]\n            ];\n        case 'T':\n            return [\n                [\n                    [0, 0, 0, 0],\n                    [1, 1, 1, 0],\n                    [0, 1, 0, 0],\n                    [0, 0, 0, 0]\n                ],\n                [\n                    [0, 1, 0, 0],\n                    [1, 1, 0, 0],\n                    [0, 1, 0, 0],\n                    [0, 0, 0, 0]\n                ],\n                [\n                    [0, 1, 0, 0],\n                    [1, 1, 1, 0],\n                    [0, 0, 0, 0],\n                    [0, 0, 0, 0]\n                ],\n                [\n                    [0, 1, 0, 0],\n                    [0, 1, 1, 0],\n                    [0, 1, 0, 0],\n                    [0, 0, 0, 0]\n                ]\n            ];\n        case 'Z':\n            return [\n                [\n                    [0, 0, 0, 0],\n                    [1, 1, 0, 0],\n                    [0, 1, 1, 0],\n                    [0, 0, 0, 0]\n                ],\n                [\n                    [0, 1, 0, 0],\n                    [1, 1, 0, 0],\n                    [1, 0, 0, 0],\n                    [0, 0, 0, 0]\n                ],\n                [\n                    [1, 1, 0, 0],\n                    [0, 1, 1, 0],\n                    [0, 0, 0, 0],\n                    [0, 0, 0, 0]\n                ],\n                [\n                    [0, 0, 1, 0],\n                    [0, 1, 1, 0],\n                    [0, 1, 0, 0],\n                    [0, 0, 0, 0]\n                ]\n            ];\n        default: {\n            var exhaustiveCheck = piece;\n            throw new Error(\"Unhandled color case: \".concat(exhaustiveCheck));\n        }\n    }\n};\nexport var getClassName = function (piece) {\n    switch (piece) {\n        case 'I':\n            return 'piece-i';\n        case 'J':\n            return 'piece-j';\n        case 'L':\n            return 'piece-l';\n        case 'O':\n            return 'piece-o';\n        case 'S':\n            return 'piece-s';\n        case 'T':\n            return 'piece-t';\n        case 'Z':\n            return 'piece-z';\n        case 'ghost':\n            return 'piece-preview';\n        default: {\n            var exhaustiveCheck = piece;\n            throw new Error(\"Unhandled piece case: \".concat(exhaustiveCheck));\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"module"}