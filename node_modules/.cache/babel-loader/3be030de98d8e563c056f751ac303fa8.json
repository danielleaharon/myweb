{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/\\u05E2\\u05D1\\u05D5\\u05D3\\u05D5\\u05EA \\u05DC\\u05D4\\u05D2\\u05E9\\u05D4/myweb/src/components/tetris/components/Stage.js\";\nimport React from 'react';\nimport { StyledStage } from '../styles/StyledStage';\nimport { TETROMINOS } from '../tetrominos';\nimport Cell from './Cell';\nexport default function Stage({\n  stage,\n  newGame\n}) {\n  const StageMain = () => React.createElement(StyledStage, {\n    width: stage[0].length,\n    height: stage.length,\n    id: \"stage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, stage.map(row => row.map((cell, x) => {\n    return React.createElement(Cell, {\n      key: x,\n      type: cell[0],\n      text: cell[2],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    });\n  })));\n\n  const StageStartPositon = () => {\n    const newStage = stage;\n    var y = 1;\n    Object.entries(TETROMINOS).forEach((obj, i) => {\n      obj[1].shape.forEach((value, x) => {\n        value.forEach((col, z) => {\n          console.log(y);\n\n          if (col !== 0) {\n            newStage[z + y][x + 2] = [col, 'clear', obj[1].text[x][z]];\n          }\n        });\n      }); // y=y+obj[1].shape.length;\n\n      y = y + 5;\n    });\n    return React.createElement(StyledStage, {\n      width: stage[0].length,\n      height: stage.length,\n      id: \"stage-start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, newStage.map(row => row.map((cell, x) => {\n      return React.createElement(Cell, {\n        key: x,\n        type: cell[0],\n        text: cell[2],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    })));\n  };\n\n  if (newGame) return StageStartPositon();else return StageMain();\n} // const Stage = ({ stage,newGame }) => ( { \n//     //  if(newGame){\n//   return  StageStartPositon(stage);\n// //   } else { StageMain(stage)\n//    }\n//   });\n// export default Stage;","map":{"version":3,"sources":["/Users/user/Desktop/עבודות להגשה/myweb/src/components/tetris/components/Stage.js"],"names":["React","StyledStage","TETROMINOS","Cell","Stage","stage","newGame","StageMain","length","map","row","cell","x","StageStartPositon","newStage","y","Object","entries","forEach","obj","i","shape","value","col","z","console","log","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,KAAF;AAAQC,EAAAA;AAAR,CAAf,EAAkC;AAC7C,QAAMC,SAAS,GAAG,MAEd,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEF,KAAK,CAAC,CAAD,CAAL,CAASG,MAA7B;AAAqC,IAAA,MAAM,EAAEH,KAAK,CAACG,MAAnD;AAA2D,IAAA,EAAE,EAAC,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIH,KAAK,CAACI,GAAN,CAAUC,GAAG,IAAIA,GAAG,CAACD,GAAJ,CAAQ,CAACE,IAAD,EAAOC,CAAP,KAAa;AACvC,WAAO,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,CAAX;AAAc,MAAA,IAAI,EAAED,IAAI,CAAC,CAAD,CAAxB;AAA6B,MAAA,IAAI,EAAEA,IAAI,CAAC,CAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAAsD,GADpC,CAAjB,CADJ,CAFJ;;AAOA,QAAME,iBAAiB,GAAG,MAAQ;AAE9B,UAAMC,QAAQ,GAACT,KAAf;AACA,QAAIU,CAAC,GAAC,CAAN;AACAC,IAAAA,MAAM,CAACC,OAAP,CAAef,UAAf,EAA2BgB,OAA3B,CAAmC,CAACC,GAAD,EAAOC,CAAP,KAAW;AAC1CD,MAAAA,GAAG,CAAC,CAAD,CAAH,CAAOE,KAAP,CAAaH,OAAb,CAAqB,CAACI,KAAD,EAAOV,CAAP,KAAW;AAC5BU,QAAAA,KAAK,CAACJ,OAAN,CAAc,CAACK,GAAD,EAAKC,CAAL,KAAS;AACrBC,UAAAA,OAAO,CAACC,GAAR,CAAYX,CAAZ;;AACE,cAAIQ,GAAG,KAAK,CAAZ,EAAe;AACXT,YAAAA,QAAQ,CAACU,CAAC,GAACT,CAAH,CAAR,CAAcH,CAAC,GAAC,CAAhB,IAAqB,CACnBW,GADmB,EAEnB,OAFmB,EAGnBJ,GAAG,CAAC,CAAD,CAAH,CAAOQ,IAAP,CAAYf,CAAZ,EAAeY,CAAf,CAHmB,CAArB;AAKD;AACN,SATD;AAWC,OAZL,EAD0C,CAetC;;AACAT,MAAAA,CAAC,GAACA,CAAC,GAAC,CAAJ;AAGP,KAnBD;AAoBF,WAAQ,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAEV,KAAK,CAAC,CAAD,CAAL,CAASG,MAA7B;AAAqC,MAAA,MAAM,EAAEH,KAAK,CAACG,MAAnD;AAA2D,MAAA,EAAE,EAAC,aAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACHM,QAAQ,CAACL,GAAT,CAAaC,GAAG,IAAIA,GAAG,CAACD,GAAJ,CAAQ,CAACE,IAAD,EAAOC,CAAP,KAAa;AAC1C,aAAO,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,CAAX;AAAc,QAAA,IAAI,EAAED,IAAI,CAAC,CAAD,CAAxB;AAA6B,QAAA,IAAI,EAAEA,IAAI,CAAC,CAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAAsD,KADjC,CAApB,CADG,CAAR;AAIK,GA5BP;;AA8BE,MAAGL,OAAH,EACA,OAAOO,iBAAiB,EAAxB,CADA,KAEO,OAAON,SAAS,EAAhB;AAEZ,C,CACD;AAEA;AACA;AACA;AACA;AACA;AAIA","sourcesContent":["import React from 'react';\nimport { StyledStage } from '../styles/StyledStage';\nimport { TETROMINOS } from '../tetrominos';\n\nimport Cell from './Cell';\n\nexport default function Stage({ stage,newGame }) {\n    const StageMain = () => (\n  \n        <StyledStage width={stage[0].length} height={stage.length} id=\"stage\">\n           {stage.map(row => row.map((cell, x) => {\n           return <Cell key={x} type={cell[0]} text={cell[2]} />}))}\n         </StyledStage>\n     );\n    const StageStartPositon = (  ) => {\n\n        const newStage=stage;\n        var y=1;\n        Object.entries(TETROMINOS).forEach((obj , i)=>{\n            obj[1].shape.forEach((value,x)=>{\n                value.forEach((col,z)=>{\n                  console.log(y)\n                    if (col !== 0) {\n                        newStage[z+y][x+2] = [\n                          col,\n                          'clear',\n                          obj[1].text[x][z]\n                        ];\n                      }\n                })\n              \n                });\n\n                // y=y+obj[1].shape.length;\n                y=y+5;\n\n           \n        })\n      return  <StyledStage width={stage[0].length} height={stage.length} id=\"stage-start\">\n          {newStage.map(row => row.map((cell, x) => {\n          return <Cell key={x} type={cell[0]} text={cell[2]} />}))}\n        </StyledStage>\n          }\n      ;\n      if(newGame)\n      return StageStartPositon()\n      else   return StageMain()\n\n}\n// const Stage = ({ stage,newGame }) => ( { \n \n//     //  if(newGame){\n//   return  StageStartPositon(stage);\n// //   } else { StageMain(stage)\n//    }\n//   });\n\n\n\n// export default Stage;"]},"metadata":{},"sourceType":"module"}