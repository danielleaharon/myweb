{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nconst defaultStyle = {\n  zIndex: '1',\n  position: 'absolute',\n  pointerEvents: 'none',\n  color: '#a0a7b4',\n  backgroundColor: '#29323c',\n  padding: '10px',\n  top: '0',\n  left: '0',\n  display: 'none'\n};\nexport default class Tooltip {\n  constructor(canvas) {\n    _defineProperty(this, \"el\", null);\n\n    _defineProperty(this, \"isVisible\", false);\n\n    const canvasParent = canvas.parentElement;\n\n    if (canvasParent) {\n      this.el = document.createElement('div');\n      this.el.className = 'deck-tooltip';\n      Object.assign(this.el.style, defaultStyle);\n      canvasParent.appendChild(this.el);\n    }\n  }\n\n  setTooltip(displayInfo, x, y) {\n    const el = this.el;\n\n    if (!el) {\n      return;\n    }\n\n    if (typeof displayInfo === 'string') {\n      el.innerText = displayInfo;\n    } else if (!displayInfo) {\n      this.isVisible = false;\n      el.style.display = 'none';\n      return;\n    } else {\n      if (displayInfo.text) {\n        el.innerText = displayInfo.text;\n      }\n\n      if (displayInfo.html) {\n        el.innerHTML = displayInfo.html;\n      }\n\n      if (displayInfo.className) {\n        el.className = displayInfo.className;\n      }\n\n      Object.assign(el.style, displayInfo.style);\n    }\n\n    this.isVisible = true;\n    el.style.display = 'block';\n    el.style.transform = \"translate(\".concat(x, \"px, \").concat(y, \"px)\");\n  }\n\n  remove() {\n    if (this.el) {\n      this.el.remove();\n      this.el = null;\n    }\n  }\n\n}","map":{"version":3,"sources":["../../../src/lib/tooltip.ts"],"names":["defaultStyle","zIndex","position","pointerEvents","color","backgroundColor","padding","top","left","display","constructor","canvasParent","canvas","document","Object","setTooltip","el","displayInfo","remove"],"mappings":";AAqBA,MAAMA,YAA0C,GAAG;AACjDC,EAAAA,MAAM,EAD2C,GAAA;AAEjDC,EAAAA,QAAQ,EAFyC,UAAA;AAGjDC,EAAAA,aAAa,EAHoC,MAAA;AAIjDC,EAAAA,KAAK,EAJ4C,SAAA;AAKjDC,EAAAA,eAAe,EALkC,SAAA;AAMjDC,EAAAA,OAAO,EAN0C,MAAA;AAOjDC,EAAAA,GAAG,EAP8C,GAAA;AAQjDC,EAAAA,IAAI,EAR6C,GAAA;AASjDC,EAAAA,OAAO,EAAE;AATwC,CAAnD;AAsBA,eAAe,MAAA,OAAA,CAAc;AAK3BC,EAAAA,WAAW,CAAA,MAAA,EAA4B;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,IAAA,EAJH,IAIG,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,WAAA,EAFlB,KAEkB,CAAA;;AACrC,UAAMC,YAAY,GAAGC,MAAM,CAA3B,aAAA;;AACA,QAAA,YAAA,EAAkB;AAChB,WAAA,EAAA,GAAUC,QAAQ,CAARA,aAAAA,CAAV,KAAUA,CAAV;AACA,WAAA,EAAA,CAAA,SAAA,GAAA,cAAA;AACAC,MAAAA,MAAM,CAANA,MAAAA,CAAc,KAAA,EAAA,CAAdA,KAAAA,EAAAA,YAAAA;AACAH,MAAAA,YAAY,CAAZA,WAAAA,CAAyB,KAAzBA,EAAAA;AACD;AACF;;AAEDI,EAAAA,UAAU,CAAA,WAAA,EAAA,CAAA,EAAA,CAAA,EAA4D;AACpE,UAAMC,EAAE,GAAG,KAAX,EAAA;;AACA,QAAI,CAAJ,EAAA,EAAS;AACP;AACD;;AAED,QAAI,OAAA,WAAA,KAAJ,QAAA,EAAqC;AACnCA,MAAAA,EAAE,CAAFA,SAAAA,GAAAA,WAAAA;AADF,KAAA,MAEO,IAAI,CAAJ,WAAA,EAAkB;AACvB,WAAA,SAAA,GAAA,KAAA;AACAA,MAAAA,EAAE,CAAFA,KAAAA,CAAAA,OAAAA,GAAAA,MAAAA;AACA;AAHK,KAAA,MAIA;AACL,UAAIC,WAAW,CAAf,IAAA,EAAsB;AACpBD,QAAAA,EAAE,CAAFA,SAAAA,GAAeC,WAAW,CAA1BD,IAAAA;AACD;;AACD,UAAIC,WAAW,CAAf,IAAA,EAAsB;AACpBD,QAAAA,EAAE,CAAFA,SAAAA,GAAeC,WAAW,CAA1BD,IAAAA;AACD;;AACD,UAAIC,WAAW,CAAf,SAAA,EAA2B;AACzBD,QAAAA,EAAE,CAAFA,SAAAA,GAAeC,WAAW,CAA1BD,SAAAA;AACD;;AACDF,MAAAA,MAAM,CAANA,MAAAA,CAAcE,EAAE,CAAhBF,KAAAA,EAAwBG,WAAW,CAAnCH,KAAAA;AACD;;AACD,SAAA,SAAA,GAAA,IAAA;AACAE,IAAAA,EAAE,CAAFA,KAAAA,CAAAA,OAAAA,GAAAA,OAAAA;AACAA,IAAAA,EAAE,CAAFA,KAAAA,CAAAA,SAAAA,GAAAA,aAAAA,MAAAA,CAAAA,CAAAA,EAAAA,MAAAA,EAAAA,MAAAA,CAAAA,CAAAA,EAAAA,KAAAA,CAAAA;AACD;;AAEDE,EAAAA,MAAM,GAAS;AACb,QAAI,KAAJ,EAAA,EAAa;AACX,WAAA,EAAA,CAAA,MAAA;AACA,WAAA,EAAA,GAAA,IAAA;AACD;AACF;;AAjD0B","sourcesContent":["// Copyright (c) 2015 - 2019 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* global document */\nconst defaultStyle: Partial<CSSStyleDeclaration> = {\n  zIndex: '1',\n  position: 'absolute',\n  pointerEvents: 'none',\n  color: '#a0a7b4',\n  backgroundColor: '#29323c',\n  padding: '10px',\n  top: '0',\n  left: '0',\n  display: 'none'\n};\n\nexport type TooltipContent =\n  | null\n  | string\n  | {\n      text?: string;\n      html?: string;\n      className?: string;\n      style?: Partial<CSSStyleDeclaration>;\n    };\n\nexport default class Tooltip {\n  private el: HTMLDivElement | null = null;\n\n  isVisible: boolean = false;\n\n  constructor(canvas: HTMLCanvasElement) {\n    const canvasParent = canvas.parentElement;\n    if (canvasParent) {\n      this.el = document.createElement('div');\n      this.el.className = 'deck-tooltip';\n      Object.assign(this.el.style, defaultStyle);\n      canvasParent.appendChild(this.el);\n    }\n  }\n\n  setTooltip(displayInfo: TooltipContent, x?: number, y?: number): void {\n    const el = this.el;\n    if (!el) {\n      return;\n    }\n\n    if (typeof displayInfo === 'string') {\n      el.innerText = displayInfo;\n    } else if (!displayInfo) {\n      this.isVisible = false;\n      el.style.display = 'none';\n      return;\n    } else {\n      if (displayInfo.text) {\n        el.innerText = displayInfo.text;\n      }\n      if (displayInfo.html) {\n        el.innerHTML = displayInfo.html;\n      }\n      if (displayInfo.className) {\n        el.className = displayInfo.className;\n      }\n      Object.assign(el.style, displayInfo.style);\n    }\n    this.isVisible = true;\n    el.style.display = 'block';\n    el.style.transform = `translate(${x}px, ${y}px)`;\n  }\n\n  remove(): void {\n    if (this.el) {\n      this.el.remove();\n      this.el = null;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}