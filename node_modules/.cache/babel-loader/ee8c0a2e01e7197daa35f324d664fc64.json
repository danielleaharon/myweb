{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/\\u05E2\\u05D1\\u05D5\\u05D3\\u05D5\\u05EA \\u05DC\\u05D4\\u05D2\\u05E9\\u05D4/myweb/src/components/tetris/components/Stage.js\";\nimport React from 'react';\nimport { StyledStage } from '../styles/StyledStage';\nimport { TETROMINOS } from '../tetrominos';\nimport Cell from './Cell';\nexport default function Stage({\n  stage,\n  newGame\n}) {\n  const StageMain = () => React.createElement(StyledStage, {\n    width: stage[0].length,\n    height: stage.length,\n    id: \"stage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, stage.map(row => row.map((cell, x) => {\n    // console.log(cell)\n    return React.createElement(Cell, {\n      key: x,\n      type: cell[0],\n      text: cell[2],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  })));\n\n  const StageStartPositon = () => React.createElement(StyledStage, {\n    width: stage[0].length,\n    height: stage.length,\n    id: \"stage-start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, stage.reverse().map(row => row.map((cell, x) => {\n    console.log(TETROMINOS[0]);\n    return React.createElement(Cell, {\n      key: x,\n      type: cell[0],\n      text: cell[2],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n  })));\n\n  if (newGame) return StageStartPositon();else return StageMain();\n} // const Stage = ({ stage,newGame }) => ( { \n//     //  if(newGame){\n//   return  StageStartPositon(stage);\n// //   } else { StageMain(stage)\n//    }\n//   });\n// export default Stage;","map":{"version":3,"sources":["/Users/user/Desktop/עבודות להגשה/myweb/src/components/tetris/components/Stage.js"],"names":["React","StyledStage","TETROMINOS","Cell","Stage","stage","newGame","StageMain","length","map","row","cell","x","StageStartPositon","reverse","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,UAAT,QAA2B,eAA3B;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,KAAF;AAAQC,EAAAA;AAAR,CAAf,EAAkC;AAC7C,QAAMC,SAAS,GAAG,MAEd,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEF,KAAK,CAAC,CAAD,CAAL,CAASG,MAA7B;AAAqC,IAAA,MAAM,EAAEH,KAAK,CAACG,MAAnD;AAA2D,IAAA,EAAE,EAAC,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIH,KAAK,CAACI,GAAN,CAAUC,GAAG,IAAIA,GAAG,CAACD,GAAJ,CAAQ,CAACE,IAAD,EAAOC,CAAP,KAAa;AACvC;AACA,WAAO,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,CAAX;AAAc,MAAA,IAAI,EAAED,IAAI,CAAC,CAAD,CAAxB;AAA6B,MAAA,IAAI,EAAEA,IAAI,CAAC,CAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAAsD,GAFpC,CAAjB,CADJ,CAFJ;;AAQA,QAAME,iBAAiB,GAAG,MACtB,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAER,KAAK,CAAC,CAAD,CAAL,CAASG,MAA7B;AAAqC,IAAA,MAAM,EAAEH,KAAK,CAACG,MAAnD;AAA2D,IAAA,EAAE,EAAC,aAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACS,OAAN,GAAgBL,GAAhB,CAAoBC,GAAG,IAAIA,GAAG,CAACD,GAAJ,CAAQ,CAACE,IAAD,EAAOC,CAAP,KAAa;AAC/CG,IAAAA,OAAO,CAACC,GAAR,CAAYd,UAAU,CAAC,CAAD,CAAtB;AACF,WAAO,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEU,CAAX;AAAc,MAAA,IAAI,EAAED,IAAI,CAAC,CAAD,CAAxB;AAA6B,MAAA,IAAI,EAAEA,IAAI,CAAC,CAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAAsD,GAF1B,CAA3B,CADH,CADJ;;AAOE,MAAGL,OAAH,EACA,OAAOO,iBAAiB,EAAxB,CADA,KAEO,OAAON,SAAS,EAAhB;AAEZ,C,CACD;AAEA;AACA;AACA;AACA;AACA;AAIA","sourcesContent":["import React from 'react';\nimport { StyledStage } from '../styles/StyledStage';\nimport { TETROMINOS } from '../tetrominos';\n\nimport Cell from './Cell';\n\nexport default function Stage({ stage,newGame }) {\n    const StageMain = () => (\n  \n        <StyledStage width={stage[0].length} height={stage.length} id=\"stage\">\n           {stage.map(row => row.map((cell, x) => {\n           // console.log(cell)\n           return <Cell key={x} type={cell[0]} text={cell[2]} />}))}\n         </StyledStage>\n     );\n    const StageStartPositon = (  ) => (\n        <StyledStage width={stage[0].length} height={stage.length} id=\"stage-start\">\n          {stage.reverse().map(row => row.map((cell, x) => {\n            console.log(TETROMINOS[0])\n          return <Cell key={x} type={cell[0]} text={cell[2]} />}))}\n        </StyledStage>\n      );\n      if(newGame)\n      return StageStartPositon()\n      else   return StageMain()\n\n}\n// const Stage = ({ stage,newGame }) => ( { \n \n//     //  if(newGame){\n//   return  StageStartPositon(stage);\n// //   } else { StageMain(stage)\n//    }\n//   });\n\n\n\n// export default Stage;"]},"metadata":{},"sourceType":"module"}